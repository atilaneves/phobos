// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'std.algorithm.comparison', kind: "module", path: './std/algorithm/comparison.html', attributes: []},
{name: 'std.algorithm.comparison.among', kind: "functiondeclaration", path: './std/algorithm/comparison/among.html', attributes: []},
{name: 'std.algorithm.comparison.among.among', kind: "functiondeclaration", path: './std/algorithm/comparison/among.among.html', attributes: []},
{name: 'std.algorithm.comparison.castSwitch', kind: "functiondeclaration", path: './std/algorithm/comparison/cast_switch.html', attributes: ["auto"]},
{name: 'std.algorithm.comparison.clamp', kind: "functiondeclaration", path: './std/algorithm/comparison/clamp.html', attributes: ["auto"]},
{name: 'std.algorithm.comparison.cmp', kind: "functiondeclaration", path: './std/algorithm/comparison/cmp.html', attributes: []},
{name: 'std.algorithm.comparison.EditOp', kind: "enumdeclaration", path: './std/algorithm/comparison/edit_op.html', attributes: []},
{name: 'std.algorithm.comparison.EditOp.insert', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.insert.html', attributes: []},
{name: 'std.algorithm.comparison.EditOp.none', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.none.html', attributes: []},
{name: 'std.algorithm.comparison.EditOp.remove', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.remove.html', attributes: []},
{name: 'std.algorithm.comparison.EditOp.substitute', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.substitute.html', attributes: []},
{name: 'std.algorithm.comparison.equal', kind: "templatedeclaration", path: './std/algorithm/comparison/equal.html', attributes: []},
{name: 'std.algorithm.comparison.equal.equal', kind: "functiondeclaration", path: './std/algorithm/comparison/equal.equal.html', attributes: []},
{name: 'std.algorithm.comparison.levenshteinDistance', kind: "functiondeclaration", path: './std/algorithm/comparison/levenshtein_distance.html', attributes: []},
{name: 'std.algorithm.comparison.levenshteinDistanceAndPath', kind: "functiondeclaration", path: './std/algorithm/comparison/levenshtein_distance_and_path.html', attributes: []},
{name: 'std.algorithm.comparison.max', kind: "functiondeclaration", path: './std/algorithm/comparison/max.html', attributes: []},
{name: 'std.algorithm.comparison.min', kind: "functiondeclaration", path: './std/algorithm/comparison/min.html', attributes: []},
{name: 'std.algorithm.comparison.mismatch', kind: "functiondeclaration", path: './std/algorithm/comparison/mismatch.html', attributes: []},
{name: 'std.algorithm.comparison.predSwitch', kind: "functiondeclaration", path: './std/algorithm/comparison/pred_switch.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration', kind: "module", path: './std/algorithm/iteration.html', attributes: []},
{name: 'std.algorithm.iteration.cache', kind: "functiondeclaration", path: './std/algorithm/iteration/cache.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.cacheBidirectional', kind: "functiondeclaration", path: './std/algorithm/iteration/cache_bidirectional.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.chunkBy', kind: "functiondeclaration", path: './std/algorithm/iteration/chunk_by.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.each', kind: "templatedeclaration", path: './std/algorithm/iteration/each.html', attributes: []},
{name: 'std.algorithm.iteration.each.each', kind: "functiondeclaration", path: './std/algorithm/iteration/each.each.html', attributes: []},
{name: 'std.algorithm.iteration.filter', kind: "templatedeclaration", path: './std/algorithm/iteration/filter.html', attributes: []},
{name: 'std.algorithm.iteration.filter.filter', kind: "functiondeclaration", path: './std/algorithm/iteration/filter.filter.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.filterBidirectional', kind: "templatedeclaration", path: './std/algorithm/iteration/filter_bidirectional.html', attributes: []},
{name: 'std.algorithm.iteration.filterBidirectional.filterBidirectional', kind: "functiondeclaration", path: './std/algorithm/iteration/filter_bidirectional.filter_bidirectional.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.group', kind: "functiondeclaration", path: './std/algorithm/iteration/group.html', attributes: []},
{name: 'std.algorithm.iteration.joiner', kind: "functiondeclaration", path: './std/algorithm/iteration/joiner.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.map', kind: "templatedeclaration", path: './std/algorithm/iteration/map.html', attributes: []},
{name: 'std.algorithm.iteration.map.map', kind: "functiondeclaration", path: './std/algorithm/iteration/map.map.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.reduce', kind: "templatedeclaration", path: './std/algorithm/iteration/reduce.html', attributes: []},
{name: 'std.algorithm.iteration.reduce.reduce', kind: "functiondeclaration", path: './std/algorithm/iteration/reduce.reduce.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.splitter', kind: "functiondeclaration", path: './std/algorithm/iteration/splitter.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.sum', kind: "functiondeclaration", path: './std/algorithm/iteration/sum.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.uniq', kind: "functiondeclaration", path: './std/algorithm/iteration/uniq.html', attributes: ["auto"]},
{name: 'std.algorithm.mutation', kind: "module", path: './std/algorithm/mutation.html', attributes: []},
{name: 'std.algorithm.mutation.bringToFront', kind: "functiondeclaration", path: './std/algorithm/mutation/bring_to_front.html', attributes: []},
{name: 'std.algorithm.mutation.copy', kind: "functiondeclaration", path: './std/algorithm/mutation/copy.html', attributes: []},
{name: 'std.algorithm.mutation.fill', kind: "functiondeclaration", path: './std/algorithm/mutation/fill.html', attributes: []},
{name: 'std.algorithm.mutation.initializeAll', kind: "functiondeclaration", path: './std/algorithm/mutation/initialize_all.html', attributes: []},
{name: 'std.algorithm.mutation.move', kind: "functiondeclaration", path: './std/algorithm/mutation/move.html', attributes: []},
{name: 'std.algorithm.mutation.moveAll', kind: "functiondeclaration", path: './std/algorithm/mutation/move_all.html', attributes: []},
{name: 'std.algorithm.mutation.moveSome', kind: "functiondeclaration", path: './std/algorithm/mutation/move_some.html', attributes: []},
{name: 'std.algorithm.mutation.remove', kind: "functiondeclaration", path: './std/algorithm/mutation/remove.html', attributes: []},
{name: 'std.algorithm.mutation.reverse', kind: "functiondeclaration", path: './std/algorithm/mutation/reverse.html', attributes: []},
{name: 'std.algorithm.mutation.strip', kind: "functiondeclaration", path: './std/algorithm/mutation/strip.html', attributes: []},
{name: 'std.algorithm.mutation.stripLeft', kind: "functiondeclaration", path: './std/algorithm/mutation/strip_left.html', attributes: []},
{name: 'std.algorithm.mutation.stripRight', kind: "functiondeclaration", path: './std/algorithm/mutation/strip_right.html', attributes: []},
{name: 'std.algorithm.mutation.swap', kind: "functiondeclaration", path: './std/algorithm/mutation/swap.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.algorithm.mutation.swapRanges', kind: "functiondeclaration", path: './std/algorithm/mutation/swap_ranges.html', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy', kind: "enumdeclaration", path: './std/algorithm/mutation/swap_strategy.html', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy.semistable', kind: "enummemberdeclaration", path: './std/algorithm/mutation/swap_strategy.semistable.html', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy.stable', kind: "enummemberdeclaration", path: './std/algorithm/mutation/swap_strategy.stable.html', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy.unstable', kind: "enummemberdeclaration", path: './std/algorithm/mutation/swap_strategy.unstable.html', attributes: []},
{name: 'std.algorithm.mutation.uninitializedFill', kind: "functiondeclaration", path: './std/algorithm/mutation/uninitialized_fill.html', attributes: []},
{name: 'std.algorithm.searching', kind: "module", path: './std/algorithm/searching.html', attributes: []},
{name: 'std.algorithm.searching.all', kind: "templatedeclaration", path: './std/algorithm/searching/all.html', attributes: []},
{name: 'std.algorithm.searching.all.all', kind: "functiondeclaration", path: './std/algorithm/searching/all.all.html', attributes: []},
{name: 'std.algorithm.searching.any', kind: "templatedeclaration", path: './std/algorithm/searching/any.html', attributes: []},
{name: 'std.algorithm.searching.any.any', kind: "functiondeclaration", path: './std/algorithm/searching/any.any.html', attributes: []},
{name: 'std.algorithm.searching.balancedParens', kind: "functiondeclaration", path: './std/algorithm/searching/balanced_parens.html', attributes: []},
{name: 'std.algorithm.searching.boyerMooreFinder', kind: "functiondeclaration", path: './std/algorithm/searching/boyer_moore_finder.html', attributes: []},
{name: 'std.algorithm.searching.BoyerMooreFinder', kind: "structdeclaration", path: './std/algorithm/searching/boyer_moore_finder.html', attributes: []},
{name: 'std.algorithm.searching.canFind', kind: "templatedeclaration", path: './std/algorithm/searching/can_find.html', attributes: []},
{name: 'std.algorithm.searching.canFind.canFind', kind: "functiondeclaration", path: './std/algorithm/searching/can_find.can_find.html', attributes: []},
{name: 'std.algorithm.searching.commonPrefix', kind: "functiondeclaration", path: './std/algorithm/searching/common_prefix.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.count', kind: "functiondeclaration", path: './std/algorithm/searching/count.html', attributes: []},
{name: 'std.algorithm.searching.countUntil', kind: "functiondeclaration", path: './std/algorithm/searching/count_until.html', attributes: []},
{name: 'std.algorithm.searching.endsWith', kind: "functiondeclaration", path: './std/algorithm/searching/ends_with.html', attributes: []},
{name: 'std.algorithm.searching.find', kind: "functiondeclaration", path: './std/algorithm/searching/find.html', attributes: []},
{name: 'std.algorithm.searching.findAdjacent', kind: "functiondeclaration", path: './std/algorithm/searching/find_adjacent.html', attributes: []},
{name: 'std.algorithm.searching.findAmong', kind: "functiondeclaration", path: './std/algorithm/searching/find_among.html', attributes: []},
{name: 'std.algorithm.searching.findSkip', kind: "functiondeclaration", path: './std/algorithm/searching/find_skip.html', attributes: []},
{name: 'std.algorithm.searching.findSplit', kind: "functiondeclaration", path: './std/algorithm/searching/find_split.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.findSplitAfter', kind: "functiondeclaration", path: './std/algorithm/searching/find_split_after.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.findSplitBefore', kind: "functiondeclaration", path: './std/algorithm/searching/find_split_before.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.minCount', kind: "functiondeclaration", path: './std/algorithm/searching/min_count.html', attributes: []},
{name: 'std.algorithm.searching.minPos', kind: "functiondeclaration", path: './std/algorithm/searching/min_pos.html', attributes: []},
{name: 'std.algorithm.searching.OpenRight', kind: "enumdeclaration", path: './std/algorithm/searching/open_right.html', attributes: []},
{name: 'std.algorithm.searching.OpenRight.no', kind: "enummemberdeclaration", path: './std/algorithm/searching/open_right.no.html', attributes: []},
{name: 'std.algorithm.searching.OpenRight.yes', kind: "enummemberdeclaration", path: './std/algorithm/searching/open_right.yes.html', attributes: []},
{name: 'std.algorithm.searching.skipOver', kind: "functiondeclaration", path: './std/algorithm/searching/skip_over.html', attributes: []},
{name: 'std.algorithm.searching.startsWith', kind: "functiondeclaration", path: './std/algorithm/searching/starts_with.html', attributes: []},
{name: 'std.algorithm.searching.until', kind: "functiondeclaration", path: './std/algorithm/searching/until.html', attributes: []},
{name: 'std.algorithm.setops', kind: "module", path: './std/algorithm/setops.html', attributes: []},
{name: 'std.algorithm.setops.cartesianProduct', kind: "functiondeclaration", path: './std/algorithm/setops/cartesian_product.html', attributes: ["auto"]},
{name: 'std.algorithm.setops.largestPartialIntersection', kind: "functiondeclaration", path: './std/algorithm/setops/largest_partial_intersection.html', attributes: []},
{name: 'std.algorithm.setops.largestPartialIntersectionWeighted', kind: "functiondeclaration", path: './std/algorithm/setops/largest_partial_intersection_weighted.html', attributes: []},
{name: 'std.algorithm.setops.NWayUnion', kind: "structdeclaration", path: './std/algorithm/setops/n_way_union.html', attributes: []},
{name: 'std.algorithm.setops.nWayUnion', kind: "functiondeclaration", path: './std/algorithm/setops/n_way_union.html', attributes: []},
{name: 'std.algorithm.setops.SetDifference', kind: "structdeclaration", path: './std/algorithm/setops/set_difference.html', attributes: []},
{name: 'std.algorithm.setops.setDifference', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.html', attributes: []},
{name: 'std.algorithm.setops.SetIntersection', kind: "structdeclaration", path: './std/algorithm/setops/set_intersection.html', attributes: []},
{name: 'std.algorithm.setops.setIntersection', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.html', attributes: []},
{name: 'std.algorithm.setops.SetSymmetricDifference', kind: "structdeclaration", path: './std/algorithm/setops/set_symmetric_difference.html', attributes: []},
{name: 'std.algorithm.setops.setSymmetricDifference', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.html', attributes: []},
{name: 'std.algorithm.setops.SetUnion', kind: "structdeclaration", path: './std/algorithm/setops/set_union.html', attributes: []},
{name: 'std.algorithm.setops.setUnion', kind: "functiondeclaration", path: './std/algorithm/setops/set_union.html', attributes: []},
{name: 'std.algorithm.sorting', kind: "module", path: './std/algorithm/sorting.html', attributes: []},
{name: 'std.algorithm.sorting.completeSort', kind: "functiondeclaration", path: './std/algorithm/sorting/complete_sort.html', attributes: []},
{name: 'std.algorithm.sorting.isPartitioned', kind: "functiondeclaration", path: './std/algorithm/sorting/is_partitioned.html', attributes: []},
{name: 'std.algorithm.sorting.isSorted', kind: "functiondeclaration", path: './std/algorithm/sorting/is_sorted.html', attributes: []},
{name: 'std.algorithm.sorting.makeIndex', kind: "functiondeclaration", path: './std/algorithm/sorting/make_index.html', attributes: []},
{name: 'std.algorithm.sorting.multiSort', kind: "templatedeclaration", path: './std/algorithm/sorting/multi_sort.html', attributes: []},
{name: 'std.algorithm.sorting.multiSort.multiSort', kind: "functiondeclaration", path: './std/algorithm/sorting/multi_sort.multi_sort.html', attributes: []},
{name: 'std.algorithm.sorting.nextEvenPermutation', kind: "functiondeclaration", path: './std/algorithm/sorting/next_even_permutation.html', attributes: []},
{name: 'std.algorithm.sorting.nextPermutation', kind: "functiondeclaration", path: './std/algorithm/sorting/next_permutation.html', attributes: []},
{name: 'std.algorithm.sorting.partialSort', kind: "functiondeclaration", path: './std/algorithm/sorting/partial_sort.html', attributes: []},
{name: 'std.algorithm.sorting.partition', kind: "functiondeclaration", path: './std/algorithm/sorting/partition.html', attributes: []},
{name: 'std.algorithm.sorting.partition3', kind: "functiondeclaration", path: './std/algorithm/sorting/partition3.html', attributes: ["auto"]},
{name: 'std.algorithm.sorting.schwartzSort', kind: "functiondeclaration", path: './std/algorithm/sorting/schwartz_sort.html', attributes: []},
{name: 'std.algorithm.sorting.sort', kind: "functiondeclaration", path: './std/algorithm/sorting/sort.html', attributes: []},
{name: 'std.algorithm.sorting.SortOutput', kind: "enumdeclaration", path: './std/algorithm/sorting/sort_output.html', attributes: []},
{name: 'std.algorithm.sorting.SortOutput.no', kind: "enummemberdeclaration", path: './std/algorithm/sorting/sort_output.no.html', attributes: []},
{name: 'std.algorithm.sorting.SortOutput.yes', kind: "enummemberdeclaration", path: './std/algorithm/sorting/sort_output.yes.html', attributes: []},
{name: 'std.algorithm.sorting.topN', kind: "functiondeclaration", path: './std/algorithm/sorting/top.html', attributes: []},
{name: 'std.algorithm.sorting.topNCopy', kind: "functiondeclaration", path: './std/algorithm/sorting/top_n_copy.html', attributes: []},
{name: 'std.algorithm.sorting.topNIndex', kind: "functiondeclaration", path: './std/algorithm/sorting/top_n_index.html', attributes: []},
{name: 'std.container.array', kind: "module", path: './std/container/array.html', attributes: []},
{name: 'std.container.array.Array', kind: "structdeclaration", path: './std/container/array/array.html', attributes: []},
{name: 'std.container.array.Array.back', kind: "functiondeclaration", path: './std/container/array/array.back.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.array.Array.capacity', kind: "functiondeclaration", path: './std/container/array/array.capacity.html', attributes: ["property"]},
{name: 'std.container.array.Array.clear', kind: "functiondeclaration", path: './std/container/array/array.clear.html', attributes: []},
{name: 'std.container.array.Array.ConstRange', kind: "aliasdeclaration", path: './std/container/array/array.const_range.html', attributes: []},
{name: 'std.container.array.Array.dup', kind: "functiondeclaration", path: './std/container/array/array.dup.html', attributes: ["property"]},
{name: 'std.container.array.Array.empty', kind: "functiondeclaration", path: './std/container/array/array.empty.html', attributes: ["const", "property"]},
{name: 'std.container.array.Array.front', kind: "functiondeclaration", path: './std/container/array/array.front.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.array.Array.ImmutableRange', kind: "aliasdeclaration", path: './std/container/array/array.immutable_range.html', attributes: []},
{name: 'std.container.array.Array.insert', kind: "aliasdeclaration", path: './std/container/array/array.insert.html', attributes: []},
{name: 'std.container.array.Array.insertAfter', kind: "templatedeclaration", path: './std/container/array/array.insert_after.html', attributes: []},
{name: 'std.container.array.Array.insertAfter.insertAfter', kind: "functiondeclaration", path: './std/container/array/array.insert_after.insert_after.html', attributes: []},
{name: 'std.container.array.Array.insertBack', kind: "templatedeclaration", path: './std/container/array/array.insert_back.html', attributes: []},
{name: 'std.container.array.Array.insertBack.insertBack', kind: "functiondeclaration", path: './std/container/array/array.insert_back.insert_back.html', attributes: []},
{name: 'std.container.array.Array.insertBefore', kind: "templatedeclaration", path: './std/container/array/array.insert_before.html', attributes: []},
{name: 'std.container.array.Array.insertBefore.insertBefore', kind: "functiondeclaration", path: './std/container/array/array.insert_before.insert_before.html', attributes: []},
{name: 'std.container.array.Array.length', kind: "functiondeclaration", path: './std/container/array/array.length.html', attributes: ["property"]},
{name: 'std.container.array.Array.linearRemove', kind: "functiondeclaration", path: './std/container/array/array.linear_remove.html', attributes: []},
{name: 'std.container.array.Array.opBinary', kind: "templatedeclaration", path: './std/container/array/array.op_binary.html', attributes: []},
{name: 'std.container.array.Array.opBinary.opBinary', kind: "functiondeclaration", path: './std/container/array/array.op_binary.op_binary.html', attributes: []},
{name: 'std.container.array.Array.opDollar', kind: "functiondeclaration", path: './std/container/array/array.op_dollar.html', attributes: ["const"]},
{name: 'std.container.array.Array.opEquals', kind: "functiondeclaration", path: './std/container/array/array.op_equals.html', attributes: ["const"]},
{name: 'std.container.array.Array.opIndex', kind: "functiondeclaration", path: './std/container/array/array.op_index.html', attributes: ["inout", "ref"]},
{name: 'std.container.array.Array.opOpAssign', kind: "templatedeclaration", path: './std/container/array/array.op_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opOpAssign.opOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_op_assign.op_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opSlice', kind: "functiondeclaration", path: './std/container/array/array.op_slice.html', attributes: []},
{name: 'std.container.array.Array.opSliceAssign', kind: "functiondeclaration", path: './std/container/array/array.op_slice_assign.html', attributes: []},
{name: 'std.container.array.Array.opSliceOpAssign', kind: "templatedeclaration", path: './std/container/array/array.op_slice_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opSliceOpAssign.opSliceOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_slice_op_assign.op_slice_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opSliceUnary', kind: "templatedeclaration", path: './std/container/array/array.op_slice_unary.html', attributes: []},
{name: 'std.container.array.Array.opSliceUnary.opSliceUnary', kind: "functiondeclaration", path: './std/container/array/array.op_slice_unary.op_slice_unary.html', attributes: []},
{name: 'std.container.array.Array.Range', kind: "aliasdeclaration", path: './std/container/array/array.range.html', attributes: []},
{name: 'std.container.array.Array.removeAny', kind: "functiondeclaration", path: './std/container/array/array.remove_any.html', attributes: []},
{name: 'std.container.array.Array.removeBack', kind: "functiondeclaration", path: './std/container/array/array.remove_back.html', attributes: []},
{name: 'std.container.array.Array.replace', kind: "templatedeclaration", path: './std/container/array/array.replace.html', attributes: []},
{name: 'std.container.array.Array.replace.replace', kind: "functiondeclaration", path: './std/container/array/array.replace.replace.html', attributes: []},
{name: 'std.container.array.Array.reserve', kind: "functiondeclaration", path: './std/container/array/array.reserve.html', attributes: []},
{name: 'std.container.array.Array.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/array/array.stable_remove_any.html', attributes: []},
{name: 'std.container.array.Array.stableRemoveBack', kind: "aliasdeclaration", path: './std/container/array/array.stable_remove_back.html', attributes: []},
{name: 'std.container.array.Array.this', kind: "templatedeclaration", path: './std/container/array/array.this.html', attributes: []},
{name: 'std.container.array.Array.this.this', kind: "functiondeclaration", path: './std/container/array/array.this.this.html', attributes: []},
{name: 'std.container.array.Array.linearInsert', kind: "aliasdeclaration", path: './std/container/array/array.linear_insert.html', attributes: []},
{name: 'std.container.array.Array.moveAt', kind: "functiondeclaration", path: './std/container/array/array.move_at.html', attributes: []},
{name: 'std.container.array.Array.opIndexAssign', kind: "functiondeclaration", path: './std/container/array/array.op_index_assign.html', attributes: []},
{name: 'std.container.array.Array.opIndexOpAssign', kind: "templatedeclaration", path: './std/container/array/array.op_index_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opIndexOpAssign.opIndexOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_index_op_assign.op_index_op_assign.html', attributes: []},
{name: 'std.container.array.Array.Range.back', kind: "functiondeclaration", path: './std/container/array/array.range.back.html', attributes: ["property"]},
{name: 'std.container.array.Array.Range.empty', kind: "functiondeclaration", path: './std/container/array/array.range.empty.html', attributes: ["property"]},
{name: 'std.container.array.Array.Range.front', kind: "functiondeclaration", path: './std/container/array/array.range.front.html', attributes: ["property"]},
{name: 'std.container.array.Array.Range.length', kind: "functiondeclaration", path: './std/container/array/array.range.length.html', attributes: ["const", "property"]},
{name: 'std.container.array.Array.Range.moveAt', kind: "functiondeclaration", path: './std/container/array/array.range.move_at.html', attributes: []},
{name: 'std.container.array.Array.Range.moveBack', kind: "functiondeclaration", path: './std/container/array/array.range.move_back.html', attributes: []},
{name: 'std.container.array.Array.Range.moveFront', kind: "functiondeclaration", path: './std/container/array/array.range.move_front.html', attributes: []},
{name: 'std.container.array.Array.Range.opIndex', kind: "functiondeclaration", path: './std/container/array/array.range.op_index.html', attributes: []},
{name: 'std.container.array.Array.Range.opIndexAssign', kind: "functiondeclaration", path: './std/container/array/array.range.op_index_assign.html', attributes: []},
{name: 'std.container.array.Array.Range.opSlice', kind: "functiondeclaration", path: './std/container/array/array.range.op_slice.html', attributes: []},
{name: 'std.container.array.Array.Range.popBack', kind: "functiondeclaration", path: './std/container/array/array.range.pop_back.html', attributes: []},
{name: 'std.container.array.Array.Range.popFront', kind: "functiondeclaration", path: './std/container/array/array.range.pop_front.html', attributes: []},
{name: 'std.container.array.Array.Range.save', kind: "functiondeclaration", path: './std/container/array/array.range.save.html', attributes: ["property"]},
{name: 'std.container.array.Array.stableInsert', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert.html', attributes: []},
{name: 'std.container.array.Array.stableInsertAfter', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_after.html', attributes: []},
{name: 'std.container.array.Array.stableInsertBack', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_back.html', attributes: []},
{name: 'std.container.array.Array.stableInsertBefore', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_before.html', attributes: []},
{name: 'std.container.array.Array.stableLinearInsert', kind: "aliasdeclaration", path: './std/container/array/array.stable_linear_insert.html', attributes: []},
{name: 'std.container.array.Array.stableReplace', kind: "aliasdeclaration", path: './std/container/array/array.stable_replace.html', attributes: []},
{name: 'std.container.binaryheap', kind: "module", path: './std/container/binaryheap.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap', kind: "structdeclaration", path: './std/container/binaryheap/binary_heap.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.acquire', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.acquire.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.assume', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.assume.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.capacity', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.capacity.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.clear', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.clear.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.conditionalInsert', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.conditional_insert.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.dup', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.dup.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.empty', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.empty.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.front', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.front.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.insert', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.insert.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.length', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.length.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.popFront', kind: "aliasdeclaration", path: './std/container/binaryheap/binary_heap.pop_front.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.release', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.release.html', attributes: ["auto"]},
{name: 'std.container.binaryheap.BinaryHeap.removeAny', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.remove_any.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.removeFront', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.remove_front.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.replaceFront', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.replace_front.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.this', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.this.html', attributes: []},
{name: 'std.container.binaryheap.heapify', kind: "functiondeclaration", path: './std/container/binaryheap/heapify.html', attributes: []},
{name: 'std.container.dlist', kind: "module", path: './std/container/dlist.html', attributes: []},
{name: 'std.container.dlist.DList', kind: "structdeclaration", path: './std/container/dlist/d_list.html', attributes: []},
{name: 'std.container.dlist.DList.back', kind: "functiondeclaration", path: './std/container/dlist/d_list.back.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.dlist.DList.clear', kind: "functiondeclaration", path: './std/container/dlist/d_list.clear.html', attributes: []},
{name: 'std.container.dlist.DList.dup', kind: "functiondeclaration", path: './std/container/dlist/d_list.dup.html', attributes: ["property"]},
{name: 'std.container.dlist.DList.empty', kind: "functiondeclaration", path: './std/container/dlist/d_list.empty.html', attributes: ["const", "nothrow", "property"]},
{name: 'std.container.dlist.DList.front', kind: "functiondeclaration", path: './std/container/dlist/d_list.front.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.dlist.DList.insert', kind: "aliasdeclaration", path: './std/container/dlist/d_list.insert.html', attributes: []},
{name: 'std.container.dlist.DList.insertAfter', kind: "templatedeclaration", path: './std/container/dlist/d_list.insert_after.html', attributes: []},
{name: 'std.container.dlist.DList.insertAfter.insertAfter', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_after.insert_after.html', attributes: []},
{name: 'std.container.dlist.DList.insertBack', kind: "templatedeclaration", path: './std/container/dlist/d_list.insert_back.html', attributes: []},
{name: 'std.container.dlist.DList.insertBack.insertBack', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_back.insert_back.html', attributes: []},
{name: 'std.container.dlist.DList.insertBefore', kind: "templatedeclaration", path: './std/container/dlist/d_list.insert_before.html', attributes: []},
{name: 'std.container.dlist.DList.insertBefore.insertBefore', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_before.insert_before.html', attributes: []},
{name: 'std.container.dlist.DList.insertFront', kind: "templatedeclaration", path: './std/container/dlist/d_list.insert_front.html', attributes: []},
{name: 'std.container.dlist.DList.insertFront.insertFront', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_front.insert_front.html', attributes: []},
{name: 'std.container.dlist.DList.linearRemove', kind: "functiondeclaration", path: './std/container/dlist/d_list.linear_remove.html', attributes: []},
{name: 'std.container.dlist.DList.opBinary', kind: "templatedeclaration", path: './std/container/dlist/d_list.op_binary.html', attributes: []},
{name: 'std.container.dlist.DList.opBinary.opBinary', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_binary.op_binary.html', attributes: []},
{name: 'std.container.dlist.DList.opBinaryRight', kind: "templatedeclaration", path: './std/container/dlist/d_list.op_binary_right.html', attributes: []},
{name: 'std.container.dlist.DList.opBinaryRight.opBinaryRight', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_binary_right.op_binary_right.html', attributes: []},
{name: 'std.container.dlist.DList.opEquals', kind: "templatedeclaration", path: './std/container/dlist/d_list.op_equals.html', attributes: []},
{name: 'std.container.dlist.DList.opEquals.opEquals', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_equals.op_equals.html', attributes: ["const"]},
{name: 'std.container.dlist.DList.opOpAssign', kind: "templatedeclaration", path: './std/container/dlist/d_list.op_op_assign.html', attributes: []},
{name: 'std.container.dlist.DList.opOpAssign.opOpAssign', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_op_assign.op_op_assign.html', attributes: []},
{name: 'std.container.dlist.DList.opSlice', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_slice.html', attributes: []},
{name: 'std.container.dlist.DList.Range', kind: "structdeclaration", path: './std/container/dlist/d_list.range.html', attributes: []},
{name: 'std.container.dlist.DList.remove', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove.html', attributes: []},
{name: 'std.container.dlist.DList.removeAny', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove_any.html', attributes: []},
{name: 'std.container.dlist.DList.removeBack', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove_back.html', attributes: []},
{name: 'std.container.dlist.DList.removeFront', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove_front.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsert', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertAfter', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_after.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertBack', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_back.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertBefore', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_before.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertFront', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_front.html', attributes: []},
{name: 'std.container.dlist.DList.stableLinearRemove', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_linear_remove.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemove', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove_any.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemoveBack', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove_back.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemoveFront', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove_front.html', attributes: []},
{name: 'std.container.dlist.DList.this', kind: "templatedeclaration", path: './std/container/dlist/d_list.this.html', attributes: []},
{name: 'std.container.dlist.DList.this.this', kind: "functiondeclaration", path: './std/container/dlist/d_list.this.this.html', attributes: []},
{name: 'std.container.rbtree', kind: "module", path: './std/container/rbtree.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree', kind: "classdeclaration", path: './std/container/rbtree/red_black_tree.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.back', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.back.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.clear', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.clear.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.dup', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.dup.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.Elem', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.elem.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.empty', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.empty.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.equalRange', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.equal_range.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.front', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.front.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.insert', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.insert.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.length', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.length.html', attributes: ["const", "property"]},
{name: 'std.container.rbtree.RedBlackTree.lowerBound', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.lower_bound.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.opBinaryRight', kind: "templatedeclaration", path: './std/container/rbtree/red_black_tree.op_binary_right.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.opBinaryRight.opBinaryRight', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.op_binary_right.op_binary_right.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.opEquals', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.op_equals.html', attributes: ["override"]},
{name: 'std.container.rbtree.RedBlackTree.opSlice', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.op_slice.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.Range', kind: "structdeclaration", path: './std/container/rbtree/red_black_tree.range.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.Range.back', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.range.back.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.Range.empty', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.range.empty.html', attributes: ["const", "property"]},
{name: 'std.container.rbtree.RedBlackTree.Range.front', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.range.front.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.Range.popBack', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.range.pop_back.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.Range.popFront', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.range.pop_front.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.Range.save', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.range.save.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.remove', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeAny', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_any.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeBack', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_back.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeFront', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_front.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeKey', kind: "templatedeclaration", path: './std/container/rbtree/red_black_tree.remove_key.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeKey.removeKey', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_key.remove_key.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.stableInsert', kind: "templatedeclaration", path: './std/container/rbtree/red_black_tree.stable_insert.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.stableInsert.stableInsert', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.stable_insert.stable_insert.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.this', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.this.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.this.this', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.this.this.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.upperBound', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.upper_bound.html', attributes: []},
{name: 'object.Object.factory', kind: "functiondeclaration", path: './object/object.factory.html', attributes: ["static"]},
{name: 'object.Object.opCmp', kind: "functiondeclaration", path: './object/object.op_cmp.html', attributes: []},
{name: 'object.Object.toHash', kind: "functiondeclaration", path: './object/object.to_hash.html', attributes: ["nothrow", "trusted"]},
{name: 'object.Object.toString', kind: "functiondeclaration", path: './object/object.to_string.html', attributes: []},
{name: 'std.container.rbtree.redBlackTree', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.html', attributes: ["auto"]},
{name: 'std.container.slist', kind: "module", path: './std/container/slist.html', attributes: []},
{name: 'std.container.slist.SList', kind: "structdeclaration", path: './std/container/slist/s_list.html', attributes: []},
{name: 'std.container.slist.SList.clear', kind: "functiondeclaration", path: './std/container/slist/s_list.clear.html', attributes: []},
{name: 'std.container.slist.SList.dup', kind: "functiondeclaration", path: './std/container/slist/s_list.dup.html', attributes: ["property"]},
{name: 'std.container.slist.SList.empty', kind: "functiondeclaration", path: './std/container/slist/s_list.empty.html', attributes: ["const", "property"]},
{name: 'std.container.slist.SList.front', kind: "functiondeclaration", path: './std/container/slist/s_list.front.html', attributes: ["property", "ref"]},
{name: 'std.container.slist.SList.insert', kind: "aliasdeclaration", path: './std/container/slist/s_list.insert.html', attributes: []},
{name: 'std.container.slist.SList.insertAfter', kind: "templatedeclaration", path: './std/container/slist/s_list.insert_after.html', attributes: []},
{name: 'std.container.slist.SList.insertAfter.insertAfter', kind: "functiondeclaration", path: './std/container/slist/s_list.insert_after.insert_after.html', attributes: []},
{name: 'std.container.slist.SList.insertFront', kind: "templatedeclaration", path: './std/container/slist/s_list.insert_front.html', attributes: []},
{name: 'std.container.slist.SList.insertFront.insertFront', kind: "functiondeclaration", path: './std/container/slist/s_list.insert_front.insert_front.html', attributes: []},
{name: 'std.container.slist.SList.linearRemove', kind: "functiondeclaration", path: './std/container/slist/s_list.linear_remove.html', attributes: []},
{name: 'std.container.slist.SList.opBinary', kind: "templatedeclaration", path: './std/container/slist/s_list.op_binary.html', attributes: []},
{name: 'std.container.slist.SList.opBinary.opBinary', kind: "functiondeclaration", path: './std/container/slist/s_list.op_binary.op_binary.html', attributes: []},
{name: 'std.container.slist.SList.opBinaryRight', kind: "templatedeclaration", path: './std/container/slist/s_list.op_binary_right.html', attributes: []},
{name: 'std.container.slist.SList.opBinaryRight.opBinaryRight', kind: "functiondeclaration", path: './std/container/slist/s_list.op_binary_right.op_binary_right.html', attributes: []},
{name: 'std.container.slist.SList.opEquals', kind: "functiondeclaration", path: './std/container/slist/s_list.op_equals.html', attributes: ["const"]},
{name: 'std.container.slist.SList.opSlice', kind: "functiondeclaration", path: './std/container/slist/s_list.op_slice.html', attributes: []},
{name: 'std.container.slist.SList.Range', kind: "structdeclaration", path: './std/container/slist/s_list.range.html', attributes: []},
{name: 'std.container.slist.SList.Range.empty', kind: "functiondeclaration", path: './std/container/slist/s_list.range.empty.html', attributes: ["const", "property"]},
{name: 'std.container.slist.SList.Range.front', kind: "functiondeclaration", path: './std/container/slist/s_list.range.front.html', attributes: ["property", "ref"]},
{name: 'std.container.slist.SList.Range.popFront', kind: "functiondeclaration", path: './std/container/slist/s_list.range.pop_front.html', attributes: []},
{name: 'std.container.slist.SList.Range.save', kind: "functiondeclaration", path: './std/container/slist/s_list.range.save.html', attributes: ["property"]},
{name: 'std.container.slist.SList.removeAny', kind: "functiondeclaration", path: './std/container/slist/s_list.remove_any.html', attributes: []},
{name: 'std.container.slist.SList.removeFront', kind: "functiondeclaration", path: './std/container/slist/s_list.remove_front.html', attributes: []},
{name: 'std.container.slist.SList.stableInsert', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_insert.html', attributes: []},
{name: 'std.container.slist.SList.stableInsertAfter', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_insert_after.html', attributes: []},
{name: 'std.container.slist.SList.stableInsertFront', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_insert_front.html', attributes: []},
{name: 'std.container.slist.SList.stableLinearRemove', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_linear_remove.html', attributes: []},
{name: 'std.container.slist.SList.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_remove_any.html', attributes: []},
{name: 'std.container.slist.SList.stableRemoveFront', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_remove_front.html', attributes: []},
{name: 'std.container.slist.SList.this', kind: "templatedeclaration", path: './std/container/slist/s_list.this.html', attributes: []},
{name: 'std.container.slist.SList.this.this', kind: "functiondeclaration", path: './std/container/slist/s_list.this.this.html', attributes: []},
{name: 'std.container.util', kind: "module", path: './std/container/util.html', attributes: []},
{name: 'std.container.util.make', kind: "templatedeclaration", path: './std/container/util/make.html', attributes: []},
{name: 'std.container.util.make.make', kind: "functiondeclaration", path: './std/container/util/make.make.html', attributes: []},
{name: 'std.digest.crc', kind: "module", path: './std/digest/crc.html', attributes: []},
{name: 'std.digest.crc.CRC32', kind: "structdeclaration", path: './std/digest/crc/cr_c32.html', attributes: []},
{name: 'std.digest.crc.CRC32.finish', kind: "functiondeclaration", path: './std/digest/crc/cr_c32.finish.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.crc.CRC32.peek', kind: "functiondeclaration", path: './std/digest/crc/cr_c32.peek.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.digest.crc.CRC32.put', kind: "functiondeclaration", path: './std/digest/crc/cr_c32.put.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.crc.CRC32.start', kind: "functiondeclaration", path: './std/digest/crc/cr_c32.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.crc.CRC32Digest', kind: "aliasdeclaration", path: './std/digest/crc/cr_c32_digest.html', attributes: []},
{name: 'std.digest.crc.crc32Of', kind: "functiondeclaration", path: './std/digest/crc/crc32_of.html', attributes: []},
{name: 'std.digest.crc.crcHexString', kind: "aliasdeclaration", path: './std/digest/crc/crc_hex_string.html', attributes: []},
{name: 'std.digest.digest', kind: "module", path: './std/digest/digest.html', attributes: []},
{name: 'std.digest.digest.digest', kind: "functiondeclaration", path: './std/digest/digest/digest.html', attributes: []},
{name: 'std.digest.digest.Digest', kind: "interfacedeclaration", path: './std/digest/digest/digest.html', attributes: []},
{name: 'std.digest.digest.Digest.digest', kind: "functiondeclaration", path: './std/digest/digest/digest.digest.html', attributes: ["nothrow", "trusted", "final", "abstract"]},
{name: 'std.digest.digest.Digest.finish', kind: "functiondeclaration", path: './std/digest/digest/digest.finish.html', attributes: ["nothrow", "trusted", "abstract"]},
{name: 'std.digest.digest.Digest.length', kind: "functiondeclaration", path: './std/digest/digest/digest.length.html', attributes: ["nothrow", "property", "trusted", "const", "abstract"]},
{name: 'std.digest.digest.Digest.put', kind: "functiondeclaration", path: './std/digest/digest/digest.put.html', attributes: ["nothrow", "trusted", "abstract"]},
{name: 'std.digest.digest.Digest.reset', kind: "functiondeclaration", path: './std/digest/digest/digest.reset.html', attributes: ["nothrow", "trusted", "abstract"]},
{name: 'std.digest.digest.digestLength', kind: "enummemberdeclaration", path: './std/digest/digest/digest_length.html', attributes: []},
{name: 'std.digest.digest.DigestType', kind: "templatedeclaration", path: './std/digest/digest/digest_type.html', attributes: []},
{name: 'std.digest.digest.ExampleDigest', kind: "structdeclaration", path: './std/digest/digest/example_digest.html', attributes: []},
{name: 'std.digest.digest.ExampleDigest.finish', kind: "functiondeclaration", path: './std/digest/digest/example_digest.finish.html', attributes: ["trusted"]},
{name: 'std.digest.digest.ExampleDigest.put', kind: "functiondeclaration", path: './std/digest/digest/example_digest.put.html', attributes: ["trusted"]},
{name: 'std.digest.digest.ExampleDigest.start', kind: "functiondeclaration", path: './std/digest/digest/example_digest.start.html', attributes: ["trusted"]},
{name: 'std.digest.digest.hasPeek', kind: "enummemberdeclaration", path: './std/digest/digest/has_peek.html', attributes: []},
{name: 'std.digest.digest.hexDigest', kind: "functiondeclaration", path: './std/digest/digest/hex_digest.html', attributes: []},
{name: 'std.digest.digest.isDigest', kind: "enummemberdeclaration", path: './std/digest/digest/is_digest.html', attributes: []},
{name: 'std.digest.digest.makeDigest', kind: "functiondeclaration", path: './std/digest/digest/make_digest.html', attributes: []},
{name: 'std.digest.digest.Order', kind: "enumdeclaration", path: './std/digest/digest/order.html', attributes: []},
{name: 'std.digest.digest.Order.decreasing', kind: "enummemberdeclaration", path: './std/digest/digest/order.decreasing.html', attributes: []},
{name: 'std.digest.digest.Order.increasing', kind: "enummemberdeclaration", path: './std/digest/digest/order.increasing.html', attributes: []},
{name: 'std.digest.digest.toHexString', kind: "functiondeclaration", path: './std/digest/digest/to_hex_string.html', attributes: []},
{name: 'std.digest.digest.WrapperDigest', kind: "classdeclaration", path: './std/digest/digest/wrapper_digest.html', attributes: []},
{name: 'std.digest.digest.WrapperDigest.finish', kind: "functiondeclaration", path: './std/digest/digest/wrapper_digest.finish.html', attributes: ["nothrow"]},
{name: 'std.digest.digest.WrapperDigest.length', kind: "functiondeclaration", path: './std/digest/digest/wrapper_digest.length.html', attributes: ["const", "pure", "nothrow", "property", "trusted"]},
{name: 'std.digest.digest.WrapperDigest.peek', kind: "functiondeclaration", path: './std/digest/digest/wrapper_digest.peek.html', attributes: ["const", "trusted"]},
{name: 'std.digest.digest.WrapperDigest.put', kind: "functiondeclaration", path: './std/digest/digest/wrapper_digest.put.html', attributes: ["nothrow", "trusted"]},
{name: 'std.digest.digest.WrapperDigest.reset', kind: "functiondeclaration", path: './std/digest/digest/wrapper_digest.reset.html', attributes: ["nothrow", "trusted"]},
{name: 'std.digest.digest.WrapperDigest.this', kind: "functiondeclaration", path: './std/digest/digest/wrapper_digest.this.html', attributes: []},
{name: 'object.Object.opEquals', kind: "functiondeclaration", path: './object/object.op_equals.html', attributes: []},
{name: 'std.digest.md', kind: "module", path: './std/digest/md.html', attributes: []},
{name: 'std.digest.md.MD5', kind: "structdeclaration", path: './std/digest/md/m_d5.html', attributes: []},
{name: 'std.digest.md.MD5.finish', kind: "functiondeclaration", path: './std/digest/md/m_d5.finish.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.md.MD5.put', kind: "functiondeclaration", path: './std/digest/md/m_d5.put.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.md.MD5.start', kind: "functiondeclaration", path: './std/digest/md/m_d5.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.md.MD5Digest', kind: "aliasdeclaration", path: './std/digest/md/m_d5_digest.html', attributes: []},
{name: 'std.digest.md.md5Of', kind: "functiondeclaration", path: './std/digest/md/md5_of.html', attributes: ["auto"]},
{name: 'std.digest.ripemd', kind: "module", path: './std/digest/ripemd.html', attributes: []},
{name: 'std.digest.ripemd.RIPEMD160', kind: "structdeclaration", path: './std/digest/ripemd/ripem_d160.html', attributes: []},
{name: 'std.digest.ripemd.RIPEMD160.finish', kind: "functiondeclaration", path: './std/digest/ripemd/ripem_d160.finish.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.ripemd.RIPEMD160.put', kind: "functiondeclaration", path: './std/digest/ripemd/ripem_d160.put.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.ripemd.RIPEMD160.start', kind: "functiondeclaration", path: './std/digest/ripemd/ripem_d160.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.ripemd.RIPEMD160Digest', kind: "aliasdeclaration", path: './std/digest/ripemd/ripem_d160_digest.html', attributes: []},
{name: 'std.digest.ripemd.ripemd160Of', kind: "functiondeclaration", path: './std/digest/ripemd/ripemd160_of.html', attributes: ["auto"]},
{name: 'std.digest.sha', kind: "module", path: './std/digest/sha.html', attributes: []},
{name: 'std.digest.sha.SHA', kind: "structdeclaration", path: './std/digest/sha/sha.html', attributes: []},
{name: 'std.digest.sha.SHA.finish', kind: "functiondeclaration", path: './std/digest/sha/sha.finish.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.sha.SHA.put', kind: "functiondeclaration", path: './std/digest/sha/sha.put.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.sha.SHA.start', kind: "functiondeclaration", path: './std/digest/sha/sha.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.sha.SHA1', kind: "aliasdeclaration", path: './std/digest/sha/sh_a1.html', attributes: []},
{name: 'std.digest.sha.SHA1Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a1_digest.html', attributes: []},
{name: 'std.digest.sha.sha1Of', kind: "functiondeclaration", path: './std/digest/sha/sha1_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA224', kind: "aliasdeclaration", path: './std/digest/sha/sh_a224.html', attributes: []},
{name: 'std.digest.sha.SHA224Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a224_digest.html', attributes: []},
{name: 'std.digest.sha.sha224Of', kind: "functiondeclaration", path: './std/digest/sha/sha224_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA256', kind: "aliasdeclaration", path: './std/digest/sha/sh_a256.html', attributes: []},
{name: 'std.digest.sha.SHA256Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a256_digest.html', attributes: []},
{name: 'std.digest.sha.sha256Of', kind: "functiondeclaration", path: './std/digest/sha/sha256_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA384', kind: "aliasdeclaration", path: './std/digest/sha/sh_a384.html', attributes: []},
{name: 'std.digest.sha.SHA384Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a384_digest.html', attributes: []},
{name: 'std.digest.sha.sha384Of', kind: "functiondeclaration", path: './std/digest/sha/sha384_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA512', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512.html', attributes: []},
{name: 'std.digest.sha.SHA512Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_digest.html', attributes: []},
{name: 'std.digest.sha.sha512Of', kind: "functiondeclaration", path: './std/digest/sha/sha512_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA512_224', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_224.html', attributes: []},
{name: 'std.digest.sha.SHA512_224Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_224_digest.html', attributes: []},
{name: 'std.digest.sha.sha512_224Of', kind: "functiondeclaration", path: './std/digest/sha/sha512_224_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA512_256', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_256.html', attributes: []},
{name: 'std.digest.sha.SHA512_256Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_256_digest.html', attributes: []},
{name: 'std.digest.sha.sha512_256Of', kind: "functiondeclaration", path: './std/digest/sha/sha512_256_of.html', attributes: ["auto"]},
{name: 'std.experimental.testing.io', kind: "module", path: './std/experimental/testing/io.html', attributes: []},
{name: 'std.experimental.testing.io.writelnUt', kind: "functiondeclaration", path: './std/experimental/testing/io/writeln_ut.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread', kind: "classdeclaration", path: './std/experimental/testing/io/writer_thread.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.get', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.get.html', attributes: ["static"]},
{name: 'std.experimental.testing.io.WriterThread.join', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.join.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.start', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.start.html', attributes: ["static"]},
{name: 'std.experimental.testing.io.WriterThread.write', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.write.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.writeln', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.writeln.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.writelnGreen', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.writeln_green.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.writelnRed', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.writeln_red.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.writeRed', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.write_red.html', attributes: []},
{name: 'std.experimental.testing.io.WriterThread.writeYellow', kind: "functiondeclaration", path: './std/experimental/testing/io/writer_thread.write_yellow.html', attributes: []},
{name: 'std.experimental.logger', kind: "module", path: './std/experimental/logger.html', attributes: []},
{name: 'std.experimental.testing', kind: "module", path: './std/experimental/testing.html', attributes: []},
{name: 'std.net.curl', kind: "module", path: './std/net/curl.html', attributes: []},
{name: 'std.net.curl.AutoProtocol', kind: "structdeclaration", path: './std/net/curl/auto_protocol.html', attributes: []},
{name: 'std.net.curl.byChunk', kind: "functiondeclaration", path: './std/net/curl/by_chunk.html', attributes: ["auto"]},
{name: 'std.net.curl.byChunkAsync', kind: "functiondeclaration", path: './std/net/curl/by_chunk_async.html', attributes: ["auto"]},
{name: 'std.net.curl.byLine', kind: "functiondeclaration", path: './std/net/curl/by_line.html', attributes: ["auto"]},
{name: 'std.net.curl.byLineAsync', kind: "functiondeclaration", path: './std/net/curl/by_line_async.html', attributes: ["auto"]},
{name: 'std.net.curl.connect', kind: "functiondeclaration", path: './std/net/curl/connect.html', attributes: []},
{name: 'std.net.curl.Curl', kind: "structdeclaration", path: './std/net/curl/curl.html', attributes: []},
{name: 'std.net.curl.Curl.clear', kind: "functiondeclaration", path: './std/net/curl/curl.clear.html', attributes: []},
{name: 'std.net.curl.Curl.clearIfSupported', kind: "functiondeclaration", path: './std/net/curl/curl.clear_if_supported.html', attributes: []},
{name: 'std.net.curl.Curl.dup', kind: "functiondeclaration", path: './std/net/curl/curl.dup.html', attributes: []},
{name: 'std.net.curl.Curl.initialize', kind: "functiondeclaration", path: './std/net/curl/curl.initialize.html', attributes: []},
{name: 'std.net.curl.Curl.onProgress', kind: "functiondeclaration", path: './std/net/curl/curl.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onReceive', kind: "functiondeclaration", path: './std/net/curl/curl.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onReceiveHeader', kind: "functiondeclaration", path: './std/net/curl/curl.on_receive_header.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onSeek', kind: "functiondeclaration", path: './std/net/curl/curl.on_seek.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onSend', kind: "functiondeclaration", path: './std/net/curl/curl.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onSocketOption', kind: "functiondeclaration", path: './std/net/curl/curl.on_socket_option.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.pause', kind: "functiondeclaration", path: './std/net/curl/curl.pause.html', attributes: []},
{name: 'std.net.curl.Curl.perform', kind: "functiondeclaration", path: './std/net/curl/curl.perform.html', attributes: []},
{name: 'std.net.curl.Curl.set', kind: "functiondeclaration", path: './std/net/curl/curl.set.html', attributes: []},
{name: 'std.net.curl.Curl.shutdown', kind: "functiondeclaration", path: './std/net/curl/curl.shutdown.html', attributes: []},
{name: 'std.net.curl.CurlCode', kind: "aliasdeclaration", path: './std/net/curl/curl_code.html', attributes: []},
{name: 'std.net.curl.CurlException', kind: "classdeclaration", path: './std/net/curl/curl_exception.html', attributes: []},
{name: 'std.net.curl.CurlException.this', kind: "functiondeclaration", path: './std/net/curl/curl_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'object.Throwable.file', kind: "variabledeclaration", path: './object/throwable.file.html', attributes: []},
{name: 'object.Throwable.info', kind: "variabledeclaration", path: './object/throwable.info.html', attributes: []},
{name: 'object.Throwable.line', kind: "variabledeclaration", path: './object/throwable.line.html', attributes: []},
{name: 'object.Throwable.msg', kind: "variabledeclaration", path: './object/throwable.msg.html', attributes: []},
{name: 'object.Throwable.next', kind: "variabledeclaration", path: './object/throwable.next.html', attributes: []},
{name: 'object.Throwable.toString', kind: "functiondeclaration", path: './object/throwable.to_string.html', attributes: ["override"]},
{name: 'std.net.curl.CurlTimeoutException', kind: "classdeclaration", path: './std/net/curl/curl_timeout_exception.html', attributes: []},
{name: 'std.net.curl.CurlTimeoutException.this', kind: "functiondeclaration", path: './std/net/curl/curl_timeout_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.net.curl.del', kind: "functiondeclaration", path: './std/net/curl/del.html', attributes: []},
{name: 'std.net.curl.download', kind: "functiondeclaration", path: './std/net/curl/download.html', attributes: []},
{name: 'std.net.curl.FTP', kind: "structdeclaration", path: './std/net/curl/ftp.html', attributes: []},
{name: 'std.net.curl.FTP.addCommand', kind: "functiondeclaration", path: './std/net/curl/ftp.add_command.html', attributes: []},
{name: 'std.net.curl.FTP.clearCommands', kind: "functiondeclaration", path: './std/net/curl/ftp.clear_commands.html', attributes: []},
{name: 'std.net.curl.FTP.connectTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.connect_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.contentLength', kind: "functiondeclaration", path: './std/net/curl/ftp.content_length.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.CurlProxy', kind: "aliasdeclaration", path: './std/net/curl/ftp.curl_proxy.html', attributes: []},
{name: 'std.net.curl.FTP.dataTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.data_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.dnsTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.dns_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.encoding', kind: "functiondeclaration", path: './std/net/curl/ftp.encoding.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.isStopped', kind: "functiondeclaration", path: './std/net/curl/ftp.is_stopped.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.localPort', kind: "functiondeclaration", path: './std/net/curl/ftp.local_port.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.localPortRange', kind: "functiondeclaration", path: './std/net/curl/ftp.local_port_range.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.netInterface', kind: "functiondeclaration", path: './std/net/curl/ftp.net_interface.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.onProgress', kind: "functiondeclaration", path: './std/net/curl/ftp.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.onReceive', kind: "functiondeclaration", path: './std/net/curl/ftp.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.onSend', kind: "functiondeclaration", path: './std/net/curl/ftp.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.opCall', kind: "functiondeclaration", path: './std/net/curl/ftp.op_call.html', attributes: ["static"]},
{name: 'std.net.curl.FTP.operationTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.operation_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.perform', kind: "functiondeclaration", path: './std/net/curl/ftp.perform.html', attributes: []},
{name: 'std.net.curl.FTP.proxy', kind: "functiondeclaration", path: './std/net/curl/ftp.proxy.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.proxyPort', kind: "functiondeclaration", path: './std/net/curl/ftp.proxy_port.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.proxyType', kind: "functiondeclaration", path: './std/net/curl/ftp.proxy_type.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.requestAbort', kind: "aliasdeclaration", path: './std/net/curl/ftp.request_abort.html', attributes: []},
{name: 'std.net.curl.FTP.requestPause', kind: "aliasdeclaration", path: './std/net/curl/ftp.request_pause.html', attributes: []},
{name: 'std.net.curl.FTP.setAuthentication', kind: "functiondeclaration", path: './std/net/curl/ftp.set_authentication.html', attributes: []},
{name: 'std.net.curl.FTP.setProxyAuthentication', kind: "functiondeclaration", path: './std/net/curl/ftp.set_proxy_authentication.html', attributes: []},
{name: 'std.net.curl.FTP.shutdown', kind: "functiondeclaration", path: './std/net/curl/ftp.shutdown.html', attributes: []},
{name: 'std.net.curl.FTP.tcpNoDelay', kind: "functiondeclaration", path: './std/net/curl/ftp.tcp_no_delay.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.url', kind: "functiondeclaration", path: './std/net/curl/ftp.url.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.verbose', kind: "functiondeclaration", path: './std/net/curl/ftp.verbose.html', attributes: ["property"]},
{name: 'std.net.curl.get', kind: "functiondeclaration", path: './std/net/curl/get.html', attributes: []},
{name: 'std.net.curl.HTTP', kind: "structdeclaration", path: './std/net/curl/http.html', attributes: []},
{name: 'std.net.curl.HTTP.addRequestHeader', kind: "functiondeclaration", path: './std/net/curl/http.add_request_header.html', attributes: []},
{name: 'std.net.curl.HTTP.authenticationMethod', kind: "functiondeclaration", path: './std/net/curl/http.authentication_method.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.AuthMethod', kind: "aliasdeclaration", path: './std/net/curl/http.auth_method.html', attributes: []},
{name: 'std.net.curl.HTTP.caInfo', kind: "functiondeclaration", path: './std/net/curl/http.ca_info.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.clearAllCookies', kind: "functiondeclaration", path: './std/net/curl/http.clear_all_cookies.html', attributes: []},
{name: 'std.net.curl.HTTP.clearRequestHeaders', kind: "functiondeclaration", path: './std/net/curl/http.clear_request_headers.html', attributes: []},
{name: 'std.net.curl.HTTP.clearSessionCookies', kind: "functiondeclaration", path: './std/net/curl/http.clear_session_cookies.html', attributes: []},
{name: 'std.net.curl.HTTP.connectTimeout', kind: "functiondeclaration", path: './std/net/curl/http.connect_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.contentLength', kind: "functiondeclaration", path: './std/net/curl/http.content_length.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.CurlProxy', kind: "aliasdeclaration", path: './std/net/curl/http.curl_proxy.html', attributes: []},
{name: 'std.net.curl.HTTP.dataTimeout', kind: "functiondeclaration", path: './std/net/curl/http.data_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.defaultUserAgent', kind: "variabledeclaration", path: './std/net/curl/http.default_user_agent.html', attributes: []},
{name: 'std.net.curl.HTTP.dnsTimeout', kind: "functiondeclaration", path: './std/net/curl/http.dns_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.flushCookieJar', kind: "functiondeclaration", path: './std/net/curl/http.flush_cookie_jar.html', attributes: []},
{name: 'std.net.curl.HTTP.isStopped', kind: "functiondeclaration", path: './std/net/curl/http.is_stopped.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.localPort', kind: "functiondeclaration", path: './std/net/curl/http.local_port.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.localPortRange', kind: "functiondeclaration", path: './std/net/curl/http.local_port_range.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.maxRedirects', kind: "functiondeclaration", path: './std/net/curl/http.max_redirects.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.method', kind: "functiondeclaration", path: './std/net/curl/http.method.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.Method', kind: "enumdeclaration", path: './std/net/curl/http.method.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.connect', kind: "enummemberdeclaration", path: './std/net/curl/http.method.connect.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.del', kind: "enummemberdeclaration", path: './std/net/curl/http.method.del.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.get', kind: "enummemberdeclaration", path: './std/net/curl/http.method.get.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.head', kind: "enummemberdeclaration", path: './std/net/curl/http.method.head.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.options', kind: "enummemberdeclaration", path: './std/net/curl/http.method.options.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.post', kind: "enummemberdeclaration", path: './std/net/curl/http.method.post.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.put', kind: "enummemberdeclaration", path: './std/net/curl/http.method.put.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.trace', kind: "enummemberdeclaration", path: './std/net/curl/http.method.trace.html', attributes: []},
{name: 'std.net.curl.HTTP.netInterface', kind: "functiondeclaration", path: './std/net/curl/http.net_interface.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onProgress', kind: "functiondeclaration", path: './std/net/curl/http.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onReceive', kind: "functiondeclaration", path: './std/net/curl/http.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onReceiveHeader', kind: "functiondeclaration", path: './std/net/curl/http.on_receive_header.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onReceiveStatusLine', kind: "functiondeclaration", path: './std/net/curl/http.on_receive_status_line.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onSend', kind: "functiondeclaration", path: './std/net/curl/http.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.opCall', kind: "functiondeclaration", path: './std/net/curl/http.op_call.html', attributes: ["static"]},
{name: 'std.net.curl.HTTP.operationTimeout', kind: "functiondeclaration", path: './std/net/curl/http.operation_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.perform', kind: "functiondeclaration", path: './std/net/curl/http.perform.html', attributes: []},
{name: 'std.net.curl.HTTP.postData', kind: "functiondeclaration", path: './std/net/curl/http.post_data.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.proxy', kind: "functiondeclaration", path: './std/net/curl/http.proxy.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.proxyPort', kind: "functiondeclaration", path: './std/net/curl/http.proxy_port.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.proxyType', kind: "functiondeclaration", path: './std/net/curl/http.proxy_type.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.requestAbort', kind: "aliasdeclaration", path: './std/net/curl/http.request_abort.html', attributes: []},
{name: 'std.net.curl.HTTP.requestPause', kind: "aliasdeclaration", path: './std/net/curl/http.request_pause.html', attributes: []},
{name: 'std.net.curl.HTTP.responseHeaders', kind: "functiondeclaration", path: './std/net/curl/http.response_headers.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.setAuthentication', kind: "functiondeclaration", path: './std/net/curl/http.set_authentication.html', attributes: []},
{name: 'std.net.curl.HTTP.setCookie', kind: "functiondeclaration", path: './std/net/curl/http.set_cookie.html', attributes: []},
{name: 'std.net.curl.HTTP.setCookieJar', kind: "functiondeclaration", path: './std/net/curl/http.set_cookie_jar.html', attributes: []},
{name: 'std.net.curl.HTTP.setPostData', kind: "functiondeclaration", path: './std/net/curl/http.set_post_data.html', attributes: []},
{name: 'std.net.curl.HTTP.setProxyAuthentication', kind: "functiondeclaration", path: './std/net/curl/http.set_proxy_authentication.html', attributes: []},
{name: 'std.net.curl.HTTP.setTimeCondition', kind: "functiondeclaration", path: './std/net/curl/http.set_time_condition.html', attributes: []},
{name: 'std.net.curl.HTTP.setUserAgent', kind: "functiondeclaration", path: './std/net/curl/http.set_user_agent.html', attributes: []},
{name: 'std.net.curl.HTTP.shutdown', kind: "functiondeclaration", path: './std/net/curl/http.shutdown.html', attributes: []},
{name: 'std.net.curl.HTTP.statusLine', kind: "functiondeclaration", path: './std/net/curl/http.status_line.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.StatusLine', kind: "structdeclaration", path: './std/net/curl/http.status_line.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.code', kind: "variabledeclaration", path: './std/net/curl/http.status_line.code.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.majorVersion', kind: "variabledeclaration", path: './std/net/curl/http.status_line.major_version.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.minorVersion', kind: "variabledeclaration", path: './std/net/curl/http.status_line.minor_version.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.reason', kind: "variabledeclaration", path: './std/net/curl/http.status_line.reason.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.reset', kind: "functiondeclaration", path: './std/net/curl/http.status_line.reset.html', attributes: ["safe"]},
{name: 'std.net.curl.HTTP.StatusLine.toString', kind: "functiondeclaration", path: './std/net/curl/http.status_line.to_string.html', attributes: []},
{name: 'std.net.curl.HTTP.tcpNoDelay', kind: "functiondeclaration", path: './std/net/curl/http.tcp_no_delay.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.TimeCond', kind: "aliasdeclaration", path: './std/net/curl/http.time_cond.html', attributes: []},
{name: 'std.net.curl.HTTP.url', kind: "functiondeclaration", path: './std/net/curl/http.url.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.verbose', kind: "functiondeclaration", path: './std/net/curl/http.verbose.html', attributes: ["property"]},
{name: 'std.net.curl.options', kind: "functiondeclaration", path: './std/net/curl/options.html', attributes: []},
{name: 'std.net.curl.post', kind: "functiondeclaration", path: './std/net/curl/post.html', attributes: []},
{name: 'std.net.curl.put', kind: "functiondeclaration", path: './std/net/curl/put.html', attributes: []},
{name: 'std.net.curl.SMTP', kind: "structdeclaration", path: './std/net/curl/smtp.html', attributes: []},
{name: 'std.net.curl.SMTP.connectTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.connect_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.CurlProxy', kind: "aliasdeclaration", path: './std/net/curl/smtp.curl_proxy.html', attributes: []},
{name: 'std.net.curl.SMTP.dataTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.data_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.dnsTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.dns_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.isStopped', kind: "functiondeclaration", path: './std/net/curl/smtp.is_stopped.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.localPort', kind: "functiondeclaration", path: './std/net/curl/smtp.local_port.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.localPortRange', kind: "functiondeclaration", path: './std/net/curl/smtp.local_port_range.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.mailFrom', kind: "functiondeclaration", path: './std/net/curl/smtp.mail_from.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.mailTo', kind: "functiondeclaration", path: './std/net/curl/smtp.mail_to.html', attributes: []},
{name: 'std.net.curl.SMTP.message', kind: "functiondeclaration", path: './std/net/curl/smtp.message.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.netInterface', kind: "functiondeclaration", path: './std/net/curl/smtp.net_interface.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.onProgress', kind: "functiondeclaration", path: './std/net/curl/smtp.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.onReceive', kind: "functiondeclaration", path: './std/net/curl/smtp.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.onSend', kind: "functiondeclaration", path: './std/net/curl/smtp.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.opCall', kind: "functiondeclaration", path: './std/net/curl/smtp.op_call.html', attributes: ["static"]},
{name: 'std.net.curl.SMTP.operationTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.operation_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.perform', kind: "functiondeclaration", path: './std/net/curl/smtp.perform.html', attributes: []},
{name: 'std.net.curl.SMTP.proxy', kind: "functiondeclaration", path: './std/net/curl/smtp.proxy.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.proxyPort', kind: "functiondeclaration", path: './std/net/curl/smtp.proxy_port.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.proxyType', kind: "functiondeclaration", path: './std/net/curl/smtp.proxy_type.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.requestAbort', kind: "aliasdeclaration", path: './std/net/curl/smtp.request_abort.html', attributes: []},
{name: 'std.net.curl.SMTP.requestPause', kind: "aliasdeclaration", path: './std/net/curl/smtp.request_pause.html', attributes: []},
{name: 'std.net.curl.SMTP.setAuthentication', kind: "functiondeclaration", path: './std/net/curl/smtp.set_authentication.html', attributes: []},
{name: 'std.net.curl.SMTP.setProxyAuthentication', kind: "functiondeclaration", path: './std/net/curl/smtp.set_proxy_authentication.html', attributes: []},
{name: 'std.net.curl.SMTP.shutdown', kind: "functiondeclaration", path: './std/net/curl/smtp.shutdown.html', attributes: []},
{name: 'std.net.curl.SMTP.tcpNoDelay', kind: "functiondeclaration", path: './std/net/curl/smtp.tcp_no_delay.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.url', kind: "functiondeclaration", path: './std/net/curl/smtp.url.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.verbose', kind: "functiondeclaration", path: './std/net/curl/smtp.verbose.html', attributes: ["property"]},
{name: 'std.net.curl.ThrowOnError', kind: "aliasdeclaration", path: './std/net/curl/throw_on_error.html', attributes: []},
{name: 'std.net.curl.trace', kind: "functiondeclaration", path: './std/net/curl/trace.html', attributes: []},
{name: 'std.net.curl.upload', kind: "functiondeclaration", path: './std/net/curl/upload.html', attributes: []},
{name: 'std.net.isemail', kind: "module", path: './std/net/isemail.html', attributes: []},
{name: 'std.net.isemail.CheckDns', kind: "enumdeclaration", path: './std/net/isemail/check_dns.html', attributes: []},
{name: 'std.net.isemail.CheckDns.no', kind: "enummemberdeclaration", path: './std/net/isemail/check_dns.no.html', attributes: []},
{name: 'std.net.isemail.CheckDns.yes', kind: "enummemberdeclaration", path: './std/net/isemail/check_dns.yes.html', attributes: []},
{name: 'std.net.isemail.EmailStatus', kind: "structdeclaration", path: './std/net/isemail/email_status.html', attributes: []},
{name: 'std.net.isemail.EmailStatus.domainPart', kind: "functiondeclaration", path: './std/net/isemail/email_status.domain_part.html', attributes: ["property", "const"]},
{name: 'std.net.isemail.EmailStatus.localPart', kind: "functiondeclaration", path: './std/net/isemail/email_status.local_part.html', attributes: ["property", "const"]},
{name: 'std.net.isemail.EmailStatus.status', kind: "functiondeclaration", path: './std/net/isemail/email_status.status.html', attributes: ["property", "const"]},
{name: 'std.net.isemail.EmailStatus.statusCode', kind: "functiondeclaration", path: './std/net/isemail/email_status.status_code.html', attributes: ["property", "const"]},
{name: 'std.net.isemail.EmailStatus.toString', kind: "functiondeclaration", path: './std/net/isemail/email_status.to_string.html', attributes: ["const"]},
{name: 'std.net.isemail.EmailStatus.valid', kind: "functiondeclaration", path: './std/net/isemail/email_status.valid.html', attributes: ["property", "const"]},
{name: 'std.net.isemail.EmailStatusCode', kind: "enumdeclaration", path: './std/net/isemail/email_status_code.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.any', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.any.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.cFoldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.c_folding_whitespace.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.comment', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.comment.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedComment', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_comment.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedCommentFoldingWhitespaceNearAt', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_comment_folding_whitespace_near_at.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedCommentText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_comment_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedFoldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_folding_whitespace.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedLocalPart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_local_part.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedQuotedPair', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_quoted_pair.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedQuotedText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_quoted_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecated_', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.deprecated_.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.dnsWarning', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.dns_warning.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.dnsWarningNoMXRecord', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.dns_warning_nomx_record.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.dnsWarningNoRecord', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.dns_warning_no_record.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.error', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorBackslashEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_backslash_end.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorConsecutiveDots', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_consecutive_dots.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorCrNoLf', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_cr_no_lf.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDomainHyphenEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_domain_hyphen_end.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDomainHyphenStart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_domain_hyphen_start.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDotEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_dot_end.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDotStart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_dot_start.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingCommentText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_expecting_comment_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingDomainText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_expecting_domain_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingQuotedPair', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_expecting_quoted_pair.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingQuotedText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_expecting_quoted_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_expecting_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorFoldingWhitespaceCrflX2', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_folding_whitespace_crfl_x2.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorFoldingWhitespaceCrLfEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_folding_whitespace_cr_lf_end.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorNoDomain', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_no_domain.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorNoLocalPart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_no_local_part.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorTextAfterCommentFoldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_text_after_comment_folding_whitespace.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorTextAfterDomainLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_text_after_domain_literal.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorTextAfterQuotedString', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_text_after_quoted_string.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorUnclosedComment', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_unclosed_comment.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorUnclosedDomainLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_unclosed_domain_literal.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorUnclosedQuotedString', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.error_unclosed_quoted_string.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.foldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.folding_whitespace.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.none', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.none.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5321.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321AddressLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5321_address_literal.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321IpV6Deprecated', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5321_ip_v6_deprecated.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321QuotedString', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5321_quoted_string.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321TopLevelDomain', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5321_top_level_domain.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321TopLevelDomainNumeric', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5321_top_level_domain_numeric.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322Domain', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_domain.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322DomainLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_domain_literal.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322DomainLiteralObsoleteText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_domain_literal_obsolete_text.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322DomainTooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_domain_too_long.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6BadChar', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_ip_v6_bad_char.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6ColonEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_ip_v6_colon_end.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6ColonStart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_ip_v6_colon_start.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6GroupCount', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_ip_v6_group_count.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6MaxGroups', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_ip_v6_max_groups.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6TooManyDoubleColons', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_ip_v6_too_many_double_colons.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322LabelTooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_label_too_long.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322LocalTooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_local_too_long.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322TooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.rfc5322_too_long.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.valid', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.valid.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.validCategory', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.valid_category.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.warning', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.warning.html', attributes: []},
{name: 'std.net.isemail.isEmail', kind: "functiondeclaration", path: './std/net/isemail/is_email.html', attributes: []},
{name: 'std.net.isemail.statusCodeDescription', kind: "functiondeclaration", path: './std/net/isemail/status_code_description.html', attributes: []},
{name: 'std.range.interfaces', kind: "module", path: './std/range/interfaces.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/bidirectional_assignable.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalAssignable.back', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_assignable.back.html', attributes: ["property"]},
{name: 'std.range.interfaces.BidirectionalAssignable.save', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_assignable.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.BidirectionalRange', kind: "interfacedeclaration", path: './std/range/interfaces/bidirectional_range.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalRange.back', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.back.html', attributes: ["property"]},
{name: 'std.range.interfaces.BidirectionalRange.moveBack', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.move_back.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalRange.popBack', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.pop_back.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalRange.save', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.ForwardAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/forward_assignable.html', attributes: []},
{name: 'std.range.interfaces.ForwardAssignable.save', kind: "functiondeclaration", path: './std/range/interfaces/forward_assignable.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.ForwardRange', kind: "interfacedeclaration", path: './std/range/interfaces/forward_range.html', attributes: []},
{name: 'std.range.interfaces.ForwardRange.save', kind: "functiondeclaration", path: './std/range/interfaces/forward_range.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/input_assignable.html', attributes: []},
{name: 'std.range.interfaces.InputAssignable.front', kind: "functiondeclaration", path: './std/range/interfaces/input_assignable.front.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputRange', kind: "interfacedeclaration", path: './std/range/interfaces/input_range.html', attributes: []},
{name: 'std.range.interfaces.InputRange.empty', kind: "functiondeclaration", path: './std/range/interfaces/input_range.empty.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputRange.front', kind: "functiondeclaration", path: './std/range/interfaces/input_range.front.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputRange.moveFront', kind: "functiondeclaration", path: './std/range/interfaces/input_range.move_front.html', attributes: []},
{name: 'std.range.interfaces.InputRange.opApply', kind: "functiondeclaration", path: './std/range/interfaces/input_range.op_apply.html', attributes: []},
{name: 'std.range.interfaces.InputRange.popFront', kind: "functiondeclaration", path: './std/range/interfaces/input_range.pop_front.html', attributes: []},
{name: 'std.range.interfaces.InputRangeObject', kind: "templatedeclaration", path: './std/range/interfaces/input_range_object.html', attributes: []},
{name: 'std.range.interfaces.inputRangeObject', kind: "functiondeclaration", path: './std/range/interfaces/input_range_object.html', attributes: []},
{name: 'std.range.interfaces.MostDerivedInputRange', kind: "templatedeclaration", path: './std/range/interfaces/most_derived_input_range.html', attributes: []},
{name: 'std.range.interfaces.OutputRange', kind: "interfacedeclaration", path: './std/range/interfaces/output_range.html', attributes: []},
{name: 'std.range.interfaces.OutputRange.put', kind: "functiondeclaration", path: './std/range/interfaces/output_range.put.html', attributes: []},
{name: 'std.range.interfaces.OutputRangeObject', kind: "classdeclaration", path: './std/range/interfaces/output_range_object.html', attributes: []},
{name: 'std.range.interfaces.outputRangeObject', kind: "templatedeclaration", path: './std/range/interfaces/output_range_object.html', attributes: []},
{name: 'std.range.interfaces.outputRangeObject.outputRangeObject', kind: "functiondeclaration", path: './std/range/interfaces/output_range_object.output_range_object.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite', kind: "interfacedeclaration", path: './std/range/interfaces/random_access_finite.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.length', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.length.html', attributes: ["property"]},
{name: 'std.range.interfaces.RandomAccessFinite.moveAt', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.move_at.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.opDollar', kind: "aliasdeclaration", path: './std/range/interfaces/random_access_finite.op_dollar.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.opIndex', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.op_index.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.save', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.RandomAccessInfinite', kind: "interfacedeclaration", path: './std/range/interfaces/random_access_infinite.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessInfinite.moveAt', kind: "functiondeclaration", path: './std/range/interfaces/random_access_infinite.move_at.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessInfinite.opIndex', kind: "functiondeclaration", path: './std/range/interfaces/random_access_infinite.op_index.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessInfinite.save', kind: "functiondeclaration", path: './std/range/interfaces/random_access_infinite.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.RandomFiniteAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/random_finite_assignable.html', attributes: []},
{name: 'std.range.interfaces.RandomFiniteAssignable.opIndexAssign', kind: "functiondeclaration", path: './std/range/interfaces/random_finite_assignable.op_index_assign.html', attributes: []},
{name: 'std.range.interfaces.RandomFiniteAssignable.save', kind: "functiondeclaration", path: './std/range/interfaces/random_finite_assignable.save.html', attributes: ["property"]},
{name: 'std.range.primitives', kind: "module", path: './std/range/primitives.html', attributes: []},
{name: 'std.range.primitives.back', kind: "functiondeclaration", path: './std/range/primitives/back.html', attributes: ["pure", "nothrow", "property", "ref", "safe"]},
{name: 'std.range.primitives.ElementEncodingType', kind: "templatedeclaration", path: './std/range/primitives/element_encoding_type.html', attributes: []},
{name: 'std.range.primitives.ElementType', kind: "templatedeclaration", path: './std/range/primitives/element_type.html', attributes: []},
{name: 'std.range.primitives.empty', kind: "functiondeclaration", path: './std/range/primitives/empty.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.range.primitives.front', kind: "functiondeclaration", path: './std/range/primitives/front.html', attributes: ["pure", "nothrow", "property", "ref", "safe"]},
{name: 'std.range.primitives.hasAssignableElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_assignable_elements.html', attributes: []},
{name: 'std.range.primitives.hasLength', kind: "enummemberdeclaration", path: './std/range/primitives/has_length.html', attributes: []},
{name: 'std.range.primitives.hasLvalueElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_lvalue_elements.html', attributes: []},
{name: 'std.range.primitives.hasMobileElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_mobile_elements.html', attributes: []},
{name: 'std.range.primitives.hasSlicing', kind: "enummemberdeclaration", path: './std/range/primitives/has_slicing.html', attributes: []},
{name: 'std.range.primitives.hasSwappableElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_swappable_elements.html', attributes: []},
{name: 'std.range.primitives.isBidirectionalRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_bidirectional_range.html', attributes: []},
{name: 'std.range.primitives.isForwardRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_forward_range.html', attributes: []},
{name: 'std.range.primitives.isInfinite', kind: "templatedeclaration", path: './std/range/primitives/is_infinite.html', attributes: []},
{name: 'std.range.primitives.isInputRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_input_range.html', attributes: []},
{name: 'std.range.primitives.isOutputRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_output_range.html', attributes: []},
{name: 'std.range.primitives.isRandomAccessRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_random_access_range.html', attributes: []},
{name: 'std.range.primitives.moveAt', kind: "functiondeclaration", path: './std/range/primitives/move_at.html', attributes: []},
{name: 'std.range.primitives.moveBack', kind: "functiondeclaration", path: './std/range/primitives/move_back.html', attributes: []},
{name: 'std.range.primitives.moveFront', kind: "functiondeclaration", path: './std/range/primitives/move_front.html', attributes: []},
{name: 'std.range.primitives.popBack', kind: "functiondeclaration", path: './std/range/primitives/pop_back.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.range.primitives.popBackExactly', kind: "functiondeclaration", path: './std/range/primitives/pop_back_exactly.html', attributes: []},
{name: 'std.range.primitives.popBackN', kind: "functiondeclaration", path: './std/range/primitives/pop_back.html', attributes: []},
{name: 'std.range.primitives.popFront', kind: "functiondeclaration", path: './std/range/primitives/pop_front.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.range.primitives.popFrontExactly', kind: "functiondeclaration", path: './std/range/primitives/pop_front_exactly.html', attributes: []},
{name: 'std.range.primitives.popFrontN', kind: "functiondeclaration", path: './std/range/primitives/pop_front.html', attributes: []},
{name: 'std.range.primitives.put', kind: "functiondeclaration", path: './std/range/primitives/put.html', attributes: []},
{name: 'std.range.primitives.save', kind: "functiondeclaration", path: './std/range/primitives/save.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.range.primitives.walkLength', kind: "functiondeclaration", path: './std/range/primitives/walk_length.html', attributes: ["auto"]},
{name: 'std.algorithm', kind: "module", path: './std/algorithm.html', attributes: []},
{name: 'std.array', kind: "module", path: './std/array.html', attributes: []},
{name: 'std.array.appender', kind: "functiondeclaration", path: './std/array/appender.html', attributes: []},
{name: 'std.array.Appender', kind: "structdeclaration", path: './std/array/appender.html', attributes: []},
{name: 'std.array.Appender.capacity', kind: "functiondeclaration", path: './std/array/appender.capacity.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.array.Appender.data', kind: "functiondeclaration", path: './std/array/appender.data.html', attributes: ["inout", "pure", "nothrow", "property", "trusted"]},
{name: 'std.array.Appender.opOpAssign', kind: "templatedeclaration", path: './std/array/appender.op_op_assign.html', attributes: []},
{name: 'std.array.Appender.opOpAssign.opOpAssign', kind: "functiondeclaration", path: './std/array/appender.op_op_assign.op_op_assign.html', attributes: []},
{name: 'std.array.Appender.put', kind: "templatedeclaration", path: './std/array/appender.put.html', attributes: []},
{name: 'std.array.Appender.put.put', kind: "functiondeclaration", path: './std/array/appender.put.put.html', attributes: []},
{name: 'std.array.Appender.reserve', kind: "functiondeclaration", path: './std/array/appender.reserve.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.array.Appender.this', kind: "functiondeclaration", path: './std/array/appender.this.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.array.array', kind: "functiondeclaration", path: './std/array/array.html', attributes: []},
{name: 'std.array.assocArray', kind: "functiondeclaration", path: './std/array/assoc_array.html', attributes: ["auto"]},
{name: 'std.array.byPair', kind: "functiondeclaration", path: './std/array/by_pair.html', attributes: ["auto"]},
{name: 'std.array.insertInPlace', kind: "functiondeclaration", path: './std/array/insert_in_place.html', attributes: []},
{name: 'std.array.join', kind: "functiondeclaration", path: './std/array/join.html', attributes: []},
{name: 'std.array.minimallyInitializedArray', kind: "functiondeclaration", path: './std/array/minimally_initialized_array.html', attributes: ["nothrow", "trusted", "auto"]},
{name: 'std.array.RefAppender', kind: "structdeclaration", path: './std/array/ref_appender.html', attributes: []},
{name: 'std.array.RefAppender.capacity', kind: "functiondeclaration", path: './std/array/ref_appender.capacity.html', attributes: ["const", "property"]},
{name: 'std.array.RefAppender.data', kind: "functiondeclaration", path: './std/array/ref_appender.data.html', attributes: ["inout", "property"]},
{name: 'std.array.RefAppender.opOpAssign', kind: "templatedeclaration", path: './std/array/ref_appender.op_op_assign.html', attributes: []},
{name: 'std.array.RefAppender.opOpAssign.opOpAssign', kind: "functiondeclaration", path: './std/array/ref_appender.op_op_assign.op_op_assign.html', attributes: []},
{name: 'std.array.RefAppender.this', kind: "functiondeclaration", path: './std/array/ref_appender.this.html', attributes: []},
{name: 'std.array.replace', kind: "functiondeclaration", path: './std/array/replace.html', attributes: []},
{name: 'std.array.replaceFirst', kind: "functiondeclaration", path: './std/array/replace_first.html', attributes: []},
{name: 'std.array.replaceInPlace', kind: "functiondeclaration", path: './std/array/replace_in_place.html', attributes: []},
{name: 'std.array.replaceInto', kind: "functiondeclaration", path: './std/array/replace_into.html', attributes: []},
{name: 'std.array.replaceLast', kind: "functiondeclaration", path: './std/array/replace_last.html', attributes: []},
{name: 'std.array.replaceSlice', kind: "functiondeclaration", path: './std/array/replace_slice.html', attributes: []},
{name: 'std.array.replicate', kind: "functiondeclaration", path: './std/array/replicate.html', attributes: []},
{name: 'std.array.sameHead', kind: "functiondeclaration", path: './std/array/same_head.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.array.sameTail', kind: "functiondeclaration", path: './std/array/same_tail.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.array.split', kind: "functiondeclaration", path: './std/array/split.html', attributes: ["pure", "safe"]},
{name: 'std.array.splitter', kind: "aliasdeclaration", path: './std/array/splitter.html', attributes: ["deprecated"]},
{name: 'std.array.uninitializedArray', kind: "functiondeclaration", path: './std/array/uninitialized_array.html', attributes: ["nothrow", "system", "auto"]},
{name: 'std.ascii', kind: "module", path: './std/ascii.html', attributes: []},
{name: 'std.ascii.digits', kind: "variabledeclaration", path: './std/ascii/digits.html', attributes: []},
{name: 'std.ascii.fullHexDigits', kind: "variabledeclaration", path: './std/ascii/full_hex_digits.html', attributes: []},
{name: 'std.ascii.hexDigits', kind: "variabledeclaration", path: './std/ascii/hex_digits.html', attributes: []},
{name: 'std.ascii.isAlpha', kind: "functiondeclaration", path: './std/ascii/is_alpha.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isAlphaNum', kind: "functiondeclaration", path: './std/ascii/is_alpha_num.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isASCII', kind: "functiondeclaration", path: './std/ascii/is_ascii.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isControl', kind: "functiondeclaration", path: './std/ascii/is_control.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isDigit', kind: "functiondeclaration", path: './std/ascii/is_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isGraphical', kind: "functiondeclaration", path: './std/ascii/is_graphical.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isHexDigit', kind: "functiondeclaration", path: './std/ascii/is_hex_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isLower', kind: "functiondeclaration", path: './std/ascii/is_lower.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isOctalDigit', kind: "functiondeclaration", path: './std/ascii/is_octal_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isPrintable', kind: "functiondeclaration", path: './std/ascii/is_printable.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isPunctuation', kind: "functiondeclaration", path: './std/ascii/is_punctuation.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isUpper', kind: "functiondeclaration", path: './std/ascii/is_upper.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isWhite', kind: "functiondeclaration", path: './std/ascii/is_white.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.LetterCase', kind: "enumdeclaration", path: './std/ascii/letter_case.html', attributes: []},
{name: 'std.ascii.LetterCase.lower', kind: "enummemberdeclaration", path: './std/ascii/letter_case.lower.html', attributes: []},
{name: 'std.ascii.LetterCase.upper', kind: "enummemberdeclaration", path: './std/ascii/letter_case.upper.html', attributes: []},
{name: 'std.ascii.letters', kind: "variabledeclaration", path: './std/ascii/letters.html', attributes: []},
{name: 'std.ascii.lowercase', kind: "variabledeclaration", path: './std/ascii/lowercase.html', attributes: []},
{name: 'std.ascii.lowerHexDigits', kind: "variabledeclaration", path: './std/ascii/lower_hex_digits.html', attributes: []},
{name: 'std.ascii.newline', kind: "variabledeclaration", path: './std/ascii/newline.html', attributes: []},
{name: 'std.ascii.octalDigits', kind: "variabledeclaration", path: './std/ascii/octal_digits.html', attributes: []},
{name: 'std.ascii.toLower', kind: "functiondeclaration", path: './std/ascii/to_lower.html', attributes: ["auto"]},
{name: 'std.ascii.toUpper', kind: "functiondeclaration", path: './std/ascii/to_upper.html', attributes: ["auto"]},
{name: 'std.ascii.uppercase', kind: "variabledeclaration", path: './std/ascii/uppercase.html', attributes: []},
{name: 'std.ascii.whitespace', kind: "variabledeclaration", path: './std/ascii/whitespace.html', attributes: []},
{name: 'std.base64', kind: "module", path: './std/base64.html', attributes: []},
{name: 'std.base64.Base64', kind: "aliasdeclaration", path: './std/base64/base64.html', attributes: []},
{name: 'std.base64.Base64Exception', kind: "classdeclaration", path: './std/base64/base64_exception.html', attributes: []},
{name: 'std.base64.Base64Impl', kind: "templatedeclaration", path: './std/base64/base64_impl.html', attributes: []},
{name: 'std.base64.Base64Impl.decode', kind: "functiondeclaration", path: './std/base64/base64_impl.decode.html', attributes: ["pure", "trusted"]},
{name: 'std.base64.Base64Impl.decodeLength', kind: "functiondeclaration", path: './std/base64/base64_impl.decode_length.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.base64.Base64Impl.Decoder', kind: "structdeclaration", path: './std/base64/base64_impl.decoder.html', attributes: []},
{name: 'std.base64.Base64Impl.Decoder.empty', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.empty.html', attributes: ["property", "trusted"]},
{name: 'std.base64.Base64Impl.Decoder.front', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.front.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Decoder.popFront', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.pop_front.html', attributes: []},
{name: 'std.base64.Base64Impl.decoder', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.html', attributes: []},
{name: 'std.base64.Base64Impl.encode', kind: "functiondeclaration", path: './std/base64/base64_impl.encode.html', attributes: ["pure", "trusted"]},
{name: 'std.base64.Base64Impl.encodeLength', kind: "functiondeclaration", path: './std/base64/base64_impl.encode_length.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.base64.Base64Impl.Encoder', kind: "structdeclaration", path: './std/base64/base64_impl.encoder.html', attributes: []},
{name: 'std.base64.Base64Impl.Encoder.empty', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.empty.html', attributes: ["property", "trusted"]},
{name: 'std.base64.Base64Impl.Encoder.front', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.front.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Encoder.popFront', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.pop_front.html', attributes: []},
{name: 'std.base64.Base64Impl.encoder', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.html', attributes: []},
{name: 'std.base64.Base64Impl.NoPadding', kind: "enummemberdeclaration", path: './std/base64/base64_impl.no_padding.html', attributes: []},
{name: 'std.base64.Base64URL', kind: "aliasdeclaration", path: './std/base64/base64_url.html', attributes: []},
{name: 'std.bigint', kind: "module", path: './std/bigint.html', attributes: []},
{name: 'std.bigint.absUnsign', kind: "functiondeclaration", path: './std/bigint/abs_unsign.html', attributes: []},
{name: 'std.bigint.BigInt', kind: "structdeclaration", path: './std/bigint/big_int.html', attributes: []},
{name: 'std.bigint.BigInt.opAssign', kind: "functiondeclaration", path: './std/bigint/big_int.op_assign.html', attributes: ["pure", "nothrow"]},
{name: 'std.bigint.BigInt.opBinary', kind: "functiondeclaration", path: './std/bigint/big_int.op_binary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.bigint.BigInt.opBinaryRight', kind: "functiondeclaration", path: './std/bigint/big_int.op_binary_right.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.bigint.BigInt.opCast', kind: "functiondeclaration", path: './std/bigint/big_int.op_cast.html', attributes: ["const", "pure", "nothrow", "nogc"]},
{name: 'std.bigint.BigInt.opCmp', kind: "functiondeclaration", path: './std/bigint/big_int.op_cmp.html', attributes: ["const", "pure", "nothrow", "nogc"]},
{name: 'std.bigint.BigInt.opEquals', kind: "functiondeclaration", path: './std/bigint/big_int.op_equals.html', attributes: ["const", "pure", "nogc"]},
{name: 'std.bigint.BigInt.opOpAssign', kind: "functiondeclaration", path: './std/bigint/big_int.op_op_assign.html', attributes: ["pure", "nothrow"]},
{name: 'std.bigint.BigInt.opUnary', kind: "functiondeclaration", path: './std/bigint/big_int.op_unary.html', attributes: ["pure", "nothrow"]},
{name: 'std.bigint.BigInt.this', kind: "functiondeclaration", path: './std/bigint/big_int.this.html', attributes: []},
{name: 'std.bigint.BigInt.toHash', kind: "functiondeclaration", path: './std/bigint/big_int.to_hash.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.bigint.BigInt.toInt', kind: "functiondeclaration", path: './std/bigint/big_int.to_int.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.toLong', kind: "functiondeclaration", path: './std/bigint/big_int.to_long.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.toString', kind: "functiondeclaration", path: './std/bigint/big_int.to_string.html', attributes: ["const"]},
{name: 'std.bigint.BigInt.uintLength', kind: "functiondeclaration", path: './std/bigint/big_int.uint_length.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.ulongLength', kind: "functiondeclaration", path: './std/bigint/big_int.ulong_length.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.bigint.toDecimalString', kind: "functiondeclaration", path: './std/bigint/to_decimal_string.html', attributes: []},
{name: 'std.bigint.toHex', kind: "functiondeclaration", path: './std/bigint/to_hex.html', attributes: []},
{name: 'std.bitmanip', kind: "module", path: './std/bitmanip.html', attributes: []},
{name: 'std.bitmanip.append', kind: "functiondeclaration", path: './std/bitmanip/append.html', attributes: []},
{name: 'std.bitmanip.bigEndianToNative', kind: "functiondeclaration", path: './std/bitmanip/big_endian_to_native.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.BitArray', kind: "structdeclaration", path: './std/bitmanip/bit_array.html', attributes: []},
{name: 'std.bitmanip.BitArray.bitsSet', kind: "functiondeclaration", path: './std/bitmanip/bit_array.bits_set.html', attributes: []},
{name: 'std.bitmanip.BitArray.dim', kind: "functiondeclaration", path: './std/bitmanip/bit_array.dim.html', attributes: ["pure", "nothrow", "property", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.dup', kind: "functiondeclaration", path: './std/bitmanip/bit_array.dup.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'std.bitmanip.BitArray.init', kind: "functiondeclaration", path: './std/bitmanip/bit_array.init.html', attributes: ["pure", "nothrow", "deprecated"]},
{name: 'std.bitmanip.BitArray.length', kind: "functiondeclaration", path: './std/bitmanip/bit_array.length.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.bitmanip.BitArray.opApply', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_apply.html', attributes: []},
{name: 'std.bitmanip.BitArray.opBinary', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_binary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.bitmanip.BitArray.opCast', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cast.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.opCat', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cat.html', attributes: ["pure", "nothrow", "const"]},
{name: 'std.bitmanip.BitArray.opCatAssign', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cat_assign.html', attributes: ["pure", "nothrow"]},
{name: 'std.bitmanip.BitArray.opCat_r', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cat_r.html', attributes: ["pure", "nothrow", "const"]},
{name: 'std.bitmanip.BitArray.opCmp', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.opCom', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_com.html', attributes: ["pure", "nothrow", "const"]},
{name: 'std.bitmanip.BitArray.opEquals', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_equals.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.opIndex', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_index.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.opIndexAssign', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_index_assign.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.opOpAssign', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_op_assign.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.reverse', kind: "functiondeclaration", path: './std/bitmanip/bit_array.reverse.html', attributes: ["pure", "nothrow", "property", "nogc"]},
{name: 'std.bitmanip.BitArray.sort', kind: "functiondeclaration", path: './std/bitmanip/bit_array.sort.html', attributes: ["pure", "nothrow", "property", "nogc"]},
{name: 'std.bitmanip.BitArray.this', kind: "functiondeclaration", path: './std/bitmanip/bit_array.this.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.bitmanip.BitArray.toHash', kind: "functiondeclaration", path: './std/bitmanip/bit_array.to_hash.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.toString', kind: "functiondeclaration", path: './std/bitmanip/bit_array.to_string.html', attributes: ["const"]},
{name: 'std.bitmanip.bitfields', kind: "enummemberdeclaration", path: './std/bitmanip/bitfields.html', attributes: []},
{name: 'std.bitmanip.bitsSet', kind: "functiondeclaration", path: './std/bitmanip/bits_set.html', attributes: ["pure", "nothrow", "nogc", "auto"]},
{name: 'std.bitmanip.DoubleRep', kind: "structdeclaration", path: './std/bitmanip/double_rep.html', attributes: []},
{name: 'std.bitmanip.FloatRep', kind: "structdeclaration", path: './std/bitmanip/float_rep.html', attributes: []},
{name: 'std.bitmanip.littleEndianToNative', kind: "functiondeclaration", path: './std/bitmanip/little_endian_to_native.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.nativeToBigEndian', kind: "functiondeclaration", path: './std/bitmanip/native_to_big_endian.html', attributes: ["pure", "nothrow", "nogc", "safe", "auto"]},
{name: 'std.bitmanip.nativeToLittleEndian', kind: "functiondeclaration", path: './std/bitmanip/native_to_little_endian.html', attributes: ["pure", "nothrow", "nogc", "safe", "auto"]},
{name: 'std.bitmanip.peek', kind: "functiondeclaration", path: './std/bitmanip/peek.html', attributes: []},
{name: 'std.bitmanip.read', kind: "functiondeclaration", path: './std/bitmanip/read.html', attributes: []},
{name: 'std.bitmanip.swapEndian', kind: "functiondeclaration", path: './std/bitmanip/swap_endian.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.taggedClassRef', kind: "enummemberdeclaration", path: './std/bitmanip/tagged_class_ref.html', attributes: []},
{name: 'std.bitmanip.taggedPointer', kind: "enummemberdeclaration", path: './std/bitmanip/tagged_pointer.html', attributes: []},
{name: 'std.bitmanip.write', kind: "functiondeclaration", path: './std/bitmanip/write.html', attributes: []},
{name: 'std.compiler', kind: "module", path: './std/compiler.html', attributes: []},
{name: 'std.compiler.D_major', kind: "variabledeclaration", path: './std/compiler/d_major.html', attributes: []},
{name: 'std.compiler.name', kind: "variabledeclaration", path: './std/compiler/name.html', attributes: []},
{name: 'std.compiler.Vendor', kind: "enumdeclaration", path: './std/compiler/vendor.html', attributes: []},
{name: 'std.compiler.Vendor.digitalMars', kind: "enummemberdeclaration", path: './std/compiler/vendor.digital_mars.html', attributes: []},
{name: 'std.compiler.Vendor.dotNET', kind: "enummemberdeclaration", path: './std/compiler/vendor.dot_net.html', attributes: []},
{name: 'std.compiler.Vendor.gnu', kind: "enummemberdeclaration", path: './std/compiler/vendor.gnu.html', attributes: []},
{name: 'std.compiler.Vendor.llvm', kind: "enummemberdeclaration", path: './std/compiler/vendor.llvm.html', attributes: []},
{name: 'std.compiler.Vendor.sdc', kind: "enummemberdeclaration", path: './std/compiler/vendor.sdc.html', attributes: []},
{name: 'std.compiler.Vendor.unknown', kind: "enummemberdeclaration", path: './std/compiler/vendor.unknown.html', attributes: []},
{name: 'std.compiler.vendor', kind: "variabledeclaration", path: './std/compiler/vendor.html', attributes: []},
{name: 'std.compiler.version_major', kind: "variabledeclaration", path: './std/compiler/version_major.html', attributes: []},
{name: 'std.compiler.version_minor', kind: "variabledeclaration", path: './std/compiler/version_minor.html', attributes: []},
{name: 'std.complex', kind: "module", path: './std/complex.html', attributes: []},
{name: 'std.complex.abs', kind: "functiondeclaration", path: './std/complex/abs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.arg', kind: "functiondeclaration", path: './std/complex/arg.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.complex', kind: "functiondeclaration", path: './std/complex/complex.html', attributes: ["pure", "nothrow", "nogc", "safe", "auto"]},
{name: 'std.complex.Complex', kind: "structdeclaration", path: './std/complex/complex.html', attributes: []},
{name: 'std.complex.Complex.im', kind: "variabledeclaration", path: './std/complex/complex.im.html', attributes: []},
{name: 'std.complex.Complex.re', kind: "variabledeclaration", path: './std/complex/complex.re.html', attributes: []},
{name: 'std.complex.Complex.toString', kind: "functiondeclaration", path: './std/complex/complex.to_string.html', attributes: ["const"]},
{name: 'std.complex.Complex.toString.toString', kind: "functiondeclaration", path: './std/complex/complex.to_string.to_string.html', attributes: ["const"]},
{name: 'std.complex.conj', kind: "functiondeclaration", path: './std/complex/conj.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.cos', kind: "functiondeclaration", path: './std/complex/cos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.expi', kind: "functiondeclaration", path: './std/complex/expi.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.complex.fromPolar', kind: "functiondeclaration", path: './std/complex/from_polar.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.sin', kind: "functiondeclaration", path: './std/complex/sin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.sqAbs', kind: "functiondeclaration", path: './std/complex/sq_abs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.sqrt', kind: "functiondeclaration", path: './std/complex/sqrt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.concurrency', kind: "module", path: './std/concurrency.html', attributes: []},
{name: 'std.concurrency.FiberScheduler', kind: "classdeclaration", path: './std/concurrency/fiber_scheduler.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.newCondition', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.new_condition.html', attributes: ["nothrow"]},
{name: 'std.concurrency.FiberScheduler.spawn', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.spawn.html', attributes: ["nothrow"]},
{name: 'std.concurrency.FiberScheduler.start', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.start.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.thisInfo', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.this_info.html', attributes: ["nothrow", "ref", "property"]},
{name: 'std.concurrency.FiberScheduler.yield', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.yield.html', attributes: ["nothrow"]},
{name: 'std.concurrency.Scheduler.spawn', kind: "functiondeclaration", path: './std/concurrency/scheduler.spawn.html', attributes: ["abstract"]},
{name: 'std.concurrency.Generator', kind: "classdeclaration", path: './std/concurrency/generator.html', attributes: []},
{name: 'std.concurrency.Generator.empty', kind: "functiondeclaration", path: './std/concurrency/generator.empty.html', attributes: ["property", "final"]},
{name: 'std.concurrency.Generator.front', kind: "functiondeclaration", path: './std/concurrency/generator.front.html', attributes: ["property", "final"]},
{name: 'std.concurrency.Generator.popFront', kind: "functiondeclaration", path: './std/concurrency/generator.pop_front.html', attributes: ["final"]},
{name: 'std.concurrency.Generator.this', kind: "functiondeclaration", path: './std/concurrency/generator.this.html', attributes: []},
{name: 'std.concurrency.initOnce', kind: "functiondeclaration", path: './std/concurrency/init_once.html', attributes: ["auto"]},
{name: 'std.concurrency.LinkTerminated', kind: "classdeclaration", path: './std/concurrency/link_terminated.html', attributes: []},
{name: 'std.concurrency.locate', kind: "functiondeclaration", path: './std/concurrency/locate.html', attributes: []},
{name: 'std.concurrency.MailboxFull', kind: "classdeclaration", path: './std/concurrency/mailbox_full.html', attributes: []},
{name: 'std.concurrency.MessageMismatch', kind: "classdeclaration", path: './std/concurrency/message_mismatch.html', attributes: []},
{name: 'std.concurrency.OnCrowding', kind: "enumdeclaration", path: './std/concurrency/on_crowding.html', attributes: []},
{name: 'std.concurrency.OnCrowding.block', kind: "enummemberdeclaration", path: './std/concurrency/on_crowding.block.html', attributes: []},
{name: 'std.concurrency.OnCrowding.ignore', kind: "enummemberdeclaration", path: './std/concurrency/on_crowding.ignore.html', attributes: []},
{name: 'std.concurrency.OnCrowding.throwException', kind: "enummemberdeclaration", path: './std/concurrency/on_crowding.throw_exception.html', attributes: []},
{name: 'std.concurrency.OwnerTerminated', kind: "classdeclaration", path: './std/concurrency/owner_terminated.html', attributes: []},
{name: 'std.concurrency.ownerTid', kind: "functiondeclaration", path: './std/concurrency/owner_tid.html', attributes: ["property"]},
{name: 'std.concurrency.PriorityMessageException', kind: "classdeclaration", path: './std/concurrency/priority_message_exception.html', attributes: []},
{name: 'std.concurrency.PriorityMessageException.message', kind: "variabledeclaration", path: './std/concurrency/priority_message_exception.message.html', attributes: []},
{name: 'std.concurrency.prioritySend', kind: "functiondeclaration", path: './std/concurrency/priority_send.html', attributes: []},
{name: 'std.concurrency.receive', kind: "functiondeclaration", path: './std/concurrency/receive.html', attributes: []},
{name: 'std.concurrency.receiveOnly', kind: "functiondeclaration", path: './std/concurrency/receive_only.html', attributes: []},
{name: 'std.concurrency.receiveTimeout', kind: "functiondeclaration", path: './std/concurrency/receive_timeout.html', attributes: []},
{name: 'std.concurrency.register', kind: "functiondeclaration", path: './std/concurrency/register.html', attributes: []},
{name: 'std.concurrency.Scheduler', kind: "interfacedeclaration", path: './std/concurrency/scheduler.html', attributes: []},
{name: 'std.concurrency.Scheduler.newCondition', kind: "functiondeclaration", path: './std/concurrency/scheduler.new_condition.html', attributes: ["nothrow", "abstract"]},
{name: 'std.concurrency.Scheduler.start', kind: "functiondeclaration", path: './std/concurrency/scheduler.start.html', attributes: ["abstract"]},
{name: 'std.concurrency.Scheduler.thisInfo', kind: "functiondeclaration", path: './std/concurrency/scheduler.this_info.html', attributes: ["nothrow", "ref", "property", "abstract"]},
{name: 'std.concurrency.Scheduler.yield', kind: "functiondeclaration", path: './std/concurrency/scheduler.yield.html', attributes: ["nothrow", "abstract"]},
{name: 'std.concurrency.scheduler', kind: "variabledeclaration", path: './std/concurrency/scheduler.html', attributes: []},
{name: 'std.concurrency.send', kind: "functiondeclaration", path: './std/concurrency/send.html', attributes: []},
{name: 'std.concurrency.setMaxMailboxSize', kind: "functiondeclaration", path: './std/concurrency/set_max_mailbox_size.html', attributes: []},
{name: 'std.concurrency.spawn', kind: "functiondeclaration", path: './std/concurrency/spawn.html', attributes: []},
{name: 'std.concurrency.spawnLinked', kind: "functiondeclaration", path: './std/concurrency/spawn_linked.html', attributes: []},
{name: 'std.concurrency.thisTid', kind: "functiondeclaration", path: './std/concurrency/this_tid.html', attributes: ["property", "safe"]},
{name: 'std.concurrency.ThreadInfo', kind: "structdeclaration", path: './std/concurrency/thread_info.html', attributes: []},
{name: 'std.concurrency.ThreadInfo.cleanup', kind: "functiondeclaration", path: './std/concurrency/thread_info.cleanup.html', attributes: []},
{name: 'std.concurrency.ThreadInfo.thisInfo', kind: "functiondeclaration", path: './std/concurrency/thread_info.this_info.html', attributes: ["nothrow", "ref", "property", "static"]},
{name: 'std.concurrency.ThreadScheduler', kind: "classdeclaration", path: './std/concurrency/thread_scheduler.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.newCondition', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.new_condition.html', attributes: ["nothrow"]},
{name: 'std.concurrency.ThreadScheduler.spawn', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.spawn.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.start', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.start.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.thisInfo', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.this_info.html', attributes: ["nothrow", "ref", "property"]},
{name: 'std.concurrency.ThreadScheduler.yield', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.yield.html', attributes: ["nothrow"]},
{name: 'std.concurrency.Tid', kind: "structdeclaration", path: './std/concurrency/tid.html', attributes: []},
{name: 'std.concurrency.Tid.toString', kind: "functiondeclaration", path: './std/concurrency/tid.to_string.html', attributes: []},
{name: 'std.concurrency.TidMissingException', kind: "classdeclaration", path: './std/concurrency/tid_missing_exception.html', attributes: []},
{name: 'std.concurrency.unregister', kind: "functiondeclaration", path: './std/concurrency/unregister.html', attributes: []},
{name: 'std.concurrency.yield', kind: "functiondeclaration", path: './std/concurrency/yield.html', attributes: ["nothrow"]},
{name: 'std.container', kind: "module", path: './std/container.html', attributes: []},
{name: 'std.conv', kind: "module", path: './std/conv.html', attributes: []},
{name: 'std.conv.castFrom', kind: "templatedeclaration", path: './std/conv/cast_from.html', attributes: []},
{name: 'std.conv.ConvException', kind: "classdeclaration", path: './std/conv/conv_exception.html', attributes: []},
{name: 'std.conv.ConvOverflowException', kind: "classdeclaration", path: './std/conv/conv_overflow_exception.html', attributes: []},
{name: 'std.conv.dtext', kind: "functiondeclaration", path: './std/conv/dtext.html', attributes: []},
{name: 'std.conv.emplace', kind: "functiondeclaration", path: './std/conv/emplace.html', attributes: []},
{name: 'std.conv.octal', kind: "enummemberdeclaration", path: './std/conv/octal.html', attributes: []},
{name: 'std.conv.parse', kind: "functiondeclaration", path: './std/conv/parse.html', attributes: []},
{name: 'std.conv.roundTo', kind: "templatedeclaration", path: './std/conv/round_to.html', attributes: []},
{name: 'std.conv.roundTo.roundTo', kind: "functiondeclaration", path: './std/conv/round_to.round_to.html', attributes: []},
{name: 'std.conv.signed', kind: "functiondeclaration", path: './std/conv/signed.html', attributes: ["auto"]},
{name: 'std.conv.text', kind: "functiondeclaration", path: './std/conv/text.html', attributes: []},
{name: 'std.conv.to', kind: "templatedeclaration", path: './std/conv/to.html', attributes: []},
{name: 'std.conv.to.to', kind: "functiondeclaration", path: './std/conv/to.to.html', attributes: []},
{name: 'std.conv.toImpl', kind: "functiondeclaration", path: './std/conv/to_impl.html', attributes: []},
{name: 'std.conv.unsigned', kind: "functiondeclaration", path: './std/conv/unsigned.html', attributes: ["auto"]},
{name: 'std.conv.wtext', kind: "functiondeclaration", path: './std/conv/wtext.html', attributes: []},
{name: 'std.cstream', kind: "module", path: './std/cstream.html', attributes: []},
{name: 'std.cstream.CFile', kind: "classdeclaration", path: './std/cstream/c_file.html', attributes: []},
{name: 'std.cstream.CFile.close', kind: "functiondeclaration", path: './std/cstream/c_file.close.html', attributes: ["override"]},
{name: 'std.cstream.CFile.eof', kind: "functiondeclaration", path: './std/cstream/c_file.eof.html', attributes: ["override"]},
{name: 'std.cstream.CFile.file', kind: "functiondeclaration", path: './std/cstream/c_file.file.html', attributes: ["property"]},
{name: 'std.cstream.CFile.flush', kind: "functiondeclaration", path: './std/cstream/c_file.flush.html', attributes: ["override"]},
{name: 'std.cstream.CFile.getc', kind: "functiondeclaration", path: './std/cstream/c_file.getc.html', attributes: ["override"]},
{name: 'std.cstream.CFile.readBlock', kind: "functiondeclaration", path: './std/cstream/c_file.read_block.html', attributes: ["override"]},
{name: 'std.cstream.CFile.seek', kind: "functiondeclaration", path: './std/cstream/c_file.seek.html', attributes: ["override"]},
{name: 'std.cstream.CFile.this', kind: "functiondeclaration", path: './std/cstream/c_file.this.html', attributes: []},
{name: 'std.cstream.CFile.ungetc', kind: "functiondeclaration", path: './std/cstream/c_file.ungetc.html', attributes: ["override"]},
{name: 'std.cstream.CFile.writeBlock', kind: "functiondeclaration", path: './std/cstream/c_file.write_block.html', attributes: ["override"]},
{name: 'std.cstream.CFile.writeLine', kind: "functiondeclaration", path: './std/cstream/c_file.write_line.html', attributes: ["override"]},
{name: 'std.cstream.CFile.writeLineW', kind: "functiondeclaration", path: './std/cstream/c_file.write_line.html', attributes: ["override"]},
{name: 'std.stream.InputStream.available', kind: "functiondeclaration", path: './std/stream/input_stream.available.html', attributes: ["property", "abstract"]},
{name: 'std.stream.Stream.copyFrom', kind: "functiondeclaration", path: './std/stream/stream.copy_from.html', attributes: []},
{name: 'std.stream.InputStream.eof', kind: "functiondeclaration", path: './std/stream/input_stream.eof.html', attributes: ["property", "abstract"]},
{name: 'std.stream.InputStream.getcw', kind: "functiondeclaration", path: './std/stream/input_stream.getcw.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.isOpen', kind: "functiondeclaration", path: './std/stream/input_stream.is_open.html', attributes: ["property", "abstract"]},
{name: 'std.stream.InputStream.opApply', kind: "functiondeclaration", path: './std/stream/input_stream.op_apply.html', attributes: ["abstract"]},
{name: 'std.stream.Stream.position', kind: "functiondeclaration", path: './std/stream/stream.position.html', attributes: ["property"]},
{name: 'std.stream.OutputStream.printf', kind: "functiondeclaration", path: './std/stream/output_stream.printf.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.read', kind: "functiondeclaration", path: './std/stream/input_stream.read.html', attributes: ["abstract"]},
{name: 'std.stream.Stream.readable', kind: "variabledeclaration", path: './std/stream/stream.readable.html', attributes: []},
{name: 'std.stream.InputStream.readExact', kind: "functiondeclaration", path: './std/stream/input_stream.read_exact.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.readf', kind: "functiondeclaration", path: './std/stream/input_stream.readf.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.readLine', kind: "functiondeclaration", path: './std/stream/input_stream.read_line.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.readLineW', kind: "functiondeclaration", path: './std/stream/input_stream.read_line.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.readString', kind: "functiondeclaration", path: './std/stream/input_stream.read_string.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.readStringW', kind: "functiondeclaration", path: './std/stream/input_stream.read_string.html', attributes: ["abstract"]},
{name: 'std.stream.Stream.seekable', kind: "variabledeclaration", path: './std/stream/stream.seekable.html', attributes: []},
{name: 'std.stream.Stream.seekCur', kind: "functiondeclaration", path: './std/stream/stream.seek_cur.html', attributes: []},
{name: 'std.stream.Stream.seekEnd', kind: "functiondeclaration", path: './std/stream/stream.seek_end.html', attributes: []},
{name: 'std.stream.Stream.seekSet', kind: "functiondeclaration", path: './std/stream/stream.seek_set.html', attributes: []},
{name: 'std.stream.Stream.size', kind: "functiondeclaration", path: './std/stream/stream.size.html', attributes: ["property"]},
{name: 'std.stream.Stream.toHash', kind: "functiondeclaration", path: './std/stream/stream.to_hash.html', attributes: ["nothrow", "trusted", "override"]},
{name: 'std.stream.Stream.toString', kind: "functiondeclaration", path: './std/stream/stream.to_string.html', attributes: ["override"]},
{name: 'std.stream.InputStream.ungetcw', kind: "functiondeclaration", path: './std/stream/input_stream.ungetcw.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.vprintf', kind: "functiondeclaration", path: './std/stream/output_stream.vprintf.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.vreadf', kind: "functiondeclaration", path: './std/stream/input_stream.vreadf.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.write', kind: "functiondeclaration", path: './std/stream/output_stream.write.html', attributes: ["abstract"]},
{name: 'std.stream.Stream.writeable', kind: "variabledeclaration", path: './std/stream/stream.writeable.html', attributes: []},
{name: 'std.stream.OutputStream.writeExact', kind: "functiondeclaration", path: './std/stream/output_stream.write_exact.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writef', kind: "functiondeclaration", path: './std/stream/output_stream.writef.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writefln', kind: "functiondeclaration", path: './std/stream/output_stream.writefln.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writefx', kind: "functiondeclaration", path: './std/stream/output_stream.writefx.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writeString', kind: "functiondeclaration", path: './std/stream/output_stream.write_string.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writeStringW', kind: "functiondeclaration", path: './std/stream/output_stream.write_string.html', attributes: ["abstract"]},
{name: 'std.stream.Stream.isopen', kind: "variabledeclaration", path: './std/stream/stream.isopen.html', attributes: []},
{name: 'std.stream.Stream.prevCr', kind: "variabledeclaration", path: './std/stream/stream.prev_cr.html', attributes: []},
{name: 'std.stream.Stream.readEOF', kind: "variabledeclaration", path: './std/stream/stream.read_eof.html', attributes: []},
{name: 'std.cstream.derr', kind: "variabledeclaration", path: './std/cstream/derr.html', attributes: []},
{name: 'std.cstream.din', kind: "variabledeclaration", path: './std/cstream/din.html', attributes: []},
{name: 'std.cstream.dout', kind: "variabledeclaration", path: './std/cstream/dout.html', attributes: []},
{name: 'std.csv', kind: "module", path: './std/csv.html', attributes: []},
{name: 'std.csv.CSVException', kind: "classdeclaration", path: './std/csv/csv_exception.html', attributes: []},
{name: 'std.csv.CSVException.col', kind: "variabledeclaration", path: './std/csv/csv_exception.col.html', attributes: []},
{name: 'std.csv.CSVException.row', kind: "variabledeclaration", path: './std/csv/csv_exception.row.html', attributes: []},
{name: 'std.csv.csvNextToken', kind: "functiondeclaration", path: './std/csv/csv_next_token.html', attributes: []},
{name: 'std.csv.csvReader', kind: "functiondeclaration", path: './std/csv/csv_reader.html', attributes: ["auto"]},
{name: 'std.csv.HeaderMismatchException', kind: "classdeclaration", path: './std/csv/header_mismatch_exception.html', attributes: []},
{name: 'std.csv.IncompleteCellException', kind: "classdeclaration", path: './std/csv/incomplete_cell_exception.html', attributes: []},
{name: 'std.csv.IncompleteCellException.partialData', kind: "variabledeclaration", path: './std/csv/incomplete_cell_exception.partial_data.html', attributes: []},
{name: 'std.csv.Malformed', kind: "enumdeclaration", path: './std/csv/malformed.html', attributes: []},
{name: 'std.csv.Malformed.ignore', kind: "enummemberdeclaration", path: './std/csv/malformed.ignore.html', attributes: []},
{name: 'std.csv.Malformed.throwException', kind: "enummemberdeclaration", path: './std/csv/malformed.throw_exception.html', attributes: []},
{name: 'std.datetime', kind: "module", path: './std/datetime.html', attributes: []},
{name: 'std.datetime.AllowDayOverflow', kind: "enumdeclaration", path: './std/datetime/allow_day_overflow.html', attributes: []},
{name: 'std.datetime.AllowDayOverflow.no', kind: "enummemberdeclaration", path: './std/datetime/allow_day_overflow.no.html', attributes: []},
{name: 'std.datetime.AllowDayOverflow.yes', kind: "enummemberdeclaration", path: './std/datetime/allow_day_overflow.yes.html', attributes: []},
{name: 'std.datetime.AutoStart', kind: "enumdeclaration", path: './std/datetime/auto_start.html', attributes: []},
{name: 'std.datetime.AutoStart.no', kind: "enummemberdeclaration", path: './std/datetime/auto_start.no.html', attributes: []},
{name: 'std.datetime.AutoStart.yes', kind: "enummemberdeclaration", path: './std/datetime/auto_start.yes.html', attributes: []},
{name: 'std.datetime.benchmark', kind: "functiondeclaration", path: './std/datetime/benchmark.html', attributes: []},
{name: 'std.datetime.clearTZEnvVar', kind: "functiondeclaration", path: './std/datetime/clear_tz_env_var.html', attributes: ["nothrow", "safe"]},
{name: 'std.datetime.Clock', kind: "classdeclaration", path: './std/datetime/clock.html', attributes: []},
{name: 'std.datetime.Clock.currAppTick', kind: "functiondeclaration", path: './std/datetime/clock.curr_app_tick.html', attributes: ["property", "safe", "static"]},
{name: 'std.datetime.Clock.currStdTime', kind: "functiondeclaration", path: './std/datetime/clock.curr_std_time.html', attributes: ["property", "trusted", "static"]},
{name: 'std.datetime.Clock.currSystemTick', kind: "functiondeclaration", path: './std/datetime/clock.curr_system_tick.html', attributes: ["nothrow", "property", "safe", "static"]},
{name: 'std.datetime.Clock.currTime', kind: "functiondeclaration", path: './std/datetime/clock.curr_time.html', attributes: ["safe", "static"]},
{name: 'std.datetime.CmpTimeUnits', kind: "enummemberdeclaration", path: './std/datetime/cmp_time_units.html', attributes: []},
{name: 'std.datetime.cmpTimeUnits', kind: "functiondeclaration", path: './std/datetime/cmp_time_units.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.comparingBenchmark', kind: "functiondeclaration", path: './std/datetime/comparing_benchmark.html', attributes: []},
{name: 'std.datetime.ComparingBenchmarkResult', kind: "structdeclaration", path: './std/datetime/comparing_benchmark_result.html', attributes: []},
{name: 'std.datetime.ComparingBenchmarkResult.baseTime', kind: "functiondeclaration", path: './std/datetime/comparing_benchmark_result.base_time.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.ComparingBenchmarkResult.point', kind: "functiondeclaration", path: './std/datetime/comparing_benchmark_result.point.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.ComparingBenchmarkResult.targetTime', kind: "functiondeclaration", path: './std/datetime/comparing_benchmark_result.target_time.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date', kind: "structdeclaration", path: './std/datetime/date.html', attributes: []},
{name: 'std.datetime.Date.add', kind: "functiondeclaration", path: './std/datetime/date.add.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.Date.day', kind: "functiondeclaration", path: './std/datetime/date.day.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.dayOfGregorianCal', kind: "functiondeclaration", path: './std/datetime/date.day_of_gregorian_cal.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.datetime.Date.dayOfWeek', kind: "functiondeclaration", path: './std/datetime/date.day_of_week.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.dayOfYear', kind: "functiondeclaration", path: './std/datetime/date.day_of_year.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.Date.daysInMonth', kind: "functiondeclaration", path: './std/datetime/date.days_in_month.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.diffMonths', kind: "functiondeclaration", path: './std/datetime/date.diff_months.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.Date.endOfMonth', kind: "functiondeclaration", path: './std/datetime/date.end_of_month.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/date.from_iso_ext_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.Date.fromISOString', kind: "functiondeclaration", path: './std/datetime/date.from_iso_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.Date.fromSimpleString', kind: "functiondeclaration", path: './std/datetime/date.from_simple_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.Date.isAD', kind: "functiondeclaration", path: './std/datetime/date.is_ad.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.isLeapYear', kind: "functiondeclaration", path: './std/datetime/date.is_leap_year.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.isoWeek', kind: "functiondeclaration", path: './std/datetime/date.iso_week.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.julianDay', kind: "functiondeclaration", path: './std/datetime/date.julian_day.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.max', kind: "functiondeclaration", path: './std/datetime/date.max.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.Date.min', kind: "functiondeclaration", path: './std/datetime/date.min.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.Date.modJulianDay', kind: "functiondeclaration", path: './std/datetime/date.mod_julian_day.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.Date.month', kind: "functiondeclaration", path: './std/datetime/date.month.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.Date.opBinary', kind: "functiondeclaration", path: './std/datetime/date.op_binary.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.datetime.Date.opCmp', kind: "functiondeclaration", path: './std/datetime/date.op_cmp.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.Date.opOpAssign', kind: "functiondeclaration", path: './std/datetime/date.op_op_assign.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.Date.roll', kind: "functiondeclaration", path: './std/datetime/date.roll.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.Date.this', kind: "functiondeclaration", path: './std/datetime/date.this.html', attributes: ["pure", "ref", "safe"]},
{name: 'std.datetime.Date.toISOExtString', kind: "functiondeclaration", path: './std/datetime/date.to_iso_ext_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.Date.toISOString', kind: "functiondeclaration", path: './std/datetime/date.to_iso_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.Date.toSimpleString', kind: "functiondeclaration", path: './std/datetime/date.to_simple_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.Date.toString', kind: "functiondeclaration", path: './std/datetime/date.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.Date.year', kind: "functiondeclaration", path: './std/datetime/date.year.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.Date.yearBC', kind: "functiondeclaration", path: './std/datetime/date.year_bc.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.DateTime', kind: "structdeclaration", path: './std/datetime/date_time.html', attributes: []},
{name: 'std.datetime.DateTime.add', kind: "functiondeclaration", path: './std/datetime/date_time.add.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.DateTime.date', kind: "functiondeclaration", path: './std/datetime/date_time.date.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.day', kind: "functiondeclaration", path: './std/datetime/date_time.day.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.DateTime.dayOfGregorianCal', kind: "functiondeclaration", path: './std/datetime/date_time.day_of_gregorian_cal.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.dayOfWeek', kind: "functiondeclaration", path: './std/datetime/date_time.day_of_week.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.dayOfYear', kind: "functiondeclaration", path: './std/datetime/date_time.day_of_year.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.daysInMonth', kind: "functiondeclaration", path: './std/datetime/date_time.days_in_month.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.diffMonths', kind: "functiondeclaration", path: './std/datetime/date_time.diff_months.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.DateTime.endOfMonth', kind: "functiondeclaration", path: './std/datetime/date_time.end_of_month.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/date_time.from_iso_ext_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.DateTime.fromISOString', kind: "functiondeclaration", path: './std/datetime/date_time.from_iso_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.DateTime.fromSimpleString', kind: "functiondeclaration", path: './std/datetime/date_time.from_simple_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.DateTime.hour', kind: "functiondeclaration", path: './std/datetime/date_time.hour.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.isAD', kind: "functiondeclaration", path: './std/datetime/date_time.is_ad.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.isLeapYear', kind: "functiondeclaration", path: './std/datetime/date_time.is_leap_year.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.isoWeek', kind: "functiondeclaration", path: './std/datetime/date_time.iso_week.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.julianDay', kind: "functiondeclaration", path: './std/datetime/date_time.julian_day.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.max', kind: "functiondeclaration", path: './std/datetime/date_time.max.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.DateTime.min', kind: "functiondeclaration", path: './std/datetime/date_time.min.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.DateTime.minute', kind: "functiondeclaration", path: './std/datetime/date_time.minute.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.modJulianDay', kind: "functiondeclaration", path: './std/datetime/date_time.mod_julian_day.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.DateTime.month', kind: "functiondeclaration", path: './std/datetime/date_time.month.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.DateTime.opBinary', kind: "functiondeclaration", path: './std/datetime/date_time.op_binary.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.datetime.DateTime.opCmp', kind: "functiondeclaration", path: './std/datetime/date_time.op_cmp.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.DateTime.opOpAssign', kind: "functiondeclaration", path: './std/datetime/date_time.op_op_assign.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.DateTime.roll', kind: "functiondeclaration", path: './std/datetime/date_time.roll.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.DateTime.second', kind: "functiondeclaration", path: './std/datetime/date_time.second.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.DateTime.this', kind: "functiondeclaration", path: './std/datetime/date_time.this.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.DateTime.timeOfDay', kind: "functiondeclaration", path: './std/datetime/date_time.time_of_day.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.datetime.DateTime.toISOExtString', kind: "functiondeclaration", path: './std/datetime/date_time.to_iso_ext_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.DateTime.toISOString', kind: "functiondeclaration", path: './std/datetime/date_time.to_iso_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.DateTime.toSimpleString', kind: "functiondeclaration", path: './std/datetime/date_time.to_simple_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.DateTime.toString', kind: "functiondeclaration", path: './std/datetime/date_time.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.DateTime.year', kind: "functiondeclaration", path: './std/datetime/date_time.year.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.DateTime.yearBC', kind: "functiondeclaration", path: './std/datetime/date_time.year_bc.html', attributes: ["pure", "property", "safe"]},
{name: 'std.datetime.DateTimeException', kind: "aliasdeclaration", path: './std/datetime/date_time_exception.html', attributes: []},
{name: 'std.datetime.DayOfWeek', kind: "enumdeclaration", path: './std/datetime/day_of_week.html', attributes: []},
{name: 'std.datetime.DayOfWeek.fri', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.fri.html', attributes: []},
{name: 'std.datetime.DayOfWeek.mon', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.mon.html', attributes: []},
{name: 'std.datetime.DayOfWeek.sat', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.sat.html', attributes: []},
{name: 'std.datetime.DayOfWeek.sun', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.sun.html', attributes: []},
{name: 'std.datetime.DayOfWeek.thu', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.thu.html', attributes: []},
{name: 'std.datetime.DayOfWeek.tue', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.tue.html', attributes: []},
{name: 'std.datetime.DayOfWeek.wed', kind: "enummemberdeclaration", path: './std/datetime/day_of_week.wed.html', attributes: []},
{name: 'std.datetime.daysToDayOfWeek', kind: "functiondeclaration", path: './std/datetime/days_to_day_of_week.html', attributes: ["pure", "nothrow", "safe", "static"]},
{name: 'std.datetime.Direction', kind: "enumdeclaration", path: './std/datetime/direction.html', attributes: []},
{name: 'std.datetime.Direction.both', kind: "enummemberdeclaration", path: './std/datetime/direction.both.html', attributes: []},
{name: 'std.datetime.Direction.bwd', kind: "enummemberdeclaration", path: './std/datetime/direction.bwd.html', attributes: []},
{name: 'std.datetime.Direction.fwd', kind: "enummemberdeclaration", path: './std/datetime/direction.fwd.html', attributes: []},
{name: 'std.datetime.DosFileTime', kind: "aliasdeclaration", path: './std/datetime/dos_file_time.html', attributes: []},
{name: 'std.datetime.DosFileTimeToSysTime', kind: "functiondeclaration", path: './std/datetime/dos_file_time_to_sys_time.html', attributes: ["safe"]},
{name: 'std.datetime.enforceValid', kind: "functiondeclaration", path: './std/datetime/enforce_valid.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.everyDayOfWeek', kind: "functiondeclaration", path: './std/datetime/every_day_of_week.html', attributes: ["nothrow"]},
{name: 'std.datetime.everyDuration', kind: "functiondeclaration", path: './std/datetime/every_duration.html', attributes: ["nothrow"]},
{name: 'std.datetime.everyMonth', kind: "functiondeclaration", path: './std/datetime/every_month.html', attributes: []},
{name: 'std.datetime.FILETIMEToStdTime', kind: "functiondeclaration", path: './std/datetime/filetime_to_std_time.html', attributes: ["safe"]},
{name: 'std.datetime.FILETIMEToSysTime', kind: "functiondeclaration", path: './std/datetime/filetime_to_sys_time.html', attributes: ["safe"]},
{name: 'std.datetime.Interval', kind: "structdeclaration", path: './std/datetime/interval.html', attributes: []},
{name: 'std.datetime.Interval.begin', kind: "functiondeclaration", path: './std/datetime/interval.begin.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.Interval.bwdRange', kind: "functiondeclaration", path: './std/datetime/interval.bwd_range.html', attributes: ["const"]},
{name: 'std.datetime.Interval.contains', kind: "functiondeclaration", path: './std/datetime/interval.contains.html', attributes: ["const", "pure"]},
{name: 'std.datetime.Interval.empty', kind: "functiondeclaration", path: './std/datetime/interval.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.Interval.end', kind: "functiondeclaration", path: './std/datetime/interval.end.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.Interval.expand', kind: "templatedeclaration", path: './std/datetime/interval.expand.html', attributes: []},
{name: 'std.datetime.Interval.expand.expand', kind: "functiondeclaration", path: './std/datetime/interval.expand.expand.html', attributes: ["pure"]},
{name: 'std.datetime.Interval.fwdRange', kind: "functiondeclaration", path: './std/datetime/interval.fwd_range.html', attributes: ["const"]},
{name: 'std.datetime.Interval.intersection', kind: "functiondeclaration", path: './std/datetime/interval.intersection.html', attributes: ["const"]},
{name: 'std.datetime.Interval.intersects', kind: "functiondeclaration", path: './std/datetime/interval.intersects.html', attributes: ["const", "pure"]},
{name: 'std.datetime.Interval.isAdjacent', kind: "functiondeclaration", path: './std/datetime/interval.is_adjacent.html', attributes: ["const", "pure"]},
{name: 'std.datetime.Interval.isAfter', kind: "functiondeclaration", path: './std/datetime/interval.is_after.html', attributes: ["const", "pure"]},
{name: 'std.datetime.Interval.isBefore', kind: "functiondeclaration", path: './std/datetime/interval.is_before.html', attributes: ["const", "pure"]},
{name: 'std.datetime.Interval.length', kind: "functiondeclaration", path: './std/datetime/interval.length.html', attributes: ["const", "pure", "nothrow", "property", "auto"]},
{name: 'std.datetime.Interval.merge', kind: "functiondeclaration", path: './std/datetime/interval.merge.html', attributes: ["const"]},
{name: 'std.datetime.Interval.opAssign', kind: "functiondeclaration", path: './std/datetime/interval.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.Interval.shift', kind: "templatedeclaration", path: './std/datetime/interval.shift.html', attributes: []},
{name: 'std.datetime.Interval.shift.shift', kind: "functiondeclaration", path: './std/datetime/interval.shift.shift.html', attributes: ["pure"]},
{name: 'std.datetime.Interval.span', kind: "functiondeclaration", path: './std/datetime/interval.span.html', attributes: ["const", "pure"]},
{name: 'std.datetime.Interval.this', kind: "templatedeclaration", path: './std/datetime/interval.this.html', attributes: []},
{name: 'std.datetime.Interval.this.this', kind: "functiondeclaration", path: './std/datetime/interval.this.this.html', attributes: []},
{name: 'std.datetime.Interval.toString', kind: "functiondeclaration", path: './std/datetime/interval.to_string.html', attributes: ["const", "nothrow"]},
{name: 'std.datetime.IntervalRange', kind: "structdeclaration", path: './std/datetime/interval_range.html', attributes: []},
{name: 'std.datetime.IntervalRange.direction', kind: "functiondeclaration", path: './std/datetime/interval_range.direction.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.IntervalRange.empty', kind: "functiondeclaration", path: './std/datetime/interval_range.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.IntervalRange.front', kind: "functiondeclaration", path: './std/datetime/interval_range.front.html', attributes: ["const", "pure", "property"]},
{name: 'std.datetime.IntervalRange.func', kind: "functiondeclaration", path: './std/datetime/interval_range.func.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.IntervalRange.interval', kind: "functiondeclaration", path: './std/datetime/interval_range.interval.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.IntervalRange.opAssign', kind: "functiondeclaration", path: './std/datetime/interval_range.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.IntervalRange.popFront', kind: "functiondeclaration", path: './std/datetime/interval_range.pop_front.html', attributes: []},
{name: 'std.datetime.IntervalRange.save', kind: "functiondeclaration", path: './std/datetime/interval_range.save.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.isTimePoint', kind: "enummemberdeclaration", path: './std/datetime/is_time_point.html', attributes: []},
{name: 'std.datetime.LocalTime', kind: "classdeclaration", path: './std/datetime/local_time.html', attributes: []},
{name: 'std.datetime.LocalTime.dstInEffect', kind: "functiondeclaration", path: './std/datetime/local_time.dst_in_effect.html', attributes: ["nothrow", "trusted", "const", "override"]},
{name: 'std.datetime.LocalTime.dstName', kind: "functiondeclaration", path: './std/datetime/local_time.dst_name.html', attributes: ["nothrow", "property", "trusted", "const", "override"]},
{name: 'std.datetime.LocalTime.hasDST', kind: "functiondeclaration", path: './std/datetime/local_time.has_dst.html', attributes: ["nothrow", "property", "trusted", "const", "override"]},
{name: 'std.datetime.LocalTime.name', kind: "functiondeclaration", path: './std/datetime/local_time.name.html', attributes: ["nothrow", "property", "safe", "const", "override"]},
{name: 'std.datetime.LocalTime.opCall', kind: "functiondeclaration", path: './std/datetime/local_time.op_call.html', attributes: ["pure", "nothrow", "trusted", "static"]},
{name: 'std.datetime.LocalTime.stdName', kind: "functiondeclaration", path: './std/datetime/local_time.std_name.html', attributes: ["nothrow", "property", "trusted", "const", "override"]},
{name: 'std.datetime.LocalTime.tzToUTC', kind: "functiondeclaration", path: './std/datetime/local_time.tz_toutc.html', attributes: ["nothrow", "trusted", "const", "override"]},
{name: 'std.datetime.LocalTime.utcToTZ', kind: "functiondeclaration", path: './std/datetime/local_time.utc_totz.html', attributes: ["nothrow", "trusted", "const", "override"]},
{name: 'std.datetime.TimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/time_zone.dst_in_effect.html', attributes: ["nothrow", "safe", "const", "abstract"]},
{name: 'std.datetime.TimeZone.dstName', kind: "functiondeclaration", path: './std/datetime/time_zone.dst_name.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.TimeZone.getInstalledTZNames', kind: "functiondeclaration", path: './std/datetime/time_zone.get_installed_tz_names.html', attributes: ["safe", "static"]},
{name: 'std.datetime.TimeZone.getTimeZone', kind: "functiondeclaration", path: './std/datetime/time_zone.get_time_zone.html', attributes: ["safe", "static"]},
{name: 'std.datetime.TimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/time_zone.has_dst.html', attributes: ["nothrow", "property", "safe", "const", "abstract"]},
{name: 'std.datetime.TimeZone.stdName', kind: "functiondeclaration", path: './std/datetime/time_zone.std_name.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.TimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/time_zone.tz_toutc.html', attributes: ["nothrow", "safe", "const", "abstract"]},
{name: 'std.datetime.TimeZone.utcOffsetAt', kind: "functiondeclaration", path: './std/datetime/time_zone.utc_offset_at.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.TimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/time_zone.utc_totz.html', attributes: ["nothrow", "safe", "const", "abstract"]},
{name: 'std.datetime.measureTime', kind: "functiondeclaration", path: './std/datetime/measure_time.html', attributes: ["auto"]},
{name: 'std.datetime.Month', kind: "enumdeclaration", path: './std/datetime/month.html', attributes: []},
{name: 'std.datetime.Month.apr', kind: "enummemberdeclaration", path: './std/datetime/month.apr.html', attributes: []},
{name: 'std.datetime.Month.aug', kind: "enummemberdeclaration", path: './std/datetime/month.aug.html', attributes: []},
{name: 'std.datetime.Month.dec', kind: "enummemberdeclaration", path: './std/datetime/month.dec.html', attributes: []},
{name: 'std.datetime.Month.feb', kind: "enummemberdeclaration", path: './std/datetime/month.feb.html', attributes: []},
{name: 'std.datetime.Month.jan', kind: "enummemberdeclaration", path: './std/datetime/month.jan.html', attributes: []},
{name: 'std.datetime.Month.jul', kind: "enummemberdeclaration", path: './std/datetime/month.jul.html', attributes: []},
{name: 'std.datetime.Month.jun', kind: "enummemberdeclaration", path: './std/datetime/month.jun.html', attributes: []},
{name: 'std.datetime.Month.mar', kind: "enummemberdeclaration", path: './std/datetime/month.mar.html', attributes: []},
{name: 'std.datetime.Month.may', kind: "enummemberdeclaration", path: './std/datetime/month.may.html', attributes: []},
{name: 'std.datetime.Month.nov', kind: "enummemberdeclaration", path: './std/datetime/month.nov.html', attributes: []},
{name: 'std.datetime.Month.oct', kind: "enummemberdeclaration", path: './std/datetime/month.oct.html', attributes: []},
{name: 'std.datetime.Month.sep', kind: "enummemberdeclaration", path: './std/datetime/month.sep.html', attributes: []},
{name: 'std.datetime.monthsToMonth', kind: "functiondeclaration", path: './std/datetime/months_to_month.html', attributes: ["pure", "safe", "static"]},
{name: 'std.datetime.NegInfInterval', kind: "structdeclaration", path: './std/datetime/neg_inf_interval.html', attributes: []},
{name: 'std.datetime.NegInfInterval.bwdRange', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.bwd_range.html', attributes: ["const"]},
{name: 'std.datetime.NegInfInterval.contains', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.contains.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.empty', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.NegInfInterval.end', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.end.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.NegInfInterval.expand', kind: "templatedeclaration", path: './std/datetime/neg_inf_interval.expand.html', attributes: []},
{name: 'std.datetime.NegInfInterval.expand.expand', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.expand.expand.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.intersection', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.intersection.html', attributes: ["const", "nothrow"]},
{name: 'std.datetime.NegInfInterval.intersects', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.intersects.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.isAdjacent', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.is_adjacent.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.isAfter', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.is_after.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.isBefore', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.is_before.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.merge', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.merge.html', attributes: ["const"]},
{name: 'std.datetime.NegInfInterval.opAssign', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.NegInfInterval.shift', kind: "templatedeclaration", path: './std/datetime/neg_inf_interval.shift.html', attributes: []},
{name: 'std.datetime.NegInfInterval.shift.shift', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.shift.shift.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.NegInfInterval.span', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.span.html', attributes: ["const", "pure"]},
{name: 'std.datetime.NegInfInterval.this', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.this.html', attributes: ["pure"]},
{name: 'std.datetime.NegInfInterval.toString', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval.to_string.html', attributes: ["const", "nothrow"]},
{name: 'std.datetime.NegInfIntervalRange', kind: "structdeclaration", path: './std/datetime/neg_inf_interval_range.html', attributes: []},
{name: 'std.datetime.NegInfIntervalRange.empty', kind: "enummemberdeclaration", path: './std/datetime/neg_inf_interval_range.empty.html', attributes: []},
{name: 'std.datetime.NegInfIntervalRange.front', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval_range.front.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.NegInfIntervalRange.func', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval_range.func.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.NegInfIntervalRange.interval', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval_range.interval.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.NegInfIntervalRange.opAssign', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval_range.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.NegInfIntervalRange.popFront', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval_range.pop_front.html', attributes: []},
{name: 'std.datetime.NegInfIntervalRange.save', kind: "functiondeclaration", path: './std/datetime/neg_inf_interval_range.save.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.parseRFC822DateTime', kind: "functiondeclaration", path: './std/datetime/parse_rf_c822_date_time.html', attributes: ["safe"]},
{name: 'std.datetime.PopFirst', kind: "enumdeclaration", path: './std/datetime/pop_first.html', attributes: []},
{name: 'std.datetime.PopFirst.no', kind: "enummemberdeclaration", path: './std/datetime/pop_first.no.html', attributes: []},
{name: 'std.datetime.PopFirst.yes', kind: "enummemberdeclaration", path: './std/datetime/pop_first.yes.html', attributes: []},
{name: 'std.datetime.PosInfInterval', kind: "structdeclaration", path: './std/datetime/pos_inf_interval.html', attributes: []},
{name: 'std.datetime.PosInfInterval.begin', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.begin.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.PosInfInterval.contains', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.contains.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.empty', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.PosInfInterval.expand', kind: "templatedeclaration", path: './std/datetime/pos_inf_interval.expand.html', attributes: []},
{name: 'std.datetime.PosInfInterval.expand.expand', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.expand.expand.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.fwdRange', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.fwd_range.html', attributes: ["const"]},
{name: 'std.datetime.PosInfInterval.intersection', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.intersection.html', attributes: ["const"]},
{name: 'std.datetime.PosInfInterval.intersects', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.intersects.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.isAdjacent', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.is_adjacent.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.isAfter', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.is_after.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.isBefore', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.is_before.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.merge', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.merge.html', attributes: ["const"]},
{name: 'std.datetime.PosInfInterval.opAssign', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.PosInfInterval.shift', kind: "templatedeclaration", path: './std/datetime/pos_inf_interval.shift.html', attributes: []},
{name: 'std.datetime.PosInfInterval.shift.shift', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.shift.shift.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.PosInfInterval.span', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.span.html', attributes: ["const", "pure"]},
{name: 'std.datetime.PosInfInterval.this', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.this.html', attributes: ["pure"]},
{name: 'std.datetime.PosInfInterval.toString', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval.to_string.html', attributes: ["const", "nothrow"]},
{name: 'std.datetime.PosInfIntervalRange', kind: "structdeclaration", path: './std/datetime/pos_inf_interval_range.html', attributes: []},
{name: 'std.datetime.PosInfIntervalRange.empty', kind: "enummemberdeclaration", path: './std/datetime/pos_inf_interval_range.empty.html', attributes: []},
{name: 'std.datetime.PosInfIntervalRange.front', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval_range.front.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.PosInfIntervalRange.func', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval_range.func.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.PosInfIntervalRange.interval', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval_range.interval.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.PosInfIntervalRange.opAssign', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval_range.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.PosInfIntervalRange.popFront', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval_range.pop_front.html', attributes: []},
{name: 'std.datetime.PosInfIntervalRange.save', kind: "functiondeclaration", path: './std/datetime/pos_inf_interval_range.save.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.PosixTimeZone', kind: "classdeclaration", path: './std/datetime/posix_time_zone.html', attributes: []},
{name: 'std.datetime.PosixTimeZone.defaultTZDatabaseDir', kind: "enummemberdeclaration", path: './std/datetime/posix_time_zone.default_tz_database_dir.html', attributes: []},
{name: 'std.datetime.PosixTimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/posix_time_zone.dst_in_effect.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.PosixTimeZone.getInstalledTZNames', kind: "functiondeclaration", path: './std/datetime/posix_time_zone.get_installed_tz_names.html', attributes: ["trusted", "static"]},
{name: 'std.datetime.PosixTimeZone.getTimeZone', kind: "functiondeclaration", path: './std/datetime/posix_time_zone.get_time_zone.html', attributes: ["trusted", "static"]},
{name: 'std.datetime.PosixTimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/posix_time_zone.has_dst.html', attributes: ["nothrow", "property", "safe", "const", "override"]},
{name: 'std.datetime.PosixTimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/posix_time_zone.tz_toutc.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.PosixTimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/posix_time_zone.utc_totz.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.TimeZone.name', kind: "functiondeclaration", path: './std/datetime/time_zone.name.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.setTZEnvVar', kind: "functiondeclaration", path: './std/datetime/set_tz_env_var.html', attributes: ["nothrow", "safe"]},
{name: 'std.datetime.SimpleTimeZone', kind: "classdeclaration", path: './std/datetime/simple_time_zone.html', attributes: []},
{name: 'std.datetime.SimpleTimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.dst_in_effect.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.SimpleTimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.has_dst.html', attributes: ["nothrow", "property", "safe", "const", "override"]},
{name: 'std.datetime.SimpleTimeZone.this', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.this.html', attributes: ["pure", "safe", "immutable"]},
{name: 'std.datetime.SimpleTimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.tz_toutc.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.SimpleTimeZone.utcOffset', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.utc_offset.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SimpleTimeZone.utcOffsetAt', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.utc_offset_at.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.SimpleTimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/simple_time_zone.utc_totz.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.stdTimeToFILETIME', kind: "functiondeclaration", path: './std/datetime/std_time_tofiletime.html', attributes: ["safe"]},
{name: 'std.datetime.stdTimeToUnixTime', kind: "functiondeclaration", path: './std/datetime/std_time_to_unix_time.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.datetime.StopWatch', kind: "structdeclaration", path: './std/datetime/stop_watch.html', attributes: []},
{name: 'std.datetime.StopWatch.opEquals', kind: "functiondeclaration", path: './std/datetime/stop_watch.op_equals.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.StopWatch.peek', kind: "functiondeclaration", path: './std/datetime/stop_watch.peek.html', attributes: ["safe", "const"]},
{name: 'std.datetime.StopWatch.reset', kind: "functiondeclaration", path: './std/datetime/stop_watch.reset.html', attributes: ["safe"]},
{name: 'std.datetime.StopWatch.running', kind: "functiondeclaration", path: './std/datetime/stop_watch.running.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.StopWatch.setMeasured', kind: "functiondeclaration", path: './std/datetime/stop_watch.set_measured.html', attributes: ["safe"]},
{name: 'std.datetime.StopWatch.start', kind: "functiondeclaration", path: './std/datetime/stop_watch.start.html', attributes: ["safe"]},
{name: 'std.datetime.StopWatch.stop', kind: "functiondeclaration", path: './std/datetime/stop_watch.stop.html', attributes: ["safe"]},
{name: 'std.datetime.StopWatch.this', kind: "functiondeclaration", path: './std/datetime/stop_watch.this.html', attributes: ["ref", "safe"]},
{name: 'std.datetime.SYSTEMTIMEToSysTime', kind: "functiondeclaration", path: './std/datetime/systemtime_to_sys_time.html', attributes: ["safe"]},
{name: 'std.datetime.SysTime', kind: "structdeclaration", path: './std/datetime/sys_time.html', attributes: []},
{name: 'std.datetime.SysTime.add', kind: "functiondeclaration", path: './std/datetime/sys_time.add.html', attributes: ["nothrow", "ref", "safe"]},
{name: 'std.datetime.SysTime.day', kind: "functiondeclaration", path: './std/datetime/sys_time.day.html', attributes: ["property", "safe"]},
{name: 'std.datetime.SysTime.dayOfGregorianCal', kind: "functiondeclaration", path: './std/datetime/sys_time.day_of_gregorian_cal.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.dayOfWeek', kind: "functiondeclaration", path: './std/datetime/sys_time.day_of_week.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.dayOfYear', kind: "functiondeclaration", path: './std/datetime/sys_time.day_of_year.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.daysInMonth', kind: "functiondeclaration", path: './std/datetime/sys_time.days_in_month.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.diffMonths', kind: "functiondeclaration", path: './std/datetime/sys_time.diff_months.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.dstInEffect', kind: "functiondeclaration", path: './std/datetime/sys_time.dst_in_effect.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.endOfMonth', kind: "functiondeclaration", path: './std/datetime/sys_time.end_of_month.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.fracSec', kind: "functiondeclaration", path: './std/datetime/sys_time.frac_sec.html', attributes: ["property", "safe"]},
{name: 'std.datetime.SysTime.fracSecs', kind: "functiondeclaration", path: './std/datetime/sys_time.frac_secs.html', attributes: ["property", "safe"]},
{name: 'std.datetime.SysTime.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/sys_time.from_iso_ext_string.html', attributes: ["safe"]},
{name: 'std.datetime.SysTime.fromISOString', kind: "functiondeclaration", path: './std/datetime/sys_time.from_iso_string.html', attributes: ["safe"]},
{name: 'std.datetime.SysTime.fromSimpleString', kind: "functiondeclaration", path: './std/datetime/sys_time.from_simple_string.html', attributes: ["safe"]},
{name: 'std.datetime.SysTime.hour', kind: "functiondeclaration", path: './std/datetime/sys_time.hour.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.isAD', kind: "functiondeclaration", path: './std/datetime/sys_time.is_ad.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.isLeapYear', kind: "functiondeclaration", path: './std/datetime/sys_time.is_leap_year.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.isoWeek', kind: "functiondeclaration", path: './std/datetime/sys_time.iso_week.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.julianDay', kind: "functiondeclaration", path: './std/datetime/sys_time.julian_day.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.max', kind: "functiondeclaration", path: './std/datetime/sys_time.max.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.SysTime.min', kind: "functiondeclaration", path: './std/datetime/sys_time.min.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.SysTime.minute', kind: "functiondeclaration", path: './std/datetime/sys_time.minute.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.modJulianDay', kind: "functiondeclaration", path: './std/datetime/sys_time.mod_julian_day.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.month', kind: "functiondeclaration", path: './std/datetime/sys_time.month.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.opAssign', kind: "functiondeclaration", path: './std/datetime/sys_time.op_assign.html', attributes: []},
{name: 'std.datetime.SysTime.opBinary', kind: "functiondeclaration", path: './std/datetime/sys_time.op_binary.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.datetime.SysTime.opCast', kind: "functiondeclaration", path: './std/datetime/sys_time.op_cast.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.datetime.SysTime.opCmp', kind: "functiondeclaration", path: './std/datetime/sys_time.op_cmp.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.opEquals', kind: "functiondeclaration", path: './std/datetime/sys_time.op_equals.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.opOpAssign', kind: "functiondeclaration", path: './std/datetime/sys_time.op_op_assign.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.SysTime.roll', kind: "functiondeclaration", path: './std/datetime/sys_time.roll.html', attributes: ["nothrow", "ref", "safe"]},
{name: 'std.datetime.SysTime.second', kind: "functiondeclaration", path: './std/datetime/sys_time.second.html', attributes: ["property", "safe"]},
{name: 'std.datetime.SysTime.stdTime', kind: "functiondeclaration", path: './std/datetime/sys_time.std_time.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.this', kind: "functiondeclaration", path: './std/datetime/sys_time.this.html', attributes: ["nothrow", "ref", "safe"]},
{name: 'std.datetime.SysTime.timezone', kind: "functiondeclaration", path: './std/datetime/sys_time.timezone.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.datetime.SysTime.toISOExtString', kind: "functiondeclaration", path: './std/datetime/sys_time.to_iso_ext_string.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toISOString', kind: "functiondeclaration", path: './std/datetime/sys_time.to_iso_string.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toLocalTime', kind: "functiondeclaration", path: './std/datetime/sys_time.to_local_time.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toOtherTZ', kind: "functiondeclaration", path: './std/datetime/sys_time.to_other_tz.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toSimpleString', kind: "functiondeclaration", path: './std/datetime/sys_time.to_simple_string.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toString', kind: "functiondeclaration", path: './std/datetime/sys_time.to_string.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toTimeVal', kind: "functiondeclaration", path: './std/datetime/sys_time.to_time_val.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toTM', kind: "functiondeclaration", path: './std/datetime/sys_time.to_tm.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toUnixTime', kind: "functiondeclaration", path: './std/datetime/sys_time.to_unix_time.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.toUTC', kind: "functiondeclaration", path: './std/datetime/sys_time.to_utc.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.SysTime.utcOffset', kind: "functiondeclaration", path: './std/datetime/sys_time.utc_offset.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.SysTime.year', kind: "functiondeclaration", path: './std/datetime/sys_time.year.html', attributes: ["property", "safe"]},
{name: 'std.datetime.SysTime.yearBC', kind: "functiondeclaration", path: './std/datetime/sys_time.year_bc.html', attributes: ["property", "safe"]},
{name: 'std.datetime.SysTimeToDosFileTime', kind: "functiondeclaration", path: './std/datetime/sys_time_to_dos_file_time.html', attributes: ["safe"]},
{name: 'std.datetime.SysTimeToFILETIME', kind: "functiondeclaration", path: './std/datetime/sys_time_tofiletime.html', attributes: ["safe"]},
{name: 'std.datetime.SysTimeToSYSTEMTIME', kind: "functiondeclaration", path: './std/datetime/sys_time_tosystemtime.html', attributes: ["safe"]},
{name: 'std.datetime.TimeOfDay', kind: "structdeclaration", path: './std/datetime/time_of_day.html', attributes: []},
{name: 'std.datetime.TimeOfDay.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/time_of_day.from_iso_ext_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.TimeOfDay.fromISOString', kind: "functiondeclaration", path: './std/datetime/time_of_day.from_iso_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.TimeOfDay.hour', kind: "functiondeclaration", path: './std/datetime/time_of_day.hour.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.TimeOfDay.max', kind: "functiondeclaration", path: './std/datetime/time_of_day.max.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.TimeOfDay.min', kind: "functiondeclaration", path: './std/datetime/time_of_day.min.html', attributes: ["pure", "nothrow", "property", "safe", "static"]},
{name: 'std.datetime.TimeOfDay.minute', kind: "functiondeclaration", path: './std/datetime/time_of_day.minute.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.TimeOfDay.opBinary', kind: "functiondeclaration", path: './std/datetime/time_of_day.op_binary.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.datetime.TimeOfDay.opCmp', kind: "functiondeclaration", path: './std/datetime/time_of_day.op_cmp.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.TimeOfDay.opOpAssign', kind: "functiondeclaration", path: './std/datetime/time_of_day.op_op_assign.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.TimeOfDay.roll', kind: "functiondeclaration", path: './std/datetime/time_of_day.roll.html', attributes: ["pure", "nothrow", "ref", "safe"]},
{name: 'std.datetime.TimeOfDay.second', kind: "functiondeclaration", path: './std/datetime/time_of_day.second.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.TimeOfDay.this', kind: "functiondeclaration", path: './std/datetime/time_of_day.this.html', attributes: ["pure", "ref", "safe"]},
{name: 'std.datetime.TimeOfDay.toISOExtString', kind: "functiondeclaration", path: './std/datetime/time_of_day.to_iso_ext_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.TimeOfDay.toISOString', kind: "functiondeclaration", path: './std/datetime/time_of_day.to_iso_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.TimeOfDay.toString', kind: "functiondeclaration", path: './std/datetime/time_of_day.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.timeStrings', kind: "variabledeclaration", path: './std/datetime/time_strings.html', attributes: []},
{name: 'std.datetime.TimeZone', kind: "classdeclaration", path: './std/datetime/time_zone.html', attributes: []},
{name: 'std.datetime.tzDatabaseNameToWindowsTZName', kind: "functiondeclaration", path: './std/datetime/tz_database_name_to_windows_tz_name.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.unixTimeToStdTime', kind: "functiondeclaration", path: './std/datetime/unix_time_to_std_time.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.datetime.UTC', kind: "classdeclaration", path: './std/datetime/utc.html', attributes: []},
{name: 'std.datetime.UTC.dstInEffect', kind: "functiondeclaration", path: './std/datetime/utc.dst_in_effect.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.UTC.hasDST', kind: "functiondeclaration", path: './std/datetime/utc.has_dst.html', attributes: ["nothrow", "property", "safe", "const", "override"]},
{name: 'std.datetime.UTC.opCall', kind: "functiondeclaration", path: './std/datetime/utc.op_call.html', attributes: ["pure", "nothrow", "safe", "static"]},
{name: 'std.datetime.UTC.tzToUTC', kind: "functiondeclaration", path: './std/datetime/utc.tz_toutc.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.UTC.utcOffsetAt', kind: "functiondeclaration", path: './std/datetime/utc.utc_offset_at.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.UTC.utcToTZ', kind: "functiondeclaration", path: './std/datetime/utc.utc_totz.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.valid', kind: "functiondeclaration", path: './std/datetime/valid.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.datetime.validTimeUnits', kind: "functiondeclaration", path: './std/datetime/valid_time_units.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.datetime.WindowsTimeZone', kind: "classdeclaration", path: './std/datetime/windows_time_zone.html', attributes: []},
{name: 'std.datetime.WindowsTimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/windows_time_zone.dst_in_effect.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.WindowsTimeZone.getInstalledTZNames', kind: "functiondeclaration", path: './std/datetime/windows_time_zone.get_installed_tz_names.html', attributes: ["safe", "static"]},
{name: 'std.datetime.WindowsTimeZone.getTimeZone', kind: "functiondeclaration", path: './std/datetime/windows_time_zone.get_time_zone.html', attributes: ["safe", "static"]},
{name: 'std.datetime.WindowsTimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/windows_time_zone.has_dst.html', attributes: ["nothrow", "property", "safe", "const", "override"]},
{name: 'std.datetime.WindowsTimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/windows_time_zone.tz_toutc.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.WindowsTimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/windows_time_zone.utc_totz.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.datetime.windowsTZNameToTZDatabaseName', kind: "functiondeclaration", path: './std/datetime/windows_tz_name_totz_database_name.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.yearIsLeapYear', kind: "functiondeclaration", path: './std/datetime/year_is_leap_year.html', attributes: ["pure", "nothrow", "safe", "static"]},
{name: 'std.demangle', kind: "module", path: './std/demangle.html', attributes: []},
{name: 'std.demangle.demangle', kind: "functiondeclaration", path: './std/demangle/demangle.html', attributes: []},
{name: 'std.encoding', kind: "module", path: './std/encoding.html', attributes: []},
{name: 'std.encoding.AsciiChar', kind: "enumdeclaration", path: './std/encoding/ascii_char.html', attributes: []},
{name: 'std.encoding.AsciiString', kind: "aliasdeclaration", path: './std/encoding/ascii_string.html', attributes: []},
{name: 'std.encoding.canEncode', kind: "functiondeclaration", path: './std/encoding/can_encode.html', attributes: []},
{name: 'std.encoding.codePoints', kind: "functiondeclaration", path: './std/encoding/code_points.html', attributes: []},
{name: 'std.encoding.codeUnits', kind: "functiondeclaration", path: './std/encoding/code_units.html', attributes: []},
{name: 'std.encoding.decode', kind: "functiondeclaration", path: './std/encoding/decode.html', attributes: []},
{name: 'std.encoding.decodeReverse', kind: "functiondeclaration", path: './std/encoding/decode_reverse.html', attributes: []},
{name: 'std.encoding.encode', kind: "functiondeclaration", path: './std/encoding/encode.html', attributes: []},
{name: 'std.encoding.encodedLength', kind: "functiondeclaration", path: './std/encoding/encoded_length.html', attributes: []},
{name: 'std.encoding.EncodingException', kind: "classdeclaration", path: './std/encoding/encoding_exception.html', attributes: []},
{name: 'std.encoding.encodingName', kind: "functiondeclaration", path: './std/encoding/encoding_name.html', attributes: ["property"]},
{name: 'std.encoding.EncodingScheme', kind: "classdeclaration", path: './std/encoding/encoding_scheme.html', attributes: []},
{name: 'std.encoding.EncodingScheme.canEncode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.can_encode.html', attributes: ["const", "abstract"]},
{name: 'std.encoding.EncodingScheme.count', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.count.html', attributes: []},
{name: 'std.encoding.EncodingScheme.create', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.create.html', attributes: ["static"]},
{name: 'std.encoding.EncodingScheme.decode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.decode.html', attributes: ["const", "abstract"]},
{name: 'std.encoding.EncodingScheme.encode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.encode.html', attributes: ["const", "abstract"]},
{name: 'std.encoding.EncodingScheme.encodedLength', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.encoded_length.html', attributes: ["const", "abstract"]},
{name: 'std.encoding.EncodingScheme.firstSequence', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.first_sequence.html', attributes: []},
{name: 'std.encoding.EncodingScheme.index', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.index.html', attributes: []},
{name: 'std.encoding.EncodingScheme.isValid', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.is_valid.html', attributes: []},
{name: 'std.encoding.EncodingScheme.names', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.names.html', attributes: ["const", "abstract"]},
{name: 'std.encoding.EncodingScheme.register', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.register.html', attributes: ["static"]},
{name: 'std.encoding.EncodingScheme.replacementSequence', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.replacement_sequence.html', attributes: ["property", "const", "abstract"]},
{name: 'std.encoding.EncodingScheme.safeDecode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.safe_decode.html', attributes: ["const", "abstract"]},
{name: 'std.encoding.EncodingScheme.sanitize', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.sanitize.html', attributes: []},
{name: 'std.encoding.EncodingScheme.toString', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.to_string.html', attributes: ["const", "abstract", "override"]},
{name: 'std.encoding.EncodingScheme.validLength', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.valid_length.html', attributes: []},
{name: 'std.encoding.EncodingSchemeASCII', kind: "classdeclaration", path: './std/encoding/encoding_scheme_ascii.html', attributes: []},
{name: 'std.encoding.EncodingSchemeLatin1', kind: "classdeclaration", path: './std/encoding/encoding_scheme_latin1.html', attributes: []},
{name: 'std.encoding.EncodingSchemeUtf16Native', kind: "classdeclaration", path: './std/encoding/encoding_scheme_utf16_native.html', attributes: []},
{name: 'std.encoding.EncodingSchemeUtf32Native', kind: "classdeclaration", path: './std/encoding/encoding_scheme_utf32_native.html', attributes: []},
{name: 'std.encoding.EncodingSchemeUtf8', kind: "classdeclaration", path: './std/encoding/encoding_scheme_utf8.html', attributes: []},
{name: 'std.encoding.EncodingSchemeWindows1252', kind: "classdeclaration", path: './std/encoding/encoding_scheme_windows1252.html', attributes: []},
{name: 'std.encoding.firstSequence', kind: "functiondeclaration", path: './std/encoding/first_sequence.html', attributes: []},
{name: 'std.encoding.index', kind: "functiondeclaration", path: './std/encoding/index.html', attributes: []},
{name: 'std.encoding.INVALID_SEQUENCE', kind: "enummemberdeclaration", path: './std/encoding/invali_d_sequence.html', attributes: []},
{name: 'std.encoding.isValid', kind: "functiondeclaration", path: './std/encoding/is_valid.html', attributes: []},
{name: 'std.encoding.isValidCodePoint', kind: "functiondeclaration", path: './std/encoding/is_valid_code_point.html', attributes: []},
{name: 'std.encoding.isValidCodeUnit', kind: "functiondeclaration", path: './std/encoding/is_valid_code_unit.html', attributes: []},
{name: 'std.encoding.lastSequence', kind: "functiondeclaration", path: './std/encoding/last_sequence.html', attributes: []},
{name: 'std.encoding.Latin1Char', kind: "enumdeclaration", path: './std/encoding/latin1_char.html', attributes: []},
{name: 'std.encoding.Latin1String', kind: "aliasdeclaration", path: './std/encoding/latin1_string.html', attributes: []},
{name: 'std.encoding.safeDecode', kind: "functiondeclaration", path: './std/encoding/safe_decode.html', attributes: []},
{name: 'std.encoding.sanitize', kind: "functiondeclaration", path: './std/encoding/sanitize.html', attributes: []},
{name: 'std.encoding.transcode', kind: "functiondeclaration", path: './std/encoding/transcode.html', attributes: []},
{name: 'std.encoding.validLength', kind: "functiondeclaration", path: './std/encoding/valid_length.html', attributes: []},
{name: 'std.encoding.Windows1252Char', kind: "enumdeclaration", path: './std/encoding/windows1252_char.html', attributes: []},
{name: 'std.encoding.Windows1252String', kind: "aliasdeclaration", path: './std/encoding/windows1252_string.html', attributes: []},
{name: 'std.exception', kind: "module", path: './std/exception.html', attributes: []},
{name: 'std.exception.assertNotThrown', kind: "functiondeclaration", path: './std/exception/assert_not_thrown.html', attributes: []},
{name: 'std.exception.assertThrown', kind: "functiondeclaration", path: './std/exception/assert_thrown.html', attributes: []},
{name: 'std.exception.assumeUnique', kind: "functiondeclaration", path: './std/exception/assume_unique.html', attributes: ["pure", "nothrow"]},
{name: 'std.exception.assumeWontThrow', kind: "functiondeclaration", path: './std/exception/assume_wont_throw.html', attributes: ["nothrow"]},
{name: 'std.exception.collectException', kind: "functiondeclaration", path: './std/exception/collect_exception.html', attributes: []},
{name: 'std.exception.collectExceptionMsg', kind: "functiondeclaration", path: './std/exception/collect_exception_msg.html', attributes: []},
{name: 'std.exception.doesPointTo', kind: "functiondeclaration", path: './std/exception/does_point_to.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.exception.emptyExceptionMsg', kind: "enummemberdeclaration", path: './std/exception/empty_exception_msg.html', attributes: []},
{name: 'std.exception.enforce', kind: "functiondeclaration", path: './std/exception/enforce.html', attributes: []},
{name: 'std.exception.enforceEx', kind: "templatedeclaration", path: './std/exception/enforce_ex.html', attributes: []},
{name: 'std.exception.enforceEx.enforceEx', kind: "functiondeclaration", path: './std/exception/enforce_ex.enforce_ex.html', attributes: []},
{name: 'std.exception.errnoEnforce', kind: "functiondeclaration", path: './std/exception/errno_enforce.html', attributes: []},
{name: 'std.exception.ErrnoException', kind: "classdeclaration", path: './std/exception/errno_exception.html', attributes: []},
{name: 'std.exception.ErrnoException.errno', kind: "functiondeclaration", path: './std/exception/errno_exception.errno.html', attributes: ["property", "final"]},
{name: 'std.exception.handle', kind: "functiondeclaration", path: './std/exception/handle.html', attributes: ["auto"]},
{name: 'std.exception.ifThrown', kind: "functiondeclaration", path: './std/exception/if_thrown.html', attributes: []},
{name: 'std.exception.RangePrimitive', kind: "enumdeclaration", path: './std/exception/range_primitive.html', attributes: []},
{name: 'std.exception.RangePrimitive.access', kind: "enummemberdeclaration", path: './std/exception/range_primitive.access.html', attributes: []},
{name: 'std.exception.RangePrimitive.back', kind: "enummemberdeclaration", path: './std/exception/range_primitive.back.html', attributes: []},
{name: 'std.exception.RangePrimitive.empty', kind: "enummemberdeclaration", path: './std/exception/range_primitive.empty.html', attributes: []},
{name: 'std.exception.RangePrimitive.front', kind: "enummemberdeclaration", path: './std/exception/range_primitive.front.html', attributes: []},
{name: 'std.exception.RangePrimitive.length', kind: "enummemberdeclaration", path: './std/exception/range_primitive.length.html', attributes: []},
{name: 'std.exception.RangePrimitive.opDollar', kind: "enummemberdeclaration", path: './std/exception/range_primitive.op_dollar.html', attributes: []},
{name: 'std.exception.RangePrimitive.opIndex', kind: "enummemberdeclaration", path: './std/exception/range_primitive.op_index.html', attributes: []},
{name: 'std.exception.RangePrimitive.opSlice', kind: "enummemberdeclaration", path: './std/exception/range_primitive.op_slice.html', attributes: []},
{name: 'std.exception.RangePrimitive.pop', kind: "enummemberdeclaration", path: './std/exception/range_primitive.pop.html', attributes: []},
{name: 'std.exception.RangePrimitive.popBack', kind: "enummemberdeclaration", path: './std/exception/range_primitive.pop_back.html', attributes: []},
{name: 'std.exception.RangePrimitive.popFront', kind: "enummemberdeclaration", path: './std/exception/range_primitive.pop_front.html', attributes: []},
{name: 'std.exception.RangePrimitive.save', kind: "enummemberdeclaration", path: './std/exception/range_primitive.save.html', attributes: []},
{name: 'std.file', kind: "module", path: './std/file.html', attributes: []},
{name: 'std.file.append', kind: "functiondeclaration", path: './std/file/append.html', attributes: ["trusted"]},
{name: 'std.file.attrIsDir', kind: "functiondeclaration", path: './std/file/attr_is_dir.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.file.attrIsFile', kind: "functiondeclaration", path: './std/file/attr_is_file.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.file.attrIsSymlink', kind: "functiondeclaration", path: './std/file/attr_is_symlink.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.file.chdir', kind: "functiondeclaration", path: './std/file/chdir.html', attributes: ["safe"]},
{name: 'std.file.copy', kind: "functiondeclaration", path: './std/file/copy.html', attributes: []},
{name: 'std.file.dirEntries', kind: "functiondeclaration", path: './std/file/dir_entries.html', attributes: ["auto"]},
{name: 'std.file.DirEntry', kind: "structdeclaration", path: './std/file/dir_entry.html', attributes: []},
{name: 'std.file.DirEntry.attributes', kind: "functiondeclaration", path: './std/file/dir_entry.attributes.html', attributes: ["property"]},
{name: 'std.file.DirEntry.isDir', kind: "functiondeclaration", path: './std/file/dir_entry.is_dir.html', attributes: ["property"]},
{name: 'std.file.DirEntry.isFile', kind: "functiondeclaration", path: './std/file/dir_entry.is_file.html', attributes: ["property"]},
{name: 'std.file.DirEntry.isSymlink', kind: "functiondeclaration", path: './std/file/dir_entry.is_symlink.html', attributes: ["property"]},
{name: 'std.file.DirEntry.linkAttributes', kind: "functiondeclaration", path: './std/file/dir_entry.link_attributes.html', attributes: ["property"]},
{name: 'std.file.DirEntry.name', kind: "functiondeclaration", path: './std/file/dir_entry.name.html', attributes: ["property", "const"]},
{name: 'std.file.DirEntry.size', kind: "functiondeclaration", path: './std/file/dir_entry.size.html', attributes: ["property"]},
{name: 'std.file.DirEntry.statBuf', kind: "functiondeclaration", path: './std/file/dir_entry.stat_buf.html', attributes: ["property"]},
{name: 'std.file.DirEntry.this', kind: "functiondeclaration", path: './std/file/dir_entry.this.html', attributes: ["ref"]},
{name: 'std.file.DirEntry.timeCreated', kind: "functiondeclaration", path: './std/file/dir_entry.time_created.html', attributes: ["property", "const"]},
{name: 'std.file.DirEntry.timeLastAccessed', kind: "functiondeclaration", path: './std/file/dir_entry.time_last_accessed.html', attributes: ["property"]},
{name: 'std.file.DirEntry.timeLastModified', kind: "functiondeclaration", path: './std/file/dir_entry.time_last_modified.html', attributes: ["property"]},
{name: 'std.file.exists', kind: "functiondeclaration", path: './std/file/exists.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.file.FileException', kind: "classdeclaration", path: './std/file/file_exception.html', attributes: []},
{name: 'std.file.FileException.errno', kind: "variabledeclaration", path: './std/file/file_exception.errno.html', attributes: []},
{name: 'std.file.FileException.this', kind: "functiondeclaration", path: './std/file/file_exception.this.html', attributes: ["pure", "safe"]},
{name: 'std.file.getAttributes', kind: "functiondeclaration", path: './std/file/get_attributes.html', attributes: ["safe"]},
{name: 'std.file.getcwd', kind: "functiondeclaration", path: './std/file/getcwd.html', attributes: []},
{name: 'std.file.getLinkAttributes', kind: "functiondeclaration", path: './std/file/get_link_attributes.html', attributes: ["safe"]},
{name: 'std.file.getSize', kind: "functiondeclaration", path: './std/file/get_size.html', attributes: ["safe"]},
{name: 'std.file.getTimes', kind: "functiondeclaration", path: './std/file/get_times.html', attributes: ["safe"]},
{name: 'std.file.getTimesWin', kind: "functiondeclaration", path: './std/file/get_times_win.html', attributes: ["safe"]},
{name: 'std.file.isDir', kind: "functiondeclaration", path: './std/file/is_dir.html', attributes: ["property", "safe"]},
{name: 'std.file.isFile', kind: "functiondeclaration", path: './std/file/is_file.html', attributes: ["property", "safe"]},
{name: 'std.file.isSymlink', kind: "functiondeclaration", path: './std/file/is_symlink.html', attributes: ["property", "safe"]},
{name: 'std.file.mkdir', kind: "functiondeclaration", path: './std/file/mkdir.html', attributes: ["safe"]},
{name: 'std.file.mkdirRecurse', kind: "functiondeclaration", path: './std/file/mkdir_recurse.html', attributes: []},
{name: 'std.file.preserveAttributesDefault', kind: "variabledeclaration", path: './std/file/preserve_attributes_default.html', attributes: []},
{name: 'std.file.read', kind: "functiondeclaration", path: './std/file/read.html', attributes: ["trusted"]},
{name: 'std.file.readLink', kind: "functiondeclaration", path: './std/file/read_link.html', attributes: ["safe"]},
{name: 'std.file.readText', kind: "functiondeclaration", path: './std/file/read_text.html', attributes: ["safe"]},
{name: 'std.file.remove', kind: "functiondeclaration", path: './std/file/remove.html', attributes: ["trusted"]},
{name: 'std.file.rename', kind: "functiondeclaration", path: './std/file/rename.html', attributes: ["trusted"]},
{name: 'std.file.rmdir', kind: "functiondeclaration", path: './std/file/rmdir.html', attributes: []},
{name: 'std.file.rmdirRecurse', kind: "functiondeclaration", path: './std/file/rmdir_recurse.html', attributes: []},
{name: 'std.file.setAttributes', kind: "functiondeclaration", path: './std/file/set_attributes.html', attributes: ["safe"]},
{name: 'std.file.setTimes', kind: "functiondeclaration", path: './std/file/set_times.html', attributes: ["safe"]},
{name: 'std.file.slurp', kind: "functiondeclaration", path: './std/file/slurp.html', attributes: []},
{name: 'std.file.SpanMode', kind: "enumdeclaration", path: './std/file/span_mode.html', attributes: []},
{name: 'std.file.SpanMode.breadth', kind: "enummemberdeclaration", path: './std/file/span_mode.breadth.html', attributes: []},
{name: 'std.file.SpanMode.depth', kind: "enummemberdeclaration", path: './std/file/span_mode.depth.html', attributes: []},
{name: 'std.file.SpanMode.shallow', kind: "enummemberdeclaration", path: './std/file/span_mode.shallow.html', attributes: []},
{name: 'std.file.symlink', kind: "functiondeclaration", path: './std/file/symlink.html', attributes: ["safe"]},
{name: 'std.file.tempDir', kind: "functiondeclaration", path: './std/file/temp_dir.html', attributes: ["trusted"]},
{name: 'std.file.thisExePath', kind: "functiondeclaration", path: './std/file/this_exe_path.html', attributes: ["trusted"]},
{name: 'std.file.timeLastModified', kind: "functiondeclaration", path: './std/file/time_last_modified.html', attributes: ["safe"]},
{name: 'std.file.write', kind: "functiondeclaration", path: './std/file/write.html', attributes: ["trusted"]},
{name: 'std.functional', kind: "module", path: './std/functional.html', attributes: []},
{name: 'std.functional.adjoin', kind: "aliasdeclaration", path: './std/functional/adjoin.html', attributes: []},
{name: 'std.functional.adjoin.adjoin', kind: "functiondeclaration", path: './std/functional/adjoin.adjoin.html', attributes: ["auto"]},
{name: 'std.functional.binaryFun', kind: "templatedeclaration", path: './std/functional/binary_fun.html', attributes: []},
{name: 'std.functional.binaryReverseArgs', kind: "templatedeclaration", path: './std/functional/binary_reverse_args.html', attributes: []},
{name: 'std.functional.binaryReverseArgs.binaryReverseArgs', kind: "functiondeclaration", path: './std/functional/binary_reverse_args.binary_reverse_args.html', attributes: ["auto"]},
{name: 'std.functional.compose', kind: "templatedeclaration", path: './std/functional/compose.html', attributes: []},
{name: 'std.functional.curry', kind: "aliasdeclaration", path: './std/functional/curry.html', attributes: ["deprecated"]},
{name: 'std.functional.equalTo', kind: "aliasdeclaration", path: './std/functional/equal_to.html', attributes: []},
{name: 'std.functional.forward', kind: "templatedeclaration", path: './std/functional/forward.html', attributes: []},
{name: 'std.functional.greaterThan', kind: "aliasdeclaration", path: './std/functional/greater_than.html', attributes: []},
{name: 'std.functional.lessThan', kind: "aliasdeclaration", path: './std/functional/less_than.html', attributes: []},
{name: 'std.functional.memoize', kind: "functiondeclaration", path: './std/functional/memoize.html', attributes: []},
{name: 'std.functional.not', kind: "templatedeclaration", path: './std/functional/not.html', attributes: []},
{name: 'std.functional.not.not', kind: "functiondeclaration", path: './std/functional/not.not.html', attributes: ["auto"]},
{name: 'std.functional.partial', kind: "templatedeclaration", path: './std/functional/partial.html', attributes: []},
{name: 'std.functional.pipe', kind: "aliasdeclaration", path: './std/functional/pipe.html', attributes: []},
{name: 'std.functional.reverseArgs', kind: "templatedeclaration", path: './std/functional/reverse_args.html', attributes: []},
{name: 'std.functional.reverseArgs.reverseArgs', kind: "functiondeclaration", path: './std/functional/reverse_args.reverse_args.html', attributes: ["auto"]},
{name: 'std.functional.toDelegate', kind: "functiondeclaration", path: './std/functional/to_delegate.html', attributes: ["auto"]},
{name: 'std.functional.unaryFun', kind: "templatedeclaration", path: './std/functional/unary_fun.html', attributes: []},
{name: 'std.getopt', kind: "module", path: './std/getopt.html', attributes: []},
{name: 'std.getopt.arraySep', kind: "variabledeclaration", path: './std/getopt/array_sep.html', attributes: []},
{name: 'std.getopt.assignChar', kind: "variabledeclaration", path: './std/getopt/assign_char.html', attributes: []},
{name: 'std.getopt.config', kind: "enumdeclaration", path: './std/getopt/config.html', attributes: []},
{name: 'std.getopt.config.bundling', kind: "enummemberdeclaration", path: './std/getopt/config.bundling.html', attributes: []},
{name: 'std.getopt.config.caseInsensitive', kind: "enummemberdeclaration", path: './std/getopt/config.case_insensitive.html', attributes: []},
{name: 'std.getopt.config.caseSensitive', kind: "enummemberdeclaration", path: './std/getopt/config.case_sensitive.html', attributes: []},
{name: 'std.getopt.config.keepEndOfOptions', kind: "enummemberdeclaration", path: './std/getopt/config.keep_end_of_options.html', attributes: []},
{name: 'std.getopt.config.noBundling', kind: "enummemberdeclaration", path: './std/getopt/config.no_bundling.html', attributes: []},
{name: 'std.getopt.config.noPassThrough', kind: "enummemberdeclaration", path: './std/getopt/config.no_pass_through.html', attributes: []},
{name: 'std.getopt.config.passThrough', kind: "enummemberdeclaration", path: './std/getopt/config.pass_through.html', attributes: []},
{name: 'std.getopt.config.required', kind: "enummemberdeclaration", path: './std/getopt/config.required.html', attributes: []},
{name: 'std.getopt.config.stopOnFirstNonOption', kind: "enummemberdeclaration", path: './std/getopt/config.stop_on_first_non_option.html', attributes: []},
{name: 'std.getopt.defaultGetoptFormatter', kind: "functiondeclaration", path: './std/getopt/default_getopt_formatter.html', attributes: []},
{name: 'std.getopt.defaultGetoptPrinter', kind: "functiondeclaration", path: './std/getopt/default_getopt_printer.html', attributes: []},
{name: 'std.getopt.endOfOptions', kind: "variabledeclaration", path: './std/getopt/end_of_options.html', attributes: []},
{name: 'std.getopt.getopt', kind: "functiondeclaration", path: './std/getopt/getopt.html', attributes: []},
{name: 'std.getopt.GetOptException', kind: "classdeclaration", path: './std/getopt/get_opt_exception.html', attributes: []},
{name: 'std.getopt.GetoptResult', kind: "structdeclaration", path: './std/getopt/getopt_result.html', attributes: []},
{name: 'std.getopt.GetoptResult.helpWanted', kind: "variabledeclaration", path: './std/getopt/getopt_result.help_wanted.html', attributes: []},
{name: 'std.getopt.GetoptResult.options', kind: "variabledeclaration", path: './std/getopt/getopt_result.options.html', attributes: []},
{name: 'std.getopt.Option', kind: "structdeclaration", path: './std/getopt/option.html', attributes: []},
{name: 'std.getopt.Option.help', kind: "variabledeclaration", path: './std/getopt/option.help.html', attributes: []},
{name: 'std.getopt.Option.optLong', kind: "variabledeclaration", path: './std/getopt/option.opt_long.html', attributes: []},
{name: 'std.getopt.Option.optShort', kind: "variabledeclaration", path: './std/getopt/option.opt_short.html', attributes: []},
{name: 'std.getopt.Option.required', kind: "variabledeclaration", path: './std/getopt/option.required.html', attributes: []},
{name: 'std.getopt.optionChar', kind: "variabledeclaration", path: './std/getopt/option_char.html', attributes: []},
{name: 'std.json', kind: "module", path: './std/json.html', attributes: []},
{name: 'std.json.JSONException', kind: "classdeclaration", path: './std/json/json_exception.html', attributes: []},
{name: 'std.json.JSONFloatLiteral', kind: "enumdeclaration", path: './std/json/json_float_literal.html', attributes: []},
{name: 'std.json.JSONFloatLiteral.inf', kind: "enummemberdeclaration", path: './std/json/json_float_literal.inf.html', attributes: []},
{name: 'std.json.JSONFloatLiteral.nan', kind: "enummemberdeclaration", path: './std/json/json_float_literal.nan.html', attributes: []},
{name: 'std.json.JSONFloatLiteral.negativeInf', kind: "enummemberdeclaration", path: './std/json/json_float_literal.negative_inf.html', attributes: []},
{name: 'std.json.JsonOptions', kind: "enumdeclaration", path: './std/json/json_options.html', attributes: []},
{name: 'std.json.JsonOptions.none', kind: "enummemberdeclaration", path: './std/json/json_options.none.html', attributes: []},
{name: 'std.json.JsonOptions.specialFloatLiterals', kind: "enummemberdeclaration", path: './std/json/json_options.special_float_literals.html', attributes: []},
{name: 'std.json.JSONValue', kind: "structdeclaration", path: './std/json/json_value.html', attributes: []},
{name: 'std.json.JSONValue.array', kind: "functiondeclaration", path: './std/json/json_value.array.html', attributes: ["ref", "property", "inout"]},
{name: 'std.json.JSONValue.floating', kind: "functiondeclaration", path: './std/json/json_value.floating.html', attributes: ["property", "inout"]},
{name: 'std.json.JSONValue.integer', kind: "functiondeclaration", path: './std/json/json_value.integer.html', attributes: ["property", "inout"]},
{name: 'std.json.JSONValue.isNull', kind: "functiondeclaration", path: './std/json/json_value.is_null.html', attributes: ["property", "const"]},
{name: 'std.json.JSONValue.object', kind: "functiondeclaration", path: './std/json/json_value.object.html', attributes: ["ref", "property", "inout"]},
{name: 'std.json.JSONValue.opApply', kind: "functiondeclaration", path: './std/json/json_value.op_apply.html', attributes: []},
{name: 'std.json.JSONValue.opIndex', kind: "functiondeclaration", path: './std/json/json_value.op_index.html', attributes: ["ref", "inout"]},
{name: 'std.json.JSONValue.opIndexAssign', kind: "functiondeclaration", path: './std/json/json_value.op_index_assign.html', attributes: []},
{name: 'std.json.JSONValue.str', kind: "functiondeclaration", path: './std/json/json_value.str.html', attributes: ["property", "inout"]},
{name: 'std.json.JSONValue.this', kind: "functiondeclaration", path: './std/json/json_value.this.html', attributes: []},
{name: 'std.json.JSONValue.toPrettyString', kind: "functiondeclaration", path: './std/json/json_value.to_pretty_string.html', attributes: ["const"]},
{name: 'std.json.JSONValue.toString', kind: "functiondeclaration", path: './std/json/json_value.to_string.html', attributes: ["const"]},
{name: 'std.json.JSONValue.type', kind: "functiondeclaration", path: './std/json/json_value.type.html', attributes: ["property", "const"]},
{name: 'std.json.JSONValue.uinteger', kind: "functiondeclaration", path: './std/json/json_value.uinteger.html', attributes: ["property", "inout"]},
{name: 'std.json.JSON_TYPE', kind: "enumdeclaration", path: './std/json/jso_n_type.html', attributes: []},
{name: 'std.json.JSON_TYPE.ARRAY', kind: "enummemberdeclaration", path: './std/json/jso_n_type.array.html', attributes: []},
{name: 'std.json.JSON_TYPE.FALSE', kind: "enummemberdeclaration", path: './std/json/jso_n_type.false.html', attributes: []},
{name: 'std.json.JSON_TYPE.FLOAT', kind: "enummemberdeclaration", path: './std/json/jso_n_type.float.html', attributes: []},
{name: 'std.json.JSON_TYPE.INTEGER', kind: "enummemberdeclaration", path: './std/json/jso_n_type.integer.html', attributes: []},
{name: 'std.json.JSON_TYPE.NULL', kind: "enummemberdeclaration", path: './std/json/jso_n_type.null.html', attributes: []},
{name: 'std.json.JSON_TYPE.OBJECT', kind: "enummemberdeclaration", path: './std/json/jso_n_type.object.html', attributes: []},
{name: 'std.json.JSON_TYPE.STRING', kind: "enummemberdeclaration", path: './std/json/jso_n_type.string.html', attributes: []},
{name: 'std.json.JSON_TYPE.TRUE', kind: "enummemberdeclaration", path: './std/json/jso_n_type.true.html', attributes: []},
{name: 'std.json.JSON_TYPE.UINTEGER', kind: "enummemberdeclaration", path: './std/json/jso_n_type.uinteger.html', attributes: []},
{name: 'std.json.parseJSON', kind: "functiondeclaration", path: './std/json/parse_json.html', attributes: []},
{name: 'std.json.toJSON', kind: "functiondeclaration", path: './std/json/to_json.html', attributes: []},
{name: 'std.math', kind: "module", path: './std/math.html', attributes: []},
{name: 'std.math.abs', kind: "functiondeclaration", path: './std/math/abs.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.math.acos', kind: "functiondeclaration", path: './std/math/acos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.acosh', kind: "functiondeclaration", path: './std/math/acosh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.approxEqual', kind: "functiondeclaration", path: './std/math/approx_equal.html', attributes: []},
{name: 'std.math.asin', kind: "functiondeclaration", path: './std/math/asin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.asinh', kind: "functiondeclaration", path: './std/math/asinh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.atan', kind: "functiondeclaration", path: './std/math/atan.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.atan2', kind: "functiondeclaration", path: './std/math/atan2.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.atanh', kind: "functiondeclaration", path: './std/math/atanh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.cbrt', kind: "functiondeclaration", path: './std/math/cbrt.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.ceil', kind: "functiondeclaration", path: './std/math/ceil.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.conj', kind: "functiondeclaration", path: './std/math/conj.html', attributes: ["pure", "nothrow", "nogc", "safe", "auto"]},
{name: 'std.math.copysign', kind: "functiondeclaration", path: './std/math/copysign.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.cos', kind: "functiondeclaration", path: './std/math/cos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.cosh', kind: "functiondeclaration", path: './std/math/cosh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.E', kind: "enummemberdeclaration", path: './std/math/e.html', attributes: []},
{name: 'std.math.exp', kind: "functiondeclaration", path: './std/math/exp.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.exp2', kind: "functiondeclaration", path: './std/math/exp2.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.expi', kind: "functiondeclaration", path: './std/math/expi.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.expm1', kind: "functiondeclaration", path: './std/math/expm1.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.fabs', kind: "functiondeclaration", path: './std/math/fabs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fdim', kind: "functiondeclaration", path: './std/math/fdim.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.feqrel', kind: "functiondeclaration", path: './std/math/feqrel.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.FloatingPointControl', kind: "structdeclaration", path: './std/math/floating_point_control.html', attributes: []},
{name: 'std.math.FloatingPointControl.disableExceptions', kind: "functiondeclaration", path: './std/math/floating_point_control.disable_exceptions.html', attributes: ["nogc"]},
{name: 'std.math.FloatingPointControl.enabledExceptions', kind: "functiondeclaration", path: './std/math/floating_point_control.enabled_exceptions.html', attributes: ["property", "nogc", "static"]},
{name: 'std.math.FloatingPointControl.enableExceptions', kind: "functiondeclaration", path: './std/math/floating_point_control.enable_exceptions.html', attributes: ["nogc"]},
{name: 'std.math.FloatingPointControl.hasExceptionTraps', kind: "functiondeclaration", path: './std/math/floating_point_control.has_exception_traps.html', attributes: ["nothrow", "property", "nogc", "safe", "static"]},
{name: 'std.math.FloatingPointControl.rounding', kind: "functiondeclaration", path: './std/math/floating_point_control.rounding.html', attributes: ["property", "nogc"]},
{name: 'std.math.FloatingPointControl.severeExceptions', kind: "enummemberdeclaration", path: './std/math/floating_point_control.severe_exceptions.html', attributes: []},
{name: 'std.math.floor', kind: "functiondeclaration", path: './std/math/floor.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.fma', kind: "functiondeclaration", path: './std/math/fma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fmax', kind: "functiondeclaration", path: './std/math/fmax.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fmin', kind: "functiondeclaration", path: './std/math/fmin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fmod', kind: "functiondeclaration", path: './std/math/fmod.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.frexp', kind: "functiondeclaration", path: './std/math/frexp.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.getNaNPayload', kind: "functiondeclaration", path: './std/math/get_nan_payload.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.hypot', kind: "functiondeclaration", path: './std/math/hypot.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.ieeeFlags', kind: "functiondeclaration", path: './std/math/ieee_flags.html', attributes: ["property"]},
{name: 'std.math.IeeeFlags', kind: "structdeclaration", path: './std/math/ieee_flags.html', attributes: []},
{name: 'std.math.IeeeFlags.divByZero', kind: "functiondeclaration", path: './std/math/ieee_flags.div_by_zero.html', attributes: ["property"]},
{name: 'std.math.IeeeFlags.inexact', kind: "functiondeclaration", path: './std/math/ieee_flags.inexact.html', attributes: ["property"]},
{name: 'std.math.IeeeFlags.invalid', kind: "functiondeclaration", path: './std/math/ieee_flags.invalid.html', attributes: ["property"]},
{name: 'std.math.IeeeFlags.overflow', kind: "functiondeclaration", path: './std/math/ieee_flags.overflow.html', attributes: ["property"]},
{name: 'std.math.IeeeFlags.underflow', kind: "functiondeclaration", path: './std/math/ieee_flags.underflow.html', attributes: ["property"]},
{name: 'std.math.ilogb', kind: "functiondeclaration", path: './std/math/ilogb.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.isFinite', kind: "functiondeclaration", path: './std/math/is_finite.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isIdentical', kind: "functiondeclaration", path: './std/math/is_identical.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isInfinity', kind: "functiondeclaration", path: './std/math/is_infinity.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isNaN', kind: "functiondeclaration", path: './std/math/is_nan.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isNormal', kind: "functiondeclaration", path: './std/math/is_normal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isSubnormal', kind: "functiondeclaration", path: './std/math/is_subnormal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.ldexp', kind: "functiondeclaration", path: './std/math/ldexp.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.LN10', kind: "enummemberdeclaration", path: './std/math/l_n10.html', attributes: []},
{name: 'std.math.LN2', kind: "enummemberdeclaration", path: './std/math/l_n2.html', attributes: []},
{name: 'std.math.log', kind: "functiondeclaration", path: './std/math/log.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.log10', kind: "functiondeclaration", path: './std/math/log10.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.LOG10E', kind: "enummemberdeclaration", path: './std/math/lo_g10.html', attributes: []},
{name: 'std.math.log1p', kind: "functiondeclaration", path: './std/math/log1p.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.log2', kind: "functiondeclaration", path: './std/math/log2.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.LOG2', kind: "enummemberdeclaration", path: './std/math/lo_g2.html', attributes: []},
{name: 'std.math.LOG2E', kind: "enummemberdeclaration", path: './std/math/lo_g2e.html', attributes: []},
{name: 'std.math.LOG2T', kind: "enummemberdeclaration", path: './std/math/lo_g2t.html', attributes: []},
{name: 'std.math.logb', kind: "functiondeclaration", path: './std/math/logb.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.lrint', kind: "functiondeclaration", path: './std/math/lrint.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.lround', kind: "functiondeclaration", path: './std/math/lround.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.modf', kind: "functiondeclaration", path: './std/math/modf.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.M_1_PI', kind: "enummemberdeclaration", path: './std/math/m_1__pi.html', attributes: []},
{name: 'std.math.M_2_PI', kind: "enummemberdeclaration", path: './std/math/m_2__pi.html', attributes: []},
{name: 'std.math.M_2_SQRTPI', kind: "enummemberdeclaration", path: './std/math/m_2__sqrtpi.html', attributes: []},
{name: 'std.math.NaN', kind: "functiondeclaration", path: './std/math/nan.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.nearbyint', kind: "functiondeclaration", path: './std/math/nearbyint.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.nextafter', kind: "functiondeclaration", path: './std/math/nextafter.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.nextDown', kind: "functiondeclaration", path: './std/math/next_down.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.nextUp', kind: "functiondeclaration", path: './std/math/next_up.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.PI', kind: "enummemberdeclaration", path: './std/math/pi.html', attributes: []},
{name: 'std.math.PI_2', kind: "enummemberdeclaration", path: './std/math/p_i_2.html', attributes: []},
{name: 'std.math.PI_4', kind: "enummemberdeclaration", path: './std/math/p_i_4.html', attributes: []},
{name: 'std.math.poly', kind: "functiondeclaration", path: './std/math/poly.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.pow', kind: "functiondeclaration", path: './std/math/pow.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.remainder', kind: "functiondeclaration", path: './std/math/remainder.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.resetIeeeFlags', kind: "functiondeclaration", path: './std/math/reset_ieee_flags.html', attributes: []},
{name: 'std.math.rint', kind: "functiondeclaration", path: './std/math/rint.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.rndtol', kind: "functiondeclaration", path: './std/math/rndtol.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.rndtonl', kind: "functiondeclaration", path: './std/math/rndtonl.html', attributes: ["extern(C)"]},
{name: 'std.math.round', kind: "functiondeclaration", path: './std/math/round.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.scalbn', kind: "functiondeclaration", path: './std/math/scalbn.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.sgn', kind: "functiondeclaration", path: './std/math/sgn.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.signbit', kind: "functiondeclaration", path: './std/math/signbit.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.sin', kind: "functiondeclaration", path: './std/math/sin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.sinh', kind: "functiondeclaration", path: './std/math/sinh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.sqrt', kind: "functiondeclaration", path: './std/math/sqrt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.SQRT1_2', kind: "enummemberdeclaration", path: './std/math/sqr_t1_2.html', attributes: []},
{name: 'std.math.SQRT2', kind: "enummemberdeclaration", path: './std/math/sqr_t2.html', attributes: []},
{name: 'std.math.tan', kind: "functiondeclaration", path: './std/math/tan.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.tanh', kind: "functiondeclaration", path: './std/math/tanh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.trunc', kind: "functiondeclaration", path: './std/math/trunc.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.mathspecial', kind: "module", path: './std/mathspecial.html', attributes: []},
{name: 'std.mathspecial.beta', kind: "functiondeclaration", path: './std/mathspecial/beta.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.betaIncomplete', kind: "functiondeclaration", path: './std/mathspecial/beta_incomplete.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.betaIncompleteInverse', kind: "functiondeclaration", path: './std/mathspecial/beta_incomplete_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.digamma', kind: "functiondeclaration", path: './std/mathspecial/digamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.erf', kind: "functiondeclaration", path: './std/mathspecial/erf.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.erfc', kind: "functiondeclaration", path: './std/mathspecial/erfc.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gamma', kind: "functiondeclaration", path: './std/mathspecial/gamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gammaIncomplete', kind: "functiondeclaration", path: './std/mathspecial/gamma_incomplete.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gammaIncompleteCompl', kind: "functiondeclaration", path: './std/mathspecial/gamma_incomplete_compl.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gammaIncompleteComplInverse', kind: "functiondeclaration", path: './std/mathspecial/gamma_incomplete_compl_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.logGamma', kind: "functiondeclaration", path: './std/mathspecial/log_gamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.logmdigamma', kind: "functiondeclaration", path: './std/mathspecial/logmdigamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.logmdigammaInverse', kind: "functiondeclaration", path: './std/mathspecial/logmdigamma_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.normalDistribution', kind: "functiondeclaration", path: './std/mathspecial/normal_distribution.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.normalDistributionInverse', kind: "functiondeclaration", path: './std/mathspecial/normal_distribution_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.sgnGamma', kind: "functiondeclaration", path: './std/mathspecial/sgn_gamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mmfile', kind: "module", path: './std/mmfile.html', attributes: []},
{name: 'std.mmfile.MmFile', kind: "classdeclaration", path: './std/mmfile/mm_file.html', attributes: []},
{name: 'std.mmfile.MmFile.length', kind: "functiondeclaration", path: './std/mmfile/mm_file.length.html', attributes: ["property", "const"]},
{name: 'std.mmfile.MmFile.Mode', kind: "enumdeclaration", path: './std/mmfile/mm_file.mode.html', attributes: []},
{name: 'std.mmfile.MmFile.Mode.read', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.read.html', attributes: []},
{name: 'std.mmfile.MmFile.Mode.readCopyOnWrite', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.read_copy_on_write.html', attributes: []},
{name: 'std.mmfile.MmFile.Mode.readWrite', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.read_write.html', attributes: []},
{name: 'std.mmfile.MmFile.Mode.readWriteNew', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.read_write_new.html', attributes: []},
{name: 'std.mmfile.MmFile.mode', kind: "functiondeclaration", path: './std/mmfile/mm_file.mode.html', attributes: []},
{name: 'std.mmfile.MmFile.opIndex', kind: "functiondeclaration", path: './std/mmfile/mm_file.op_index.html', attributes: []},
{name: 'std.mmfile.MmFile.opIndexAssign', kind: "functiondeclaration", path: './std/mmfile/mm_file.op_index_assign.html', attributes: []},
{name: 'std.mmfile.MmFile.opSlice', kind: "functiondeclaration", path: './std/mmfile/mm_file.op_slice.html', attributes: []},
{name: 'std.mmfile.MmFile.this', kind: "functiondeclaration", path: './std/mmfile/mm_file.this.html', attributes: []},
{name: 'std.numeric', kind: "module", path: './std/numeric.html', attributes: []},
{name: 'std.numeric.cosineSimilarity', kind: "functiondeclaration", path: './std/numeric/cosine_similarity.html', attributes: []},
{name: 'std.numeric.CustomFloat', kind: "aliasdeclaration", path: './std/numeric/custom_float.html', attributes: []},
{name: 'std.numeric.CustomFloat.dig', kind: "functiondeclaration", path: './std/numeric/custom_float.dig.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.epsilon', kind: "functiondeclaration", path: './std/numeric/custom_float.epsilon.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.get', kind: "templatedeclaration", path: './std/numeric/custom_float.get.html', attributes: []},
{name: 'std.numeric.CustomFloat.get.get', kind: "functiondeclaration", path: './std/numeric/custom_float.get.get.html', attributes: ["property"]},
{name: 'std.numeric.CustomFloat.im', kind: "functiondeclaration", path: './std/numeric/custom_float.im.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.mant_dig', kind: "enummemberdeclaration", path: './std/numeric/custom_float.mant_dig.html', attributes: []},
{name: 'std.numeric.CustomFloat.max', kind: "functiondeclaration", path: './std/numeric/custom_float.max.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.max_10_exp', kind: "functiondeclaration", path: './std/numeric/custom_float.max_10_exp.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.max_exp', kind: "enummemberdeclaration", path: './std/numeric/custom_float.max_exp.html', attributes: []},
{name: 'std.numeric.CustomFloat.min_10_exp', kind: "functiondeclaration", path: './std/numeric/custom_float.min_10_exp.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.min_exp', kind: "enummemberdeclaration", path: './std/numeric/custom_float.min_exp.html', attributes: []},
{name: 'std.numeric.CustomFloat.min_normal', kind: "functiondeclaration", path: './std/numeric/custom_float.min_normal.html', attributes: ["property", "static"]},
{name: 'std.numeric.CustomFloat.opAssign', kind: "templatedeclaration", path: './std/numeric/custom_float.op_assign.html', attributes: []},
{name: 'std.numeric.CustomFloat.opAssign.opAssign', kind: "functiondeclaration", path: './std/numeric/custom_float.op_assign.op_assign.html', attributes: []},
{name: 'std.numeric.CustomFloat.opBinary', kind: "templatedeclaration", path: './std/numeric/custom_float.op_binary.html', attributes: []},
{name: 'std.numeric.CustomFloat.opBinary.opBinary', kind: "functiondeclaration", path: './std/numeric/custom_float.op_binary.op_binary.html', attributes: []},
{name: 'std.numeric.CustomFloat.opBinaryRight', kind: "templatedeclaration", path: './std/numeric/custom_float.op_binary_right.html', attributes: []},
{name: 'std.numeric.CustomFloat.opBinaryRight.opBinaryRight', kind: "functiondeclaration", path: './std/numeric/custom_float.op_binary_right.op_binary_right.html', attributes: []},
{name: 'std.numeric.CustomFloat.opCast', kind: "templatedeclaration", path: './std/numeric/custom_float.op_cast.html', attributes: []},
{name: 'std.numeric.CustomFloat.opCast.opCast', kind: "functiondeclaration", path: './std/numeric/custom_float.op_cast.op_cast.html', attributes: []},
{name: 'std.numeric.CustomFloat.opCmp', kind: "templatedeclaration", path: './std/numeric/custom_float.op_cmp.html', attributes: []},
{name: 'std.numeric.CustomFloat.opCmp.opCmp', kind: "functiondeclaration", path: './std/numeric/custom_float.op_cmp.op_cmp.html', attributes: []},
{name: 'std.numeric.CustomFloat.opOpAssign', kind: "templatedeclaration", path: './std/numeric/custom_float.op_op_assign.html', attributes: []},
{name: 'std.numeric.CustomFloat.opOpAssign.opOpAssign', kind: "functiondeclaration", path: './std/numeric/custom_float.op_op_assign.op_op_assign.html', attributes: []},
{name: 'std.numeric.CustomFloat.opUnary', kind: "templatedeclaration", path: './std/numeric/custom_float.op_unary.html', attributes: []},
{name: 'std.numeric.CustomFloat.opUnary.opUnary', kind: "functiondeclaration", path: './std/numeric/custom_float.op_unary.op_unary.html', attributes: []},
{name: 'std.numeric.CustomFloat.re', kind: "functiondeclaration", path: './std/numeric/custom_float.re.html', attributes: ["property"]},
{name: 'std.numeric.CustomFloat.this', kind: "templatedeclaration", path: './std/numeric/custom_float.this.html', attributes: []},
{name: 'std.numeric.CustomFloat.this.this', kind: "functiondeclaration", path: './std/numeric/custom_float.this.this.html', attributes: []},
{name: 'std.numeric.CustomFloat.toString', kind: "templatedeclaration", path: './std/numeric/custom_float.to_string.html', attributes: []},
{name: 'std.numeric.CustomFloat.toString.toString', kind: "templatedeclaration", path: './std/numeric/custom_float.to_string.to_string.html', attributes: []},
{name: 'std.numeric.CustomFloat.toString.toString.toString', kind: "functiondeclaration", path: './std/numeric/custom_float.to_string.to_string.to_string.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags', kind: "enumdeclaration", path: './std/numeric/custom_float_flags.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.allowDenorm', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.allow_denorm.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.allowDenormZeroOnly', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.allow_denorm_zero_only.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.ieee', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.ieee.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.infinity', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.infinity.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.nan', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.nan.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.negativeUnsigned', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.negative_unsigned.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.none', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.none.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.probability', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.probability.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.signed', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.signed.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.storeNormalized', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.store_normalized.html', attributes: []},
{name: 'std.numeric.dotProduct', kind: "functiondeclaration", path: './std/numeric/dot_product.html', attributes: []},
{name: 'std.numeric.entropy', kind: "functiondeclaration", path: './std/numeric/entropy.html', attributes: []},
{name: 'std.numeric.euclideanDistance', kind: "functiondeclaration", path: './std/numeric/euclidean_distance.html', attributes: []},
{name: 'std.numeric.fft', kind: "functiondeclaration", path: './std/numeric/fft.html', attributes: []},
{name: 'std.numeric.Fft', kind: "classdeclaration", path: './std/numeric/fft.html', attributes: []},
{name: 'std.numeric.Fft.fft', kind: "functiondeclaration", path: './std/numeric/fft.fft.html', attributes: ["const"]},
{name: 'std.numeric.Fft.inverseFft', kind: "functiondeclaration", path: './std/numeric/fft.inverse_fft.html', attributes: ["const"]},
{name: 'std.numeric.Fft.this', kind: "functiondeclaration", path: './std/numeric/fft.this.html', attributes: []},
{name: 'std.numeric.findRoot', kind: "functiondeclaration", path: './std/numeric/find_root.html', attributes: []},
{name: 'std.numeric.FPTemporary', kind: "aliasdeclaration", path: './std/numeric/fp_temporary.html', attributes: []},
{name: 'std.numeric.gapWeightedSimilarity', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity.html', attributes: []},
{name: 'std.numeric.GapWeightedSimilarityIncremental', kind: "structdeclaration", path: './std/numeric/gap_weighted_similarity_incremental.html', attributes: []},
{name: 'std.numeric.GapWeightedSimilarityIncremental.empty', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.empty.html', attributes: ["property"]},
{name: 'std.numeric.GapWeightedSimilarityIncremental.front', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.front.html', attributes: ["property"]},
{name: 'std.numeric.GapWeightedSimilarityIncremental.opSlice', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.op_slice.html', attributes: ["ref"]},
{name: 'std.numeric.GapWeightedSimilarityIncremental.popFront', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.pop_front.html', attributes: []},
{name: 'std.numeric.GapWeightedSimilarityIncremental.this', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.this.html', attributes: []},
{name: 'std.numeric.gapWeightedSimilarityIncremental', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.html', attributes: []},
{name: 'std.numeric.gapWeightedSimilarityNormalized', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_normalized.html', attributes: []},
{name: 'std.numeric.gcd', kind: "functiondeclaration", path: './std/numeric/gcd.html', attributes: []},
{name: 'std.numeric.inverseFft', kind: "functiondeclaration", path: './std/numeric/inverse_fft.html', attributes: []},
{name: 'std.numeric.jensenShannonDivergence', kind: "functiondeclaration", path: './std/numeric/jensen_shannon_divergence.html', attributes: []},
{name: 'std.numeric.kullbackLeiblerDivergence', kind: "functiondeclaration", path: './std/numeric/kullback_leibler_divergence.html', attributes: []},
{name: 'std.numeric.normalize', kind: "functiondeclaration", path: './std/numeric/normalize.html', attributes: []},
{name: 'std.numeric.secantMethod', kind: "templatedeclaration", path: './std/numeric/secant_method.html', attributes: []},
{name: 'std.numeric.secantMethod.secantMethod', kind: "functiondeclaration", path: './std/numeric/secant_method.secant_method.html', attributes: []},
{name: 'std.numeric.sumOfLog2s', kind: "functiondeclaration", path: './std/numeric/sum_of_log2s.html', attributes: []},
{name: 'std.outbuffer', kind: "module", path: './std/outbuffer.html', attributes: []},
{name: 'std.outbuffer.OutBuffer', kind: "classdeclaration", path: './std/outbuffer/out_buffer.html', attributes: []},
{name: 'std.outbuffer.OutBuffer.align2', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.align2.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.align4', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.align4.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.alignSize', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.align_size.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.fill0', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.fill0.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.printf', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.printf.html', attributes: ["trusted"]},
{name: 'std.outbuffer.OutBuffer.put', kind: "aliasdeclaration", path: './std/outbuffer/out_buffer.put.html', attributes: []},
{name: 'std.outbuffer.OutBuffer.reserve', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.reserve.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.outbuffer.OutBuffer.spread', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.spread.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.toBytes', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.to_bytes.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.toString', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.to_string.html', attributes: ["pure", "nothrow", "safe", "const", "override"]},
{name: 'std.outbuffer.OutBuffer.vprintf', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.vprintf.html', attributes: ["nothrow", "trusted"]},
{name: 'std.outbuffer.OutBuffer.write', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.write.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.writef', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.writef.html', attributes: []},
{name: 'std.outbuffer.OutBuffer.writefln', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.writefln.html', attributes: []},
{name: 'std.parallelism', kind: "module", path: './std/parallelism.html', attributes: []},
{name: 'std.parallelism.defaultPoolThreads', kind: "functiondeclaration", path: './std/parallelism/default_pool_threads.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.parallel', kind: "functiondeclaration", path: './std/parallelism/parallel.html', attributes: []},
{name: 'std.parallelism.scopedTask', kind: "functiondeclaration", path: './std/parallelism/scoped_task.html', attributes: ["auto"]},
{name: 'std.parallelism.Task', kind: "structdeclaration", path: './std/parallelism/task.html', attributes: []},
{name: 'std.parallelism.Task.done', kind: "functiondeclaration", path: './std/parallelism/task.done.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.Task.executeInNewThread', kind: "functiondeclaration", path: './std/parallelism/task.execute_in_new_thread.html', attributes: ["trusted"]},
{name: 'std.parallelism.Task.ReturnType', kind: "aliasdeclaration", path: './std/parallelism/task.return_type.html', attributes: []},
{name: 'std.parallelism.Task.spinForce', kind: "functiondeclaration", path: './std/parallelism/task.spin_force.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.parallelism.Task.workForce', kind: "functiondeclaration", path: './std/parallelism/task.work_force.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.parallelism.Task.yieldForce', kind: "functiondeclaration", path: './std/parallelism/task.yield_force.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.parallelism.task', kind: "functiondeclaration", path: './std/parallelism/task.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool', kind: "classdeclaration", path: './std/parallelism/task_pool.html', attributes: []},
{name: 'std.parallelism.TaskPool.amap', kind: "templatedeclaration", path: './std/parallelism/task_pool.amap.html', attributes: []},
{name: 'std.parallelism.TaskPool.amap.amap', kind: "functiondeclaration", path: './std/parallelism/task_pool.amap.amap.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.asyncBuf', kind: "functiondeclaration", path: './std/parallelism/task_pool.async_buf.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.finish', kind: "functiondeclaration", path: './std/parallelism/task_pool.finish.html', attributes: ["trusted"]},
{name: 'std.parallelism.TaskPool.isDaemon', kind: "functiondeclaration", path: './std/parallelism/task_pool.is_daemon.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.TaskPool.map', kind: "templatedeclaration", path: './std/parallelism/task_pool.map.html', attributes: []},
{name: 'std.parallelism.TaskPool.map.map', kind: "functiondeclaration", path: './std/parallelism/task_pool.map.map.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.parallel', kind: "functiondeclaration", path: './std/parallelism/task_pool.parallel.html', attributes: []},
{name: 'std.parallelism.TaskPool.priority', kind: "functiondeclaration", path: './std/parallelism/task_pool.priority.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.TaskPool.put', kind: "functiondeclaration", path: './std/parallelism/task_pool.put.html', attributes: []},
{name: 'std.parallelism.TaskPool.reduce', kind: "templatedeclaration", path: './std/parallelism/task_pool.reduce.html', attributes: []},
{name: 'std.parallelism.TaskPool.reduce.reduce', kind: "functiondeclaration", path: './std/parallelism/task_pool.reduce.reduce.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.size', kind: "functiondeclaration", path: './std/parallelism/task_pool.size.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.parallelism.TaskPool.stop', kind: "functiondeclaration", path: './std/parallelism/task_pool.stop.html', attributes: ["trusted"]},
{name: 'std.parallelism.TaskPool.this', kind: "functiondeclaration", path: './std/parallelism/task_pool.this.html', attributes: ["trusted"]},
{name: 'std.parallelism.TaskPool.workerIndex', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_index.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.parallelism.TaskPool.workerLocalStorage', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_local_storage.html', attributes: []},
{name: 'std.parallelism.TaskPool.WorkerLocalStorage', kind: "structdeclaration", path: './std/parallelism/task_pool.worker_local_storage.html', attributes: []},
{name: 'std.parallelism.TaskPool.WorkerLocalStorage.get', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_local_storage.get.html', attributes: ["property", "ref"]},
{name: 'std.parallelism.TaskPool.WorkerLocalStorage.toRange', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_local_storage.to_range.html', attributes: ["property"]},
{name: 'std.parallelism.TaskPool.WorkerLocalStorageRange', kind: "structdeclaration", path: './std/parallelism/task_pool.worker_local_storage_range.html', attributes: []},
{name: 'std.parallelism.taskPool', kind: "functiondeclaration", path: './std/parallelism/task_pool.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.totalCPUs', kind: "variabledeclaration", path: './std/parallelism/total_cp_us.html', attributes: []},
{name: 'std.path', kind: "module", path: './std/path.html', attributes: []},
{name: 'std.path.absolutePath', kind: "functiondeclaration", path: './std/path/absolute_path.html', attributes: ["pure", "safe"]},
{name: 'std.path.baseName', kind: "functiondeclaration", path: './std/path/base_name.html', attributes: ["auto"]},
{name: 'std.path.buildNormalizedPath', kind: "functiondeclaration", path: './std/path/build_normalized_path.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.path.buildPath', kind: "functiondeclaration", path: './std/path/build_path.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.CaseSensitive', kind: "enumdeclaration", path: './std/path/case_sensitive.html', attributes: []},
{name: 'std.path.CaseSensitive.no', kind: "enummemberdeclaration", path: './std/path/case_sensitive.no.html', attributes: []},
{name: 'std.path.CaseSensitive.osDefault', kind: "enummemberdeclaration", path: './std/path/case_sensitive.os_default.html', attributes: []},
{name: 'std.path.CaseSensitive.yes', kind: "enummemberdeclaration", path: './std/path/case_sensitive.yes.html', attributes: []},
{name: 'std.path.defaultExtension', kind: "functiondeclaration", path: './std/path/default_extension.html', attributes: ["pure", "trusted"]},
{name: 'std.path.dirName', kind: "functiondeclaration", path: './std/path/dir_name.html', attributes: []},
{name: 'std.path.dirSeparator', kind: "enummemberdeclaration", path: './std/path/dir_separator.html', attributes: []},
{name: 'std.path.driveName', kind: "functiondeclaration", path: './std/path/drive_name.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.path.expandTilde', kind: "functiondeclaration", path: './std/path/expand_tilde.html', attributes: []},
{name: 'std.path.extension', kind: "functiondeclaration", path: './std/path/extension.html', attributes: ["auto"]},
{name: 'std.path.filenameCharCmp', kind: "functiondeclaration", path: './std/path/filename_char_cmp.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.filenameCmp', kind: "functiondeclaration", path: './std/path/filename_cmp.html', attributes: ["pure", "safe"]},
{name: 'std.path.globMatch', kind: "functiondeclaration", path: './std/path/glob_match.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.isAbsolute', kind: "functiondeclaration", path: './std/path/is_absolute.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.path.isDirSeparator', kind: "functiondeclaration", path: './std/path/is_dir_separator.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.path.isRooted', kind: "functiondeclaration", path: './std/path/is_rooted.html', attributes: []},
{name: 'std.path.isValidFilename', kind: "functiondeclaration", path: './std/path/is_valid_filename.html', attributes: []},
{name: 'std.path.isValidPath', kind: "functiondeclaration", path: './std/path/is_valid_path.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.pathSeparator', kind: "enummemberdeclaration", path: './std/path/path_separator.html', attributes: []},
{name: 'std.path.pathSplitter', kind: "functiondeclaration", path: './std/path/path_splitter.html', attributes: ["pure", "nothrow", "safe", "auto"]},
{name: 'std.path.relativePath', kind: "functiondeclaration", path: './std/path/relative_path.html', attributes: []},
{name: 'std.path.rootName', kind: "functiondeclaration", path: './std/path/root_name.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.path.setExtension', kind: "functiondeclaration", path: './std/path/set_extension.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.path.stripDrive', kind: "functiondeclaration", path: './std/path/strip_drive.html', attributes: ["auto"]},
{name: 'std.path.stripExtension', kind: "functiondeclaration", path: './std/path/strip_extension.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.process', kind: "module", path: './std/process.html', attributes: []},
{name: 'std.process.browse', kind: "functiondeclaration", path: './std/process/browse.html', attributes: []},
{name: 'std.process.Config', kind: "enumdeclaration", path: './std/process/config.html', attributes: []},
{name: 'std.process.Config.inheritFDs', kind: "enummemberdeclaration", path: './std/process/config.inherit_f_ds.html', attributes: []},
{name: 'std.process.Config.newEnv', kind: "enummemberdeclaration", path: './std/process/config.new_env.html', attributes: []},
{name: 'std.process.Config.retainStderr', kind: "enummemberdeclaration", path: './std/process/config.retain_stderr.html', attributes: []},
{name: 'std.process.Config.retainStdin', kind: "enummemberdeclaration", path: './std/process/config.retain_stdin.html', attributes: []},
{name: 'std.process.Config.retainStdout', kind: "enummemberdeclaration", path: './std/process/config.retain_stdout.html', attributes: []},
{name: 'std.process.Config.suppressConsole', kind: "enummemberdeclaration", path: './std/process/config.suppress_console.html', attributes: []},
{name: 'std.process.environment', kind: "classdeclaration", path: './std/process/environment.html', attributes: []},
{name: 'std.process.environment.get', kind: "functiondeclaration", path: './std/process/environment.get.html', attributes: ["safe", "static"]},
{name: 'std.process.environment.opIndex', kind: "functiondeclaration", path: './std/process/environment.op_index.html', attributes: ["safe", "static"]},
{name: 'std.process.environment.opIndexAssign', kind: "functiondeclaration", path: './std/process/environment.op_index_assign.html', attributes: ["trusted", "static"]},
{name: 'std.process.environment.remove', kind: "functiondeclaration", path: './std/process/environment.remove.html', attributes: ["nothrow", "nogc", "trusted", "static"]},
{name: 'std.process.environment.toAA', kind: "functiondeclaration", path: './std/process/environment.to_aa.html', attributes: ["trusted", "static"]},
{name: 'std.process.escapeShellCommand', kind: "functiondeclaration", path: './std/process/escape_shell_command.html', attributes: ["pure", "safe"]},
{name: 'std.process.escapeShellFileName', kind: "functiondeclaration", path: './std/process/escape_shell_file_name.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.process.escapeWindowsArgument', kind: "functiondeclaration", path: './std/process/escape_windows_argument.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.process.execute', kind: "functiondeclaration", path: './std/process/execute.html', attributes: ["trusted", "auto"]},
{name: 'std.process.executeShell', kind: "functiondeclaration", path: './std/process/execute_shell.html', attributes: ["trusted", "auto"]},
{name: 'std.process.execv', kind: "functiondeclaration", path: './std/process/execv.html', attributes: []},
{name: 'std.process.execve', kind: "functiondeclaration", path: './std/process/execve.html', attributes: []},
{name: 'std.process.execvp', kind: "functiondeclaration", path: './std/process/execvp.html', attributes: []},
{name: 'std.process.execvpe', kind: "functiondeclaration", path: './std/process/execvpe.html', attributes: []},
{name: 'std.process.getenv', kind: "functiondeclaration", path: './std/process/getenv.html', attributes: ["nothrow", "deprecated"]},
{name: 'std.process.getpid', kind: "aliasdeclaration", path: './std/process/getpid.html', attributes: ["deprecated"]},
{name: 'std.process.kill', kind: "functiondeclaration", path: './std/process/kill.html', attributes: []},
{name: 'std.process.Pid', kind: "classdeclaration", path: './std/process/pid.html', attributes: []},
{name: 'std.process.Pid.osHandle', kind: "functiondeclaration", path: './std/process/pid.os_handle.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.process.Pid.processID', kind: "functiondeclaration", path: './std/process/pid.process_id.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.process.Pipe', kind: "structdeclaration", path: './std/process/pipe.html', attributes: []},
{name: 'std.process.Pipe.close', kind: "functiondeclaration", path: './std/process/pipe.close.html', attributes: ["safe"]},
{name: 'std.process.Pipe.readEnd', kind: "functiondeclaration", path: './std/process/pipe.read_end.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.Pipe.writeEnd', kind: "functiondeclaration", path: './std/process/pipe.write_end.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.pipe', kind: "functiondeclaration", path: './std/process/pipe.html', attributes: ["trusted"]},
{name: 'std.process.pipeProcess', kind: "functiondeclaration", path: './std/process/pipe_process.html', attributes: ["safe"]},
{name: 'std.process.pipeShell', kind: "functiondeclaration", path: './std/process/pipe_shell.html', attributes: ["safe"]},
{name: 'std.process.ProcessException', kind: "classdeclaration", path: './std/process/process_exception.html', attributes: []},
{name: 'std.process.ProcessPipes', kind: "structdeclaration", path: './std/process/process_pipes.html', attributes: []},
{name: 'std.process.ProcessPipes.pid', kind: "functiondeclaration", path: './std/process/process_pipes.pid.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.ProcessPipes.stderr', kind: "functiondeclaration", path: './std/process/process_pipes.stderr.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.ProcessPipes.stdin', kind: "functiondeclaration", path: './std/process/process_pipes.stdin.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.ProcessPipes.stdout', kind: "functiondeclaration", path: './std/process/process_pipes.stdout.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.Redirect', kind: "enumdeclaration", path: './std/process/redirect.html', attributes: []},
{name: 'std.process.Redirect.all', kind: "enummemberdeclaration", path: './std/process/redirect.all.html', attributes: []},
{name: 'std.process.Redirect.stderr', kind: "enummemberdeclaration", path: './std/process/redirect.stderr.html', attributes: []},
{name: 'std.process.Redirect.stderrToStdout', kind: "enummemberdeclaration", path: './std/process/redirect.stderr_to_stdout.html', attributes: []},
{name: 'std.process.Redirect.stdin', kind: "enummemberdeclaration", path: './std/process/redirect.stdin.html', attributes: []},
{name: 'std.process.Redirect.stdout', kind: "enummemberdeclaration", path: './std/process/redirect.stdout.html', attributes: []},
{name: 'std.process.Redirect.stdoutToStderr', kind: "enummemberdeclaration", path: './std/process/redirect.stdout_to_stderr.html', attributes: []},
{name: 'std.process.setenv', kind: "functiondeclaration", path: './std/process/setenv.html', attributes: ["deprecated"]},
{name: 'std.process.shell', kind: "functiondeclaration", path: './std/process/shell.html', attributes: ["deprecated"]},
{name: 'std.process.spawnProcess', kind: "functiondeclaration", path: './std/process/spawn_process.html', attributes: ["trusted"]},
{name: 'std.process.spawnShell', kind: "functiondeclaration", path: './std/process/spawn_shell.html', attributes: ["trusted"]},
{name: 'std.process.system', kind: "functiondeclaration", path: './std/process/system.html', attributes: ["deprecated"]},
{name: 'std.process.thisProcessID', kind: "functiondeclaration", path: './std/process/this_process_id.html', attributes: ["nothrow", "property", "trusted"]},
{name: 'std.process.tryWait', kind: "functiondeclaration", path: './std/process/try_wait.html', attributes: ["safe", "auto"]},
{name: 'std.process.unsetenv', kind: "functiondeclaration", path: './std/process/unsetenv.html', attributes: ["deprecated"]},
{name: 'std.process.userShell', kind: "functiondeclaration", path: './std/process/user_shell.html', attributes: ["property", "safe"]},
{name: 'std.process.wait', kind: "functiondeclaration", path: './std/process/wait.html', attributes: ["safe"]},
{name: 'std.random', kind: "module", path: './std/random.html', attributes: []},
{name: 'std.random.dice', kind: "functiondeclaration", path: './std/random/dice.html', attributes: []},
{name: 'std.random.isSeedable', kind: "enummemberdeclaration", path: './std/random/is_seedable.html', attributes: []},
{name: 'std.random.isUniformRNG', kind: "enummemberdeclaration", path: './std/random/is_uniform_rng.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine', kind: "structdeclaration", path: './std/random/linear_congruential_engine.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.empty', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.empty.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.front', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.front.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.random.LinearCongruentialEngine.hasFixedRange', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.has_fixed_range.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.increment', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.increment.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.isUniformRandom', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.is_uniform_random.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.max', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.max.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.min', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.min.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.modulus', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.modulus.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.multiplier', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.multiplier.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.opEquals', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.op_equals.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.random.LinearCongruentialEngine.popFront', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.pop_front.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.random.LinearCongruentialEngine.save', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.save.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.random.LinearCongruentialEngine.seed', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.seed.html', attributes: ["pure", "safe"]},
{name: 'std.random.LinearCongruentialEngine.this', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.this.html', attributes: ["pure", "safe"]},
{name: 'std.random.MersenneTwisterEngine', kind: "structdeclaration", path: './std/random/mersenne_twister_engine.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.defaultSeed', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.default_seed.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.empty', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.empty.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.front', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.front.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.random.MersenneTwisterEngine.isUniformRandom', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.is_uniform_random.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.maskBits', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.mask_bits.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.max', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.max.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.min', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.min.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.popFront', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.pop_front.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.random.MersenneTwisterEngine.save', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.save.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.random.MersenneTwisterEngine.seed', kind: "templatedeclaration", path: './std/random/mersenne_twister_engine.seed.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.seed.seed', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.seed.seed.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.random.MersenneTwisterEngine.shiftSize', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.shift_size.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.stateSize', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.state_size.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingB', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingC', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingL', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingS', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingT', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingU', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.this', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.random.MersenneTwisterEngine.wordSize', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.word_size.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.xorMask', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.xor_mask.html', attributes: []},
{name: 'std.random.MinstdRand', kind: "aliasdeclaration", path: './std/random/minstd_rand.html', attributes: []},
{name: 'std.random.MinstdRand0', kind: "aliasdeclaration", path: './std/random/minstd_rand0.html', attributes: []},
{name: 'std.random.Mt19937', kind: "aliasdeclaration", path: './std/random/mt19937.html', attributes: []},
{name: 'std.random.partialShuffle', kind: "functiondeclaration", path: './std/random/partial_shuffle.html', attributes: []},
{name: 'std.random.Random', kind: "aliasdeclaration", path: './std/random/random.html', attributes: []},
{name: 'std.random.randomCover', kind: "functiondeclaration", path: './std/random/random_cover.html', attributes: ["auto"]},
{name: 'std.random.RandomCover', kind: "structdeclaration", path: './std/random/random_cover.html', attributes: []},
{name: 'std.random.randomSample', kind: "functiondeclaration", path: './std/random/random_sample.html', attributes: ["auto"]},
{name: 'std.random.RandomSample', kind: "structdeclaration", path: './std/random/random_sample.html', attributes: []},
{name: 'std.random.RandomSample.empty', kind: "functiondeclaration", path: './std/random/random_sample.empty.html', attributes: ["const", "property"]},
{name: 'std.random.RandomSample.index', kind: "functiondeclaration", path: './std/random/random_sample.index.html', attributes: ["property"]},
{name: 'std.random.RandomSample.length', kind: "functiondeclaration", path: './std/random/random_sample.length.html', attributes: ["property"]},
{name: 'std.random.RandomSample.popFront', kind: "functiondeclaration", path: './std/random/random_sample.pop_front.html', attributes: []},
{name: 'std.random.randomShuffle', kind: "functiondeclaration", path: './std/random/random_shuffle.html', attributes: []},
{name: 'std.random.rndGen', kind: "functiondeclaration", path: './std/random/rnd_gen.html', attributes: ["ref", "property", "safe"]},
{name: 'std.random.uniform', kind: "functiondeclaration", path: './std/random/uniform.html', attributes: ["auto"]},
{name: 'std.random.uniform01', kind: "functiondeclaration", path: './std/random/uniform01.html', attributes: []},
{name: 'std.random.uniformDistribution', kind: "functiondeclaration", path: './std/random/uniform_distribution.html', attributes: []},
{name: 'std.random.unpredictableSeed', kind: "functiondeclaration", path: './std/random/unpredictable_seed.html', attributes: ["property", "trusted"]},
{name: 'std.random.Xorshift', kind: "aliasdeclaration", path: './std/random/xorshift.html', attributes: []},
{name: 'std.random.Xorshift128', kind: "aliasdeclaration", path: './std/random/xorshift128.html', attributes: []},
{name: 'std.random.Xorshift160', kind: "aliasdeclaration", path: './std/random/xorshift160.html', attributes: []},
{name: 'std.random.Xorshift192', kind: "aliasdeclaration", path: './std/random/xorshift192.html', attributes: []},
{name: 'std.random.Xorshift32', kind: "aliasdeclaration", path: './std/random/xorshift32.html', attributes: []},
{name: 'std.random.Xorshift64', kind: "aliasdeclaration", path: './std/random/xorshift64.html', attributes: []},
{name: 'std.random.Xorshift96', kind: "aliasdeclaration", path: './std/random/xorshift96.html', attributes: []},
{name: 'std.random.XorshiftEngine', kind: "structdeclaration", path: './std/random/xorshift_engine.html', attributes: []},
{name: 'std.random.XorshiftEngine.empty', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.empty.html', attributes: []},
{name: 'std.random.XorshiftEngine.front', kind: "functiondeclaration", path: './std/random/xorshift_engine.front.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.random.XorshiftEngine.isUniformRandom', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.is_uniform_random.html', attributes: []},
{name: 'std.random.XorshiftEngine.max', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.max.html', attributes: []},
{name: 'std.random.XorshiftEngine.min', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.min.html', attributes: []},
{name: 'std.random.XorshiftEngine.opEquals', kind: "functiondeclaration", path: './std/random/xorshift_engine.op_equals.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.random.XorshiftEngine.popFront', kind: "functiondeclaration", path: './std/random/xorshift_engine.pop_front.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.random.XorshiftEngine.save', kind: "functiondeclaration", path: './std/random/xorshift_engine.save.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'std.random.XorshiftEngine.seed', kind: "functiondeclaration", path: './std/random/xorshift_engine.seed.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.random.XorshiftEngine.this', kind: "functiondeclaration", path: './std/random/xorshift_engine.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.range', kind: "module", path: './std/range.html', attributes: []},
{name: 'std.range.assumeSorted', kind: "functiondeclaration", path: './std/range/assume_sorted.html', attributes: ["auto"]},
{name: 'std.range.chain', kind: "functiondeclaration", path: './std/range/chain.html', attributes: ["auto"]},
{name: 'std.range.Chunks', kind: "structdeclaration", path: './std/range/chunks.html', attributes: []},
{name: 'std.range.Chunks.front', kind: "functiondeclaration", path: './std/range/chunks.front.html', attributes: ["property", "auto"]},
{name: 'std.range.Chunks.popFront', kind: "functiondeclaration", path: './std/range/chunks.pop_front.html', attributes: []},
{name: 'std.range.Chunks.save', kind: "functiondeclaration", path: './std/range/chunks.save.html', attributes: ["property"]},
{name: 'std.range.Chunks.this', kind: "functiondeclaration", path: './std/range/chunks.this.html', attributes: []},
{name: 'std.range.chunks', kind: "functiondeclaration", path: './std/range/chunks.html', attributes: []},
{name: 'std.range.cycle', kind: "functiondeclaration", path: './std/range/cycle.html', attributes: []},
{name: 'std.range.Cycle', kind: "structdeclaration", path: './std/range/cycle.html', attributes: []},
{name: 'std.range.drop', kind: "functiondeclaration", path: './std/range/drop.html', attributes: []},
{name: 'std.range.dropBack', kind: "functiondeclaration", path: './std/range/drop_back.html', attributes: []},
{name: 'std.range.dropBackExactly', kind: "functiondeclaration", path: './std/range/drop_back_exactly.html', attributes: []},
{name: 'std.range.dropBackOne', kind: "functiondeclaration", path: './std/range/drop_back_one.html', attributes: []},
{name: 'std.range.dropExactly', kind: "functiondeclaration", path: './std/range/drop_exactly.html', attributes: []},
{name: 'std.range.dropOne', kind: "functiondeclaration", path: './std/range/drop_one.html', attributes: []},
{name: 'std.range.enumerate', kind: "functiondeclaration", path: './std/range/enumerate.html', attributes: ["auto"]},
{name: 'std.range.FrontTransversal', kind: "structdeclaration", path: './std/range/front_transversal.html', attributes: []},
{name: 'std.range.FrontTransversal.front', kind: "functiondeclaration", path: './std/range/front_transversal.front.html', attributes: ["property", "auto"]},
{name: 'std.range.FrontTransversal.popFront', kind: "functiondeclaration", path: './std/range/front_transversal.pop_front.html', attributes: []},
{name: 'std.range.FrontTransversal.this', kind: "functiondeclaration", path: './std/range/front_transversal.this.html', attributes: []},
{name: 'std.range.frontTransversal', kind: "functiondeclaration", path: './std/range/front_transversal.html', attributes: []},
{name: 'std.range.generate', kind: "functiondeclaration", path: './std/range/generate.html', attributes: ["auto"]},
{name: 'std.range.indexed', kind: "functiondeclaration", path: './std/range/indexed.html', attributes: []},
{name: 'std.range.Indexed', kind: "structdeclaration", path: './std/range/indexed.html', attributes: []},
{name: 'std.range.Indexed.front', kind: "functiondeclaration", path: './std/range/indexed.front.html', attributes: ["property", "auto"]},
{name: 'std.range.Indexed.indices', kind: "functiondeclaration", path: './std/range/indexed.indices.html', attributes: ["property"]},
{name: 'std.range.Indexed.popFront', kind: "functiondeclaration", path: './std/range/indexed.pop_front.html', attributes: []},
{name: 'std.range.Indexed.source', kind: "functiondeclaration", path: './std/range/indexed.source.html', attributes: ["property"]},
{name: 'std.range.iota', kind: "functiondeclaration", path: './std/range/iota.html', attributes: ["auto"]},
{name: 'std.range.isTwoWayCompatible', kind: "enummemberdeclaration", path: './std/range/is_two_way_compatible.html', attributes: []},
{name: 'std.range.lockstep', kind: "functiondeclaration", path: './std/range/lockstep.html', attributes: []},
{name: 'std.range.Lockstep', kind: "structdeclaration", path: './std/range/lockstep.html', attributes: []},
{name: 'std.range.NullSink', kind: "structdeclaration", path: './std/range/null_sink.html', attributes: []},
{name: 'std.range.only', kind: "functiondeclaration", path: './std/range/only.html', attributes: ["auto"]},
{name: 'std.range.radial', kind: "functiondeclaration", path: './std/range/radial.html', attributes: ["auto"]},
{name: 'std.range.Recurrence', kind: "structdeclaration", path: './std/range/recurrence.html', attributes: []},
{name: 'std.range.recurrence', kind: "functiondeclaration", path: './std/range/recurrence.html', attributes: []},
{name: 'std.range.RefRange', kind: "structdeclaration", path: './std/range/ref_range.html', attributes: []},
{name: 'std.range.RefRange.opAssign', kind: "functiondeclaration", path: './std/range/ref_range.op_assign.html', attributes: ["auto"]},
{name: 'std.range.RefRange.popFront', kind: "functiondeclaration", path: './std/range/ref_range.pop_front.html', attributes: []},
{name: 'std.range.RefRange.ptr', kind: "functiondeclaration", path: './std/range/ref_range.ptr.html', attributes: ["inout", "pure", "nothrow", "property", "safe"]},
{name: 'std.range.RefRange.this', kind: "functiondeclaration", path: './std/range/ref_range.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.range.refRange', kind: "functiondeclaration", path: './std/range/ref_range.html', attributes: ["auto"]},
{name: 'std.range.repeat', kind: "functiondeclaration", path: './std/range/repeat.html', attributes: []},
{name: 'std.range.Repeat', kind: "structdeclaration", path: './std/range/repeat.html', attributes: []},
{name: 'std.range.retro', kind: "functiondeclaration", path: './std/range/retro.html', attributes: ["auto"]},
{name: 'std.range.roundRobin', kind: "functiondeclaration", path: './std/range/round_robin.html', attributes: ["auto"]},
{name: 'std.range.SearchPolicy', kind: "enumdeclaration", path: './std/range/search_policy.html', attributes: []},
{name: 'std.range.SearchPolicy.binarySearch', kind: "enummemberdeclaration", path: './std/range/search_policy.binary_search.html', attributes: []},
{name: 'std.range.SearchPolicy.gallop', kind: "enummemberdeclaration", path: './std/range/search_policy.gallop.html', attributes: []},
{name: 'std.range.SearchPolicy.gallopBackwards', kind: "enummemberdeclaration", path: './std/range/search_policy.gallop_backwards.html', attributes: []},
{name: 'std.range.SearchPolicy.linear', kind: "enummemberdeclaration", path: './std/range/search_policy.linear.html', attributes: []},
{name: 'std.range.SearchPolicy.trot', kind: "enummemberdeclaration", path: './std/range/search_policy.trot.html', attributes: []},
{name: 'std.range.SearchPolicy.trotBackwards', kind: "enummemberdeclaration", path: './std/range/search_policy.trot_backwards.html', attributes: []},
{name: 'std.range.Sequence', kind: "structdeclaration", path: './std/range/sequence.html', attributes: []},
{name: 'std.range.sequence', kind: "functiondeclaration", path: './std/range/sequence.html', attributes: ["auto"]},
{name: 'std.range.SortedRange', kind: "structdeclaration", path: './std/range/sorted_range.html', attributes: []},
{name: 'std.range.SortedRange.contains', kind: "templatedeclaration", path: './std/range/sorted_range.contains.html', attributes: []},
{name: 'std.range.SortedRange.contains.contains', kind: "functiondeclaration", path: './std/range/sorted_range.contains.contains.html', attributes: []},
{name: 'std.range.SortedRange.empty', kind: "functiondeclaration", path: './std/range/sorted_range.empty.html', attributes: ["property"]},
{name: 'std.range.SortedRange.equalRange', kind: "templatedeclaration", path: './std/range/sorted_range.equal_range.html', attributes: []},
{name: 'std.range.SortedRange.equalRange.equalRange', kind: "functiondeclaration", path: './std/range/sorted_range.equal_range.equal_range.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.front', kind: "functiondeclaration", path: './std/range/sorted_range.front.html', attributes: ["property", "auto"]},
{name: 'std.range.SortedRange.groupBy', kind: "templatedeclaration", path: './std/range/sorted_range.group_by.html', attributes: []},
{name: 'std.range.SortedRange.groupBy.groupBy', kind: "functiondeclaration", path: './std/range/sorted_range.group_by.group_by.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.lowerBound', kind: "templatedeclaration", path: './std/range/sorted_range.lower_bound.html', attributes: []},
{name: 'std.range.SortedRange.lowerBound.lowerBound', kind: "functiondeclaration", path: './std/range/sorted_range.lower_bound.lower_bound.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.popFront', kind: "functiondeclaration", path: './std/range/sorted_range.pop_front.html', attributes: []},
{name: 'std.range.SortedRange.release', kind: "functiondeclaration", path: './std/range/sorted_range.release.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.trisect', kind: "templatedeclaration", path: './std/range/sorted_range.trisect.html', attributes: []},
{name: 'std.range.SortedRange.trisect.trisect', kind: "functiondeclaration", path: './std/range/sorted_range.trisect.trisect.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.upperBound', kind: "templatedeclaration", path: './std/range/sorted_range.upper_bound.html', attributes: []},
{name: 'std.range.SortedRange.upperBound.upperBound', kind: "functiondeclaration", path: './std/range/sorted_range.upper_bound.upper_bound.html', attributes: ["auto"]},
{name: 'std.range.StoppingPolicy', kind: "enumdeclaration", path: './std/range/stopping_policy.html', attributes: []},
{name: 'std.range.StoppingPolicy.longest', kind: "enummemberdeclaration", path: './std/range/stopping_policy.longest.html', attributes: []},
{name: 'std.range.StoppingPolicy.requireSameLength', kind: "enummemberdeclaration", path: './std/range/stopping_policy.require_same_length.html', attributes: []},
{name: 'std.range.StoppingPolicy.shortest', kind: "enummemberdeclaration", path: './std/range/stopping_policy.shortest.html', attributes: []},
{name: 'std.range.stride', kind: "functiondeclaration", path: './std/range/stride.html', attributes: ["auto"]},
{name: 'std.range.take', kind: "functiondeclaration", path: './std/range/take.html', attributes: []},
{name: 'std.range.Take', kind: "structdeclaration", path: './std/range/take.html', attributes: []},
{name: 'std.range.takeExactly', kind: "functiondeclaration", path: './std/range/take_exactly.html', attributes: ["auto"]},
{name: 'std.range.takeNone', kind: "functiondeclaration", path: './std/range/take_none.html', attributes: ["auto"]},
{name: 'std.range.takeOne', kind: "functiondeclaration", path: './std/range/take_one.html', attributes: ["auto"]},
{name: 'std.range.tee', kind: "functiondeclaration", path: './std/range/tee.html', attributes: ["auto"]},
{name: 'std.range.transposed', kind: "functiondeclaration", path: './std/range/transposed.html', attributes: []},
{name: 'std.range.Transversal', kind: "structdeclaration", path: './std/range/transversal.html', attributes: []},
{name: 'std.range.Transversal.front', kind: "functiondeclaration", path: './std/range/transversal.front.html', attributes: ["property", "auto"]},
{name: 'std.range.Transversal.popFront', kind: "functiondeclaration", path: './std/range/transversal.pop_front.html', attributes: []},
{name: 'std.range.Transversal.this', kind: "functiondeclaration", path: './std/range/transversal.this.html', attributes: []},
{name: 'std.range.transversal', kind: "functiondeclaration", path: './std/range/transversal.html', attributes: []},
{name: 'std.range.TransverseOptions', kind: "enumdeclaration", path: './std/range/transverse_options.html', attributes: []},
{name: 'std.range.TransverseOptions.assumeJagged', kind: "enummemberdeclaration", path: './std/range/transverse_options.assume_jagged.html', attributes: []},
{name: 'std.range.TransverseOptions.assumeNotJagged', kind: "enummemberdeclaration", path: './std/range/transverse_options.assume_not_jagged.html', attributes: []},
{name: 'std.range.TransverseOptions.enforceNotJagged', kind: "enummemberdeclaration", path: './std/range/transverse_options.enforce_not_jagged.html', attributes: []},
{name: 'std.range.zip', kind: "functiondeclaration", path: './std/range/zip.html', attributes: ["auto"]},
{name: 'std.range.Zip', kind: "structdeclaration", path: './std/range/zip.html', attributes: []},
{name: 'std.range.Zip.front', kind: "functiondeclaration", path: './std/range/zip.front.html', attributes: ["property"]},
{name: 'std.range.Zip.popFront', kind: "functiondeclaration", path: './std/range/zip.pop_front.html', attributes: []},
{name: 'std.range.Zip.this', kind: "functiondeclaration", path: './std/range/zip.this.html', attributes: []},
{name: 'std.regex', kind: "module", path: './std/regex.html', attributes: []},
{name: 'std.regex.bmatch', kind: "functiondeclaration", path: './std/regex/bmatch.html', attributes: ["auto"]},
{name: 'std.regex.Captures', kind: "structdeclaration", path: './std/regex/captures.html', attributes: []},
{name: 'std.regex.Captures.back', kind: "functiondeclaration", path: './std/regex/captures.back.html', attributes: ["property"]},
{name: 'std.regex.Captures.captures', kind: "functiondeclaration", path: './std/regex/captures.captures.html', attributes: ["property"]},
{name: 'std.regex.Captures.empty', kind: "functiondeclaration", path: './std/regex/captures.empty.html', attributes: ["const", "property"]},
{name: 'std.regex.Captures.front', kind: "functiondeclaration", path: './std/regex/captures.front.html', attributes: ["property"]},
{name: 'std.regex.Captures.hit', kind: "functiondeclaration", path: './std/regex/captures.hit.html', attributes: ["property"]},
{name: 'std.regex.Captures.length', kind: "functiondeclaration", path: './std/regex/captures.length.html', attributes: ["const", "property"]},
{name: 'std.regex.Captures.opCast', kind: "templatedeclaration", path: './std/regex/captures.op_cast.html', attributes: []},
{name: 'std.regex.Captures.opCast.opCast', kind: "functiondeclaration", path: './std/regex/captures.op_cast.op_cast.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.regex.Captures.opIndex', kind: "templatedeclaration", path: './std/regex/captures.op_index.html', attributes: []},
{name: 'std.regex.Captures.opIndex.opIndex', kind: "functiondeclaration", path: './std/regex/captures.op_index.op_index.html', attributes: []},
{name: 'std.regex.Captures.popBack', kind: "functiondeclaration", path: './std/regex/captures.pop_back.html', attributes: []},
{name: 'std.regex.Captures.popFront', kind: "functiondeclaration", path: './std/regex/captures.pop_front.html', attributes: []},
{name: 'std.regex.Captures.post', kind: "functiondeclaration", path: './std/regex/captures.post.html', attributes: ["property"]},
{name: 'std.regex.Captures.pre', kind: "functiondeclaration", path: './std/regex/captures.pre.html', attributes: ["property"]},
{name: 'std.regex.ctRegex', kind: "enummemberdeclaration", path: './std/regex/ct_regex.html', attributes: []},
{name: 'std.regex.match', kind: "functiondeclaration", path: './std/regex/match.html', attributes: ["auto"]},
{name: 'std.regex.matchAll', kind: "functiondeclaration", path: './std/regex/match_all.html', attributes: ["auto"]},
{name: 'std.regex.matchFirst', kind: "functiondeclaration", path: './std/regex/match_first.html', attributes: ["auto"]},
{name: 'std.regex.Regex', kind: "aliasdeclaration", path: './std/regex/regex.html', attributes: []},
{name: 'std.regex.regex', kind: "functiondeclaration", path: './std/regex/regex.html', attributes: ["trusted", "auto"]},
{name: 'std.regex.RegexException', kind: "aliasdeclaration", path: './std/regex/regex_exception.html', attributes: []},
{name: 'std.regex.RegexMatch', kind: "structdeclaration", path: './std/regex/regex_match.html', attributes: []},
{name: 'std.regex.RegexMatch.captures', kind: "functiondeclaration", path: './std/regex/regex_match.captures.html', attributes: ["property", "auto"]},
{name: 'std.regex.RegexMatch.empty', kind: "functiondeclaration", path: './std/regex/regex_match.empty.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.front', kind: "functiondeclaration", path: './std/regex/regex_match.front.html', attributes: ["property", "auto"]},
{name: 'std.regex.RegexMatch.hit', kind: "functiondeclaration", path: './std/regex/regex_match.hit.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.opCast', kind: "templatedeclaration", path: './std/regex/regex_match.op_cast.html', attributes: []},
{name: 'std.regex.RegexMatch.opCast.opCast', kind: "functiondeclaration", path: './std/regex/regex_match.op_cast.op_cast.html', attributes: []},
{name: 'std.regex.RegexMatch.popFront', kind: "functiondeclaration", path: './std/regex/regex_match.pop_front.html', attributes: []},
{name: 'std.regex.RegexMatch.post', kind: "functiondeclaration", path: './std/regex/regex_match.post.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.pre', kind: "functiondeclaration", path: './std/regex/regex_match.pre.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.save', kind: "functiondeclaration", path: './std/regex/regex_match.save.html', attributes: ["auto"]},
{name: 'std.regex.replace', kind: "functiondeclaration", path: './std/regex/replace.html', attributes: []},
{name: 'std.regex.replaceAll', kind: "functiondeclaration", path: './std/regex/replace_all.html', attributes: ["trusted"]},
{name: 'std.regex.replaceAllInto', kind: "functiondeclaration", path: './std/regex/replace_all_into.html', attributes: ["trusted"]},
{name: 'std.regex.replaceFirst', kind: "functiondeclaration", path: './std/regex/replace_first.html', attributes: []},
{name: 'std.regex.replaceFirstInto', kind: "functiondeclaration", path: './std/regex/replace_first_into.html', attributes: ["trusted"]},
{name: 'std.regex.split', kind: "functiondeclaration", path: './std/regex/split.html', attributes: ["trusted"]},
{name: 'std.regex.Splitter', kind: "structdeclaration", path: './std/regex/splitter.html', attributes: []},
{name: 'std.regex.Splitter.empty', kind: "functiondeclaration", path: './std/regex/splitter.empty.html', attributes: ["property"]},
{name: 'std.regex.Splitter.front', kind: "functiondeclaration", path: './std/regex/splitter.front.html', attributes: ["property"]},
{name: 'std.regex.Splitter.popFront', kind: "functiondeclaration", path: './std/regex/splitter.pop_front.html', attributes: []},
{name: 'std.regex.Splitter.save', kind: "functiondeclaration", path: './std/regex/splitter.save.html', attributes: ["property", "auto"]},
{name: 'std.regex.splitter', kind: "functiondeclaration", path: './std/regex/splitter.html', attributes: []},
{name: 'std.regex.StaticRegex', kind: "aliasdeclaration", path: './std/regex/static_regex.html', attributes: []},
{name: 'std.signals', kind: "module", path: './std/signals.html', attributes: []},
{name: 'std.signals.Signal', kind: "templatedeclaration", path: './std/signals/signal.html', attributes: []},
{name: 'std.signals.Signal.connect', kind: "functiondeclaration", path: './std/signals/signal.connect.html', attributes: ["final"]},
{name: 'std.signals.Signal.disconnect', kind: "functiondeclaration", path: './std/signals/signal.disconnect.html', attributes: ["final"]},
{name: 'std.signals.Signal.emit', kind: "functiondeclaration", path: './std/signals/signal.emit.html', attributes: ["final"]},
{name: 'std.signals.Signal.slot_t', kind: "aliasdeclaration", path: './std/signals/signal.slot_t.html', attributes: []},
{name: 'std.socket', kind: "module", path: './std/socket.html', attributes: []},
{name: 'std.socket.Address', kind: "classdeclaration", path: './std/socket/address.html', attributes: []},
{name: 'std.socket.Address.addressFamily', kind: "functiondeclaration", path: './std/socket/address.address_family.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Address.name', kind: "functiondeclaration", path: './std/socket/address.name.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "abstract"]},
{name: 'std.socket.Address.nameLen', kind: "functiondeclaration", path: './std/socket/address.name_len.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const", "abstract"]},
{name: 'std.socket.Address.toAddrString', kind: "functiondeclaration", path: './std/socket/address.to_addr_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toHostNameString', kind: "functiondeclaration", path: './std/socket/address.to_host_name_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toPortString', kind: "functiondeclaration", path: './std/socket/address.to_port_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toServiceNameString', kind: "functiondeclaration", path: './std/socket/address.to_service_name_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toString', kind: "functiondeclaration", path: './std/socket/address.to_string.html', attributes: ["safe", "const", "override"]},
{name: 'std.socket.AddressException', kind: "classdeclaration", path: './std/socket/address_exception.html', attributes: []},
{name: 'std.socket.AddressException.this', kind: "functiondeclaration", path: './std/socket/address_exception.this.html', attributes: ["safe"]},
{name: 'std.socket.SocketOSException.errorCode', kind: "variabledeclaration", path: './std/socket/socket_os_exception.error_code.html', attributes: []},
{name: 'std.socket.AddressFamily', kind: "enumdeclaration", path: './std/socket/address_family.html', attributes: []},
{name: 'std.socket.AddressFamily.APPLETALK', kind: "enummemberdeclaration", path: './std/socket/address_family.appletalk.html', attributes: []},
{name: 'std.socket.AddressFamily.INET', kind: "enummemberdeclaration", path: './std/socket/address_family.inet.html', attributes: []},
{name: 'std.socket.AddressFamily.INET6', kind: "enummemberdeclaration", path: './std/socket/address_family.ine_t6.html', attributes: []},
{name: 'std.socket.AddressFamily.IPX', kind: "enummemberdeclaration", path: './std/socket/address_family.ipx.html', attributes: []},
{name: 'std.socket.AddressFamily.UNIX', kind: "enummemberdeclaration", path: './std/socket/address_family.unix.html', attributes: []},
{name: 'std.socket.AddressFamily.UNSPEC', kind: "enummemberdeclaration", path: './std/socket/address_family.unspec.html', attributes: []},
{name: 'std.socket.AddressInfo', kind: "structdeclaration", path: './std/socket/address_info.html', attributes: []},
{name: 'std.socket.AddressInfo.address', kind: "variabledeclaration", path: './std/socket/address_info.address.html', attributes: []},
{name: 'std.socket.AddressInfo.canonicalName', kind: "variabledeclaration", path: './std/socket/address_info.canonical_name.html', attributes: []},
{name: 'std.socket.AddressInfo.family', kind: "variabledeclaration", path: './std/socket/address_info.family.html', attributes: []},
{name: 'std.socket.AddressInfo.protocol', kind: "variabledeclaration", path: './std/socket/address_info.protocol.html', attributes: []},
{name: 'std.socket.AddressInfo.type', kind: "variabledeclaration", path: './std/socket/address_info.type.html', attributes: []},
{name: 'std.socket.AddressInfoFlags', kind: "enumdeclaration", path: './std/socket/address_info_flags.html', attributes: []},
{name: 'std.socket.AddressInfoFlags.CANONNAME', kind: "enummemberdeclaration", path: './std/socket/address_info_flags.canonname.html', attributes: []},
{name: 'std.socket.AddressInfoFlags.NUMERICHOST', kind: "enummemberdeclaration", path: './std/socket/address_info_flags.numerichost.html', attributes: []},
{name: 'std.socket.AddressInfoFlags.PASSIVE', kind: "enummemberdeclaration", path: './std/socket/address_info_flags.passive.html', attributes: []},
{name: 'std.socket.getAddress', kind: "functiondeclaration", path: './std/socket/get_address.html', attributes: ["safe"]},
{name: 'std.socket.getAddressInfo', kind: "functiondeclaration", path: './std/socket/get_address_info.html', attributes: ["trusted"]},
{name: 'std.socket.HostException', kind: "classdeclaration", path: './std/socket/host_exception.html', attributes: []},
{name: 'std.socket.HostException.this', kind: "functiondeclaration", path: './std/socket/host_exception.this.html', attributes: ["safe"]},
{name: 'std.socket.Internet6Address', kind: "classdeclaration", path: './std/socket/internet6_address.html', attributes: []},
{name: 'std.socket.Internet6Address.addr', kind: "functiondeclaration", path: './std/socket/internet6_address.addr.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Internet6Address.ADDR_ANY', kind: "functiondeclaration", path: './std/socket/internet6_address.add_r_any.html', attributes: ["pure", "nothrow", "ref", "property", "nogc", "safe", "static"]},
{name: 'std.socket.Internet6Address.parse', kind: "functiondeclaration", path: './std/socket/internet6_address.parse.html', attributes: ["trusted", "static"]},
{name: 'std.socket.Internet6Address.port', kind: "functiondeclaration", path: './std/socket/internet6_address.port.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Internet6Address.PORT_ANY', kind: "enummemberdeclaration", path: './std/socket/internet6_address.por_t_any.html', attributes: []},
{name: 'std.socket.Internet6Address.this', kind: "functiondeclaration", path: './std/socket/internet6_address.this.html', attributes: ["trusted"]},
{name: 'std.socket.InternetAddress', kind: "classdeclaration", path: './std/socket/internet_address.html', attributes: []},
{name: 'std.socket.InternetAddress.addr', kind: "functiondeclaration", path: './std/socket/internet_address.addr.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.InternetAddress.addrToString', kind: "functiondeclaration", path: './std/socket/internet_address.addr_to_string.html', attributes: ["nothrow", "trusted", "static"]},
{name: 'std.socket.InternetAddress.ADDR_ANY', kind: "enummemberdeclaration", path: './std/socket/internet_address.add_r_any.html', attributes: []},
{name: 'std.socket.InternetAddress.ADDR_NONE', kind: "enummemberdeclaration", path: './std/socket/internet_address.add_r_none.html', attributes: []},
{name: 'std.socket.InternetAddress.opEquals', kind: "functiondeclaration", path: './std/socket/internet_address.op_equals.html', attributes: ["safe", "const", "override"]},
{name: 'std.socket.InternetAddress.parse', kind: "functiondeclaration", path: './std/socket/internet_address.parse.html', attributes: ["nothrow", "trusted", "static"]},
{name: 'std.socket.InternetAddress.port', kind: "functiondeclaration", path: './std/socket/internet_address.port.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.InternetAddress.PORT_ANY', kind: "enummemberdeclaration", path: './std/socket/internet_address.por_t_any.html', attributes: []},
{name: 'std.socket.InternetAddress.this', kind: "functiondeclaration", path: './std/socket/internet_address.this.html', attributes: ["safe"]},
{name: 'std.socket.InternetAddress.toAddrString', kind: "functiondeclaration", path: './std/socket/internet_address.to_addr_string.html', attributes: ["trusted", "const", "override"]},
{name: 'std.socket.InternetAddress.toHostNameString', kind: "functiondeclaration", path: './std/socket/internet_address.to_host_name_string.html', attributes: ["safe", "const", "override"]},
{name: 'std.socket.InternetAddress.toPortString', kind: "functiondeclaration", path: './std/socket/internet_address.to_port_string.html', attributes: ["safe", "const", "override"]},
{name: 'std.socket.InternetHost', kind: "classdeclaration", path: './std/socket/internet_host.html', attributes: []},
{name: 'std.socket.InternetHost.addrList', kind: "variabledeclaration", path: './std/socket/internet_host.addr_list.html', attributes: []},
{name: 'std.socket.InternetHost.aliases', kind: "variabledeclaration", path: './std/socket/internet_host.aliases.html', attributes: []},
{name: 'std.socket.InternetHost.getHostByAddr', kind: "functiondeclaration", path: './std/socket/internet_host.get_host_by_addr.html', attributes: ["trusted"]},
{name: 'std.socket.InternetHost.getHostByName', kind: "functiondeclaration", path: './std/socket/internet_host.get_host_by_name.html', attributes: ["trusted"]},
{name: 'std.socket.InternetHost.name', kind: "variabledeclaration", path: './std/socket/internet_host.name.html', attributes: []},
{name: 'std.socket.lastSocketError', kind: "functiondeclaration", path: './std/socket/last_socket_error.html', attributes: ["property", "safe"]},
{name: 'std.socket.Linger', kind: "structdeclaration", path: './std/socket/linger.html', attributes: []},
{name: 'std.socket.Linger.on', kind: "variabledeclaration", path: './std/socket/linger.on.html', attributes: []},
{name: 'std.socket.Linger.time', kind: "variabledeclaration", path: './std/socket/linger.time.html', attributes: []},
{name: 'std.socket.parseAddress', kind: "functiondeclaration", path: './std/socket/parse_address.html', attributes: ["safe"]},
{name: 'std.socket.Protocol', kind: "classdeclaration", path: './std/socket/protocol.html', attributes: []},
{name: 'std.socket.Protocol.aliases', kind: "variabledeclaration", path: './std/socket/protocol.aliases.html', attributes: []},
{name: 'std.socket.Protocol.getProtocolByName', kind: "functiondeclaration", path: './std/socket/protocol.get_protocol_by_name.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Protocol.getProtocolByType', kind: "functiondeclaration", path: './std/socket/protocol.get_protocol_by_type.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Protocol.name', kind: "variabledeclaration", path: './std/socket/protocol.name.html', attributes: []},
{name: 'std.socket.Protocol.type', kind: "variabledeclaration", path: './std/socket/protocol.type.html', attributes: []},
{name: 'std.socket.ProtocolType', kind: "enumdeclaration", path: './std/socket/protocol_type.html', attributes: []},
{name: 'std.socket.ProtocolType.GGP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.ggp.html', attributes: []},
{name: 'std.socket.ProtocolType.ICMP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.icmp.html', attributes: []},
{name: 'std.socket.ProtocolType.IDP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.idp.html', attributes: []},
{name: 'std.socket.ProtocolType.IGMP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.igmp.html', attributes: []},
{name: 'std.socket.ProtocolType.IP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.ip.html', attributes: []},
{name: 'std.socket.ProtocolType.IPV6', kind: "enummemberdeclaration", path: './std/socket/protocol_type.ip_v6.html', attributes: []},
{name: 'std.socket.ProtocolType.PUP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.pup.html', attributes: []},
{name: 'std.socket.ProtocolType.RAW', kind: "enummemberdeclaration", path: './std/socket/protocol_type.raw.html', attributes: []},
{name: 'std.socket.ProtocolType.TCP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.tcp.html', attributes: []},
{name: 'std.socket.ProtocolType.UDP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.udp.html', attributes: []},
{name: 'std.socket.Service', kind: "classdeclaration", path: './std/socket/service.html', attributes: []},
{name: 'std.socket.Service.aliases', kind: "variabledeclaration", path: './std/socket/service.aliases.html', attributes: []},
{name: 'std.socket.Service.getServiceByName', kind: "functiondeclaration", path: './std/socket/service.get_service_by_name.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Service.getServiceByPort', kind: "functiondeclaration", path: './std/socket/service.get_service_by_port.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Service.name', kind: "variabledeclaration", path: './std/socket/service.name.html', attributes: []},
{name: 'std.socket.Service.port', kind: "variabledeclaration", path: './std/socket/service.port.html', attributes: []},
{name: 'std.socket.Service.protocolName', kind: "variabledeclaration", path: './std/socket/service.protocol_name.html', attributes: []},
{name: 'std.socket.Socket', kind: "classdeclaration", path: './std/socket/socket.html', attributes: []},
{name: 'std.socket.Socket.accept', kind: "functiondeclaration", path: './std/socket/socket.accept.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.addressFamily', kind: "functiondeclaration", path: './std/socket/socket.address_family.html', attributes: ["property", "safe"]},
{name: 'std.socket.Socket.bind', kind: "functiondeclaration", path: './std/socket/socket.bind.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.blocking', kind: "functiondeclaration", path: './std/socket/socket.blocking.html', attributes: ["nothrow", "property", "nogc", "trusted", "const"]},
{name: 'std.socket.Socket.close', kind: "functiondeclaration", path: './std/socket/socket.close.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.socket.Socket.connect', kind: "functiondeclaration", path: './std/socket/socket.connect.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.ERROR', kind: "enummemberdeclaration", path: './std/socket/socket.error.html', attributes: []},
{name: 'std.socket.Socket.getErrorText', kind: "functiondeclaration", path: './std/socket/socket.get_error_text.html', attributes: ["safe"]},
{name: 'std.socket.Socket.getOption', kind: "functiondeclaration", path: './std/socket/socket.get_option.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.handle', kind: "functiondeclaration", path: './std/socket/socket.handle.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Socket.hostName', kind: "functiondeclaration", path: './std/socket/socket.host_name.html', attributes: ["property", "trusted", "static"]},
{name: 'std.socket.Socket.isAlive', kind: "functiondeclaration", path: './std/socket/socket.is_alive.html', attributes: ["property", "trusted", "const"]},
{name: 'std.socket.Socket.listen', kind: "functiondeclaration", path: './std/socket/socket.listen.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.localAddress', kind: "functiondeclaration", path: './std/socket/socket.local_address.html', attributes: ["property", "trusted"]},
{name: 'std.socket.Socket.receive', kind: "functiondeclaration", path: './std/socket/socket.receive.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.receiveFrom', kind: "functiondeclaration", path: './std/socket/socket.receive_from.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.remoteAddress', kind: "functiondeclaration", path: './std/socket/socket.remote_address.html', attributes: ["property", "trusted"]},
{name: 'std.socket.Socket.select', kind: "functiondeclaration", path: './std/socket/socket.select.html', attributes: ["trusted", "static"]},
{name: 'std.socket.Socket.send', kind: "functiondeclaration", path: './std/socket/socket.send.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.sendTo', kind: "functiondeclaration", path: './std/socket/socket.send_to.html', attributes: ["safe"]},
{name: 'std.socket.Socket.setKeepAlive', kind: "functiondeclaration", path: './std/socket/socket.set_keep_alive.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.setOption', kind: "functiondeclaration", path: './std/socket/socket.set_option.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.shutdown', kind: "functiondeclaration", path: './std/socket/socket.shutdown.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.socket.Socket.this', kind: "functiondeclaration", path: './std/socket/socket.this.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.accepting', kind: "functiondeclaration", path: './std/socket/socket.accepting.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.Socket.createAddress', kind: "functiondeclaration", path: './std/socket/socket.create_address.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketAcceptException', kind: "classdeclaration", path: './std/socket/socket_accept_exception.html', attributes: []},
{name: 'std.socket.SocketAcceptException.this', kind: "functiondeclaration", path: './std/socket/socket_accept_exception.this.html', attributes: ["safe"]},
{name: 'std.socket.SocketException', kind: "classdeclaration", path: './std/socket/socket_exception.html', attributes: []},
{name: 'std.socket.SocketException.this', kind: "functiondeclaration", path: './std/socket/socket_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketFeatureException', kind: "classdeclaration", path: './std/socket/socket_feature_exception.html', attributes: []},
{name: 'std.socket.SocketFeatureException.this', kind: "functiondeclaration", path: './std/socket/socket_feature_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketFlags', kind: "enumdeclaration", path: './std/socket/socket_flags.html', attributes: []},
{name: 'std.socket.SocketFlags.DONTROUTE', kind: "enummemberdeclaration", path: './std/socket/socket_flags.dontroute.html', attributes: []},
{name: 'std.socket.SocketFlags.NONE', kind: "enummemberdeclaration", path: './std/socket/socket_flags.none.html', attributes: []},
{name: 'std.socket.SocketFlags.OOB', kind: "enummemberdeclaration", path: './std/socket/socket_flags.oob.html', attributes: []},
{name: 'std.socket.SocketFlags.PEEK', kind: "enummemberdeclaration", path: './std/socket/socket_flags.peek.html', attributes: []},
{name: 'std.socket.SocketOption', kind: "enumdeclaration", path: './std/socket/socket_option.html', attributes: []},
{name: 'std.socket.SocketOption.ACCEPTCONN', kind: "enummemberdeclaration", path: './std/socket/socket_option.acceptconn.html', attributes: []},
{name: 'std.socket.SocketOption.BROADCAST', kind: "enummemberdeclaration", path: './std/socket/socket_option.broadcast.html', attributes: []},
{name: 'std.socket.SocketOption.DEBUG', kind: "enummemberdeclaration", path: './std/socket/socket_option.debug.html', attributes: []},
{name: 'std.socket.SocketOption.DONTROUTE', kind: "enummemberdeclaration", path: './std/socket/socket_option.dontroute.html', attributes: []},
{name: 'std.socket.SocketOption.ERROR', kind: "enummemberdeclaration", path: './std/socket/socket_option.error.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_JOIN_GROUP', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__joi_n_group.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_LEAVE_GROUP', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__leav_e_group.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_MULTICAST_HOPS', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__multicas_t_hops.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_MULTICAST_IF', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__multicas_t_if.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_MULTICAST_LOOP', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__multicas_t_loop.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_UNICAST_HOPS', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__unicas_t_hops.html', attributes: []},
{name: 'std.socket.SocketOption.IPV6_V6ONLY', kind: "enummemberdeclaration", path: './std/socket/socket_option.ip_v6__v6only.html', attributes: []},
{name: 'std.socket.SocketOption.KEEPALIVE', kind: "enummemberdeclaration", path: './std/socket/socket_option.keepalive.html', attributes: []},
{name: 'std.socket.SocketOption.LINGER', kind: "enummemberdeclaration", path: './std/socket/socket_option.linger.html', attributes: []},
{name: 'std.socket.SocketOption.OOBINLINE', kind: "enummemberdeclaration", path: './std/socket/socket_option.oobinline.html', attributes: []},
{name: 'std.socket.SocketOption.RCVBUF', kind: "enummemberdeclaration", path: './std/socket/socket_option.rcvbuf.html', attributes: []},
{name: 'std.socket.SocketOption.RCVLOWAT', kind: "enummemberdeclaration", path: './std/socket/socket_option.rcvlowat.html', attributes: []},
{name: 'std.socket.SocketOption.RCVTIMEO', kind: "enummemberdeclaration", path: './std/socket/socket_option.rcvtimeo.html', attributes: []},
{name: 'std.socket.SocketOption.REUSEADDR', kind: "enummemberdeclaration", path: './std/socket/socket_option.reuseaddr.html', attributes: []},
{name: 'std.socket.SocketOption.SNDBUF', kind: "enummemberdeclaration", path: './std/socket/socket_option.sndbuf.html', attributes: []},
{name: 'std.socket.SocketOption.SNDLOWAT', kind: "enummemberdeclaration", path: './std/socket/socket_option.sndlowat.html', attributes: []},
{name: 'std.socket.SocketOption.SNDTIMEO', kind: "enummemberdeclaration", path: './std/socket/socket_option.sndtimeo.html', attributes: []},
{name: 'std.socket.SocketOption.TCP_NODELAY', kind: "enummemberdeclaration", path: './std/socket/socket_option.tc_p_nodelay.html', attributes: []},
{name: 'std.socket.SocketOption.TYPE', kind: "enummemberdeclaration", path: './std/socket/socket_option.type.html', attributes: []},
{name: 'std.socket.SocketOptionLevel', kind: "enumdeclaration", path: './std/socket/socket_option_level.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.GGP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.ggp.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.ICMP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.icmp.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.IDP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.idp.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.IGMP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.igmp.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.IP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.ip.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.IPV6', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.ip_v6.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.PUP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.pup.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.RAW', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.raw.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.SOCKET', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.socket.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.TCP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.tcp.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.UDP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.udp.html', attributes: []},
{name: 'std.socket.SocketOSException', kind: "classdeclaration", path: './std/socket/socket_os_exception.html', attributes: []},
{name: 'std.socket.SocketOSException.this', kind: "functiondeclaration", path: './std/socket/socket_os_exception.this.html', attributes: ["safe"]},
{name: 'std.socket.socketPair', kind: "functiondeclaration", path: './std/socket/socket_pair.html', attributes: ["trusted"]},
{name: 'std.socket.SocketParameterException', kind: "classdeclaration", path: './std/socket/socket_parameter_exception.html', attributes: []},
{name: 'std.socket.SocketParameterException.this', kind: "functiondeclaration", path: './std/socket/socket_parameter_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketSet', kind: "classdeclaration", path: './std/socket/socket_set.html', attributes: []},
{name: 'std.socket.SocketSet.add', kind: "functiondeclaration", path: './std/socket/socket_set.add.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketSet.isSet', kind: "functiondeclaration", path: './std/socket/socket_set.is_set.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.socket.SocketSet.max', kind: "functiondeclaration", path: './std/socket/socket_set.max.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.SocketSet.remove', kind: "functiondeclaration", path: './std/socket/socket_set.remove.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketSet.reset', kind: "functiondeclaration", path: './std/socket/socket_set.reset.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.socket.SocketSet.this', kind: "functiondeclaration", path: './std/socket/socket_set.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketShutdown', kind: "enumdeclaration", path: './std/socket/socket_shutdown.html', attributes: []},
{name: 'std.socket.SocketShutdown.BOTH', kind: "enummemberdeclaration", path: './std/socket/socket_shutdown.both.html', attributes: []},
{name: 'std.socket.SocketShutdown.RECEIVE', kind: "enummemberdeclaration", path: './std/socket/socket_shutdown.receive.html', attributes: []},
{name: 'std.socket.SocketShutdown.SEND', kind: "enummemberdeclaration", path: './std/socket/socket_shutdown.send.html', attributes: []},
{name: 'std.socket.SocketType', kind: "enumdeclaration", path: './std/socket/socket_type.html', attributes: []},
{name: 'std.socket.SocketType.DGRAM', kind: "enummemberdeclaration", path: './std/socket/socket_type.dgram.html', attributes: []},
{name: 'std.socket.SocketType.RAW', kind: "enummemberdeclaration", path: './std/socket/socket_type.raw.html', attributes: []},
{name: 'std.socket.SocketType.RDM', kind: "enummemberdeclaration", path: './std/socket/socket_type.rdm.html', attributes: []},
{name: 'std.socket.SocketType.SEQPACKET', kind: "enummemberdeclaration", path: './std/socket/socket_type.seqpacket.html', attributes: []},
{name: 'std.socket.SocketType.STREAM', kind: "enummemberdeclaration", path: './std/socket/socket_type.stream.html', attributes: []},
{name: 'std.socket.TcpSocket', kind: "classdeclaration", path: './std/socket/tcp_socket.html', attributes: []},
{name: 'std.socket.TcpSocket.this', kind: "functiondeclaration", path: './std/socket/tcp_socket.this.html', attributes: ["safe"]},
{name: 'std.socket.TimeVal', kind: "structdeclaration", path: './std/socket/time_val.html', attributes: []},
{name: 'std.socket.TimeVal.microseconds', kind: "variabledeclaration", path: './std/socket/time_val.microseconds.html', attributes: []},
{name: 'std.socket.TimeVal.seconds', kind: "variabledeclaration", path: './std/socket/time_val.seconds.html', attributes: []},
{name: 'std.socket.UdpSocket', kind: "classdeclaration", path: './std/socket/udp_socket.html', attributes: []},
{name: 'std.socket.UdpSocket.this', kind: "functiondeclaration", path: './std/socket/udp_socket.this.html', attributes: ["safe"]},
{name: 'std.socket.UnixAddress', kind: "classdeclaration", path: './std/socket/unix_address.html', attributes: []},
{name: 'std.socket.UnixAddress.path', kind: "functiondeclaration", path: './std/socket/unix_address.path.html', attributes: ["property", "safe", "const"]},
{name: 'std.socket.UnixAddress.this', kind: "functiondeclaration", path: './std/socket/unix_address.this.html', attributes: ["safe"]},
{name: 'std.socket.UnixAddress.toString', kind: "functiondeclaration", path: './std/socket/unix_address.to_string.html', attributes: ["safe", "const", "override"]},
{name: 'std.socket.UnknownAddress', kind: "classdeclaration", path: './std/socket/unknown_address.html', attributes: []},
{name: 'std.socket.UnknownAddressReference', kind: "classdeclaration", path: './std/socket/unknown_address_reference.html', attributes: []},
{name: 'std.socket.UnknownAddressReference.this', kind: "functiondeclaration", path: './std/socket/unknown_address_reference.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.socket.wouldHaveBlocked', kind: "functiondeclaration", path: './std/socket/would_have_blocked.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.socketstream', kind: "module", path: './std/socketstream.html', attributes: []},
{name: 'std.socketstream.SocketStream', kind: "classdeclaration", path: './std/socketstream/socket_stream.html', attributes: []},
{name: 'std.socketstream.SocketStream.close', kind: "functiondeclaration", path: './std/socketstream/socket_stream.close.html', attributes: ["override"]},
{name: 'std.socketstream.SocketStream.readBlock', kind: "functiondeclaration", path: './std/socketstream/socket_stream.read_block.html', attributes: ["override"]},
{name: 'std.socketstream.SocketStream.seek', kind: "functiondeclaration", path: './std/socketstream/socket_stream.seek.html', attributes: ["override", "disable"]},
{name: 'std.socketstream.SocketStream.socket', kind: "functiondeclaration", path: './std/socketstream/socket_stream.socket.html', attributes: []},
{name: 'std.socketstream.SocketStream.this', kind: "functiondeclaration", path: './std/socketstream/socket_stream.this.html', attributes: []},
{name: 'std.socketstream.SocketStream.toString', kind: "functiondeclaration", path: './std/socketstream/socket_stream.to_string.html', attributes: ["override"]},
{name: 'std.socketstream.SocketStream.writeBlock', kind: "functiondeclaration", path: './std/socketstream/socket_stream.write_block.html', attributes: ["override"]},
{name: 'std.stream.OutputStream.flush', kind: "functiondeclaration", path: './std/stream/output_stream.flush.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.getc', kind: "functiondeclaration", path: './std/stream/input_stream.getc.html', attributes: ["abstract"]},
{name: 'std.stream.InputStream.ungetc', kind: "functiondeclaration", path: './std/stream/input_stream.ungetc.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writeLine', kind: "functiondeclaration", path: './std/stream/output_stream.write_line.html', attributes: ["abstract"]},
{name: 'std.stream.OutputStream.writeLineW', kind: "functiondeclaration", path: './std/stream/output_stream.write_line.html', attributes: ["abstract"]},
{name: 'std.stdint', kind: "module", path: './std/stdint.html', attributes: []},
{name: 'std.stdio', kind: "module", path: './std/stdio.html', attributes: []},
{name: 'std.stdio.chunks', kind: "functiondeclaration", path: './std/stdio/chunks.html', attributes: ["auto"]},
{name: 'std.stdio.File', kind: "structdeclaration", path: './std/stdio/file.html', attributes: []},
{name: 'std.stdio.File.byChunk', kind: "functiondeclaration", path: './std/stdio/file.by_chunk.html', attributes: ["auto"]},
{name: 'std.stdio.File.byLine', kind: "functiondeclaration", path: './std/stdio/file.by_line.html', attributes: ["auto"]},
{name: 'std.stdio.File.byLineCopy', kind: "functiondeclaration", path: './std/stdio/file.by_line_copy.html', attributes: ["auto"]},
{name: 'std.stdio.File.clearerr', kind: "functiondeclaration", path: './std/stdio/file.clearerr.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.stdio.File.close', kind: "functiondeclaration", path: './std/stdio/file.close.html', attributes: ["trusted"]},
{name: 'std.stdio.File.detach', kind: "functiondeclaration", path: './std/stdio/file.detach.html', attributes: ["safe"]},
{name: 'std.stdio.File.eof', kind: "functiondeclaration", path: './std/stdio/file.eof.html', attributes: ["pure", "property", "trusted", "const"]},
{name: 'std.stdio.File.error', kind: "functiondeclaration", path: './std/stdio/file.error.html', attributes: ["pure", "nothrow", "property", "trusted", "const"]},
{name: 'std.stdio.File.fdopen', kind: "functiondeclaration", path: './std/stdio/file.fdopen.html', attributes: ["safe"]},
{name: 'std.stdio.File.fileno', kind: "functiondeclaration", path: './std/stdio/file.fileno.html', attributes: ["property", "trusted", "const"]},
{name: 'std.stdio.File.flush', kind: "functiondeclaration", path: './std/stdio/file.flush.html', attributes: ["trusted"]},
{name: 'std.stdio.File.getFP', kind: "functiondeclaration", path: './std/stdio/file.get_fp.html', attributes: ["pure", "safe"]},
{name: 'std.stdio.File.isOpen', kind: "functiondeclaration", path: './std/stdio/file.is_open.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.stdio.File.lock', kind: "functiondeclaration", path: './std/stdio/file.lock.html', attributes: []},
{name: 'std.stdio.File.lockingTextWriter', kind: "functiondeclaration", path: './std/stdio/file.locking_text_writer.html', attributes: ["safe", "auto"]},
{name: 'std.stdio.File.name', kind: "functiondeclaration", path: './std/stdio/file.name.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.stdio.File.opAssign', kind: "functiondeclaration", path: './std/stdio/file.op_assign.html', attributes: ["safe"]},
{name: 'std.stdio.File.open', kind: "functiondeclaration", path: './std/stdio/file.open.html', attributes: ["safe"]},
{name: 'std.stdio.File.popen', kind: "functiondeclaration", path: './std/stdio/file.popen.html', attributes: ["safe"]},
{name: 'std.stdio.File.rawRead', kind: "functiondeclaration", path: './std/stdio/file.raw_read.html', attributes: []},
{name: 'std.stdio.File.rawWrite', kind: "functiondeclaration", path: './std/stdio/file.raw_write.html', attributes: []},
{name: 'std.stdio.File.readf', kind: "functiondeclaration", path: './std/stdio/file.readf.html', attributes: []},
{name: 'std.stdio.File.readln', kind: "functiondeclaration", path: './std/stdio/file.readln.html', attributes: []},
{name: 'std.stdio.File.rewind', kind: "functiondeclaration", path: './std/stdio/file.rewind.html', attributes: ["safe"]},
{name: 'std.stdio.File.scratchFile', kind: "functiondeclaration", path: './std/stdio/file.scratch_file.html', attributes: ["static"]},
{name: 'std.stdio.File.seek', kind: "functiondeclaration", path: './std/stdio/file.seek.html', attributes: ["trusted"]},
{name: 'std.stdio.File.setvbuf', kind: "functiondeclaration", path: './std/stdio/file.setvbuf.html', attributes: ["trusted"]},
{name: 'std.stdio.File.size', kind: "functiondeclaration", path: './std/stdio/file.size.html', attributes: ["property", "safe"]},
{name: 'std.stdio.File.tell', kind: "functiondeclaration", path: './std/stdio/file.tell.html', attributes: ["property", "trusted", "const"]},
{name: 'std.stdio.File.this', kind: "functiondeclaration", path: './std/stdio/file.this.html', attributes: ["ref", "safe"]},
{name: 'std.stdio.File.tmpfile', kind: "functiondeclaration", path: './std/stdio/file.tmpfile.html', attributes: ["safe", "static"]},
{name: 'std.stdio.File.tryLock', kind: "functiondeclaration", path: './std/stdio/file.try_lock.html', attributes: []},
{name: 'std.stdio.File.unlock', kind: "functiondeclaration", path: './std/stdio/file.unlock.html', attributes: []},
{name: 'std.stdio.File.windowsHandle', kind: "functiondeclaration", path: './std/stdio/file.windows_handle.html', attributes: ["property"]},
{name: 'std.stdio.File.windowsHandleOpen', kind: "functiondeclaration", path: './std/stdio/file.windows_handle_open.html', attributes: []},
{name: 'std.stdio.File.wrapFile', kind: "functiondeclaration", path: './std/stdio/file.wrap_file.html', attributes: ["safe", "static"]},
{name: 'std.stdio.File.write', kind: "functiondeclaration", path: './std/stdio/file.write.html', attributes: []},
{name: 'std.stdio.File.writef', kind: "functiondeclaration", path: './std/stdio/file.writef.html', attributes: []},
{name: 'std.stdio.File.writefln', kind: "functiondeclaration", path: './std/stdio/file.writefln.html', attributes: []},
{name: 'std.stdio.File.writeln', kind: "functiondeclaration", path: './std/stdio/file.writeln.html', attributes: []},
{name: 'std.stdio.isFileHandle', kind: "enummemberdeclaration", path: './std/stdio/is_file_handle.html', attributes: []},
{name: 'std.stdio.isStreamingDevice', kind: "aliasdeclaration", path: './std/stdio/is_streaming_device.html', attributes: ["deprecated"]},
{name: 'std.stdio.KeepTerminator', kind: "aliasdeclaration", path: './std/stdio/keep_terminator.html', attributes: []},
{name: 'std.stdio.lines', kind: "structdeclaration", path: './std/stdio/lines.html', attributes: []},
{name: 'std.stdio.lines.this', kind: "functiondeclaration", path: './std/stdio/lines.this.html', attributes: ["ref"]},
{name: 'std.stdio.LockType', kind: "enumdeclaration", path: './std/stdio/lock_type.html', attributes: []},
{name: 'std.stdio.LockType.read', kind: "enummemberdeclaration", path: './std/stdio/lock_type.read.html', attributes: []},
{name: 'std.stdio.LockType.readWrite', kind: "enummemberdeclaration", path: './std/stdio/lock_type.read_write.html', attributes: []},
{name: 'std.stdio.openNetwork', kind: "functiondeclaration", path: './std/stdio/open_network.html', attributes: []},
{name: 'std.stdio.popen', kind: "functiondeclaration", path: './std/stdio/popen.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.stdio.readf', kind: "functiondeclaration", path: './std/stdio/readf.html', attributes: []},
{name: 'std.stdio.readln', kind: "functiondeclaration", path: './std/stdio/readln.html', attributes: []},
{name: 'std.stdio.stderr', kind: "variabledeclaration", path: './std/stdio/stderr.html', attributes: []},
{name: 'std.stdio.stdin', kind: "variabledeclaration", path: './std/stdio/stdin.html', attributes: []},
{name: 'std.stdio.StdioException', kind: "classdeclaration", path: './std/stdio/stdio_exception.html', attributes: []},
{name: 'std.stdio.StdioException.errno', kind: "variabledeclaration", path: './std/stdio/stdio_exception.errno.html', attributes: []},
{name: 'std.stdio.StdioException.opCall', kind: "functiondeclaration", path: './std/stdio/stdio_exception.op_call.html', attributes: ["static"]},
{name: 'std.stdio.StdioException.this', kind: "functiondeclaration", path: './std/stdio/stdio_exception.this.html', attributes: []},
{name: 'std.stdio.stdout', kind: "variabledeclaration", path: './std/stdio/stdout.html', attributes: []},
{name: 'std.stdio.write', kind: "functiondeclaration", path: './std/stdio/write.html', attributes: []},
{name: 'std.stdio.writef', kind: "functiondeclaration", path: './std/stdio/writef.html', attributes: []},
{name: 'std.stdio.writefln', kind: "functiondeclaration", path: './std/stdio/writefln.html', attributes: []},
{name: 'std.stdio.writeln', kind: "functiondeclaration", path: './std/stdio/writeln.html', attributes: []},
{name: 'std.stdiobase', kind: "module", path: './std/stdiobase.html', attributes: []},
{name: 'std.stream', kind: "module", path: './std/stream.html', attributes: []},
{name: 'std.stream.BOM', kind: "enumdeclaration", path: './std/stream/bom.html', attributes: []},
{name: 'std.stream.BOM.UTF16BE', kind: "enummemberdeclaration", path: './std/stream/bom.ut_f16_be.html', attributes: []},
{name: 'std.stream.BOM.UTF16LE', kind: "enummemberdeclaration", path: './std/stream/bom.ut_f16_le.html', attributes: []},
{name: 'std.stream.BOM.UTF32BE', kind: "enummemberdeclaration", path: './std/stream/bom.ut_f32_be.html', attributes: []},
{name: 'std.stream.BOM.UTF32LE', kind: "enummemberdeclaration", path: './std/stream/bom.ut_f32_le.html', attributes: []},
{name: 'std.stream.BOM.UTF8', kind: "enummemberdeclaration", path: './std/stream/bom.ut_f8.html', attributes: []},
{name: 'std.stream.BufferedFile', kind: "classdeclaration", path: './std/stream/buffered_file.html', attributes: []},
{name: 'std.stream.BufferedFile.create', kind: "functiondeclaration", path: './std/stream/buffered_file.create.html', attributes: []},
{name: 'std.stream.BufferedFile.open', kind: "functiondeclaration", path: './std/stream/buffered_file.open.html', attributes: []},
{name: 'std.stream.BufferedFile.this', kind: "functiondeclaration", path: './std/stream/buffered_file.this.html', attributes: []},
{name: 'std.stream.OutputStream.close', kind: "functiondeclaration", path: './std/stream/output_stream.close.html', attributes: ["abstract"]},
{name: 'std.stream.FilterStream.nestClose', kind: "variabledeclaration", path: './std/stream/filter_stream.nest_close.html', attributes: []},
{name: 'std.stream.Stream.readBlock', kind: "functiondeclaration", path: './std/stream/stream.read_block.html', attributes: ["abstract"]},
{name: 'std.stream.FilterStream.resetSource', kind: "functiondeclaration", path: './std/stream/filter_stream.reset_source.html', attributes: []},
{name: 'std.stream.Stream.seek', kind: "functiondeclaration", path: './std/stream/stream.seek.html', attributes: ["abstract"]},
{name: 'std.stream.FilterStream.source', kind: "functiondeclaration", path: './std/stream/filter_stream.source.html', attributes: ["final"]},
{name: 'std.stream.Stream.writeBlock', kind: "functiondeclaration", path: './std/stream/stream.write_block.html', attributes: ["abstract"]},
{name: 'std.stream.BufferedStream', kind: "classdeclaration", path: './std/stream/buffered_stream.html', attributes: []},
{name: 'std.stream.BufferedStream.this', kind: "functiondeclaration", path: './std/stream/buffered_stream.this.html', attributes: []},
{name: 'std.stream.EndianStream', kind: "classdeclaration", path: './std/stream/endian_stream.html', attributes: []},
{name: 'std.stream.EndianStream.endian', kind: "variabledeclaration", path: './std/stream/endian_stream.endian.html', attributes: []},
{name: 'std.stream.EndianStream.fixBlockBO', kind: "functiondeclaration", path: './std/stream/endian_stream.fix_block_bo.html', attributes: ["final"]},
{name: 'std.stream.EndianStream.fixBO', kind: "functiondeclaration", path: './std/stream/endian_stream.fix_bo.html', attributes: ["final"]},
{name: 'std.stream.EndianStream.readBOM', kind: "functiondeclaration", path: './std/stream/endian_stream.read_bom.html', attributes: []},
{name: 'std.stream.EndianStream.this', kind: "functiondeclaration", path: './std/stream/endian_stream.this.html', attributes: []},
{name: 'std.stream.EndianStream.writeBOM', kind: "functiondeclaration", path: './std/stream/endian_stream.write_bom.html', attributes: []},
{name: 'std.stream.File', kind: "classdeclaration", path: './std/stream/file.html', attributes: []},
{name: 'std.stream.File.available', kind: "functiondeclaration", path: './std/stream/file.available.html', attributes: ["property", "override"]},
{name: 'std.stream.File.close', kind: "functiondeclaration", path: './std/stream/file.close.html', attributes: ["override"]},
{name: 'std.stream.File.create', kind: "functiondeclaration", path: './std/stream/file.create.html', attributes: []},
{name: 'std.stream.File.open', kind: "functiondeclaration", path: './std/stream/file.open.html', attributes: []},
{name: 'std.stream.File.this', kind: "functiondeclaration", path: './std/stream/file.this.html', attributes: []},
{name: 'std.stream.FileMode', kind: "enumdeclaration", path: './std/stream/file_mode.html', attributes: []},
{name: 'std.stream.FileMode.Append', kind: "enummemberdeclaration", path: './std/stream/file_mode.append.html', attributes: []},
{name: 'std.stream.FileMode.In', kind: "enummemberdeclaration", path: './std/stream/file_mode.in.html', attributes: []},
{name: 'std.stream.FileMode.Out', kind: "enummemberdeclaration", path: './std/stream/file_mode.out.html', attributes: []},
{name: 'std.stream.FileMode.OutNew', kind: "enummemberdeclaration", path: './std/stream/file_mode.out_new.html', attributes: []},
{name: 'std.stream.FilterStream', kind: "classdeclaration", path: './std/stream/filter_stream.html', attributes: []},
{name: 'std.stream.FilterStream.this', kind: "functiondeclaration", path: './std/stream/filter_stream.this.html', attributes: []},
{name: 'std.stream.InputStream', kind: "interfacedeclaration", path: './std/stream/input_stream.html', attributes: []},
{name: 'std.stream.MemoryStream', kind: "classdeclaration", path: './std/stream/memory_stream.html', attributes: []},
{name: 'std.stream.MemoryStream.reserve', kind: "functiondeclaration", path: './std/stream/memory_stream.reserve.html', attributes: []},
{name: 'std.stream.MemoryStream.this', kind: "functiondeclaration", path: './std/stream/memory_stream.this.html', attributes: []},
{name: 'std.stream.MmFileStream', kind: "classdeclaration", path: './std/stream/mm_file_stream.html', attributes: []},
{name: 'std.stream.MmFileStream.this', kind: "functiondeclaration", path: './std/stream/mm_file_stream.this.html', attributes: []},
{name: 'std.stream.OpenException', kind: "classdeclaration", path: './std/stream/open_exception.html', attributes: []},
{name: 'std.stream.OpenException.this', kind: "functiondeclaration", path: './std/stream/open_exception.this.html', attributes: []},
{name: 'std.stream.OutputStream', kind: "interfacedeclaration", path: './std/stream/output_stream.html', attributes: []},
{name: 'std.stream.OutputStream.isOpen', kind: "functiondeclaration", path: './std/stream/output_stream.is_open.html', attributes: ["property", "abstract"]},
{name: 'std.stream.ReadException', kind: "classdeclaration", path: './std/stream/read_exception.html', attributes: []},
{name: 'std.stream.ReadException.this', kind: "functiondeclaration", path: './std/stream/read_exception.this.html', attributes: []},
{name: 'std.stream.SeekException', kind: "classdeclaration", path: './std/stream/seek_exception.html', attributes: []},
{name: 'std.stream.SeekException.this', kind: "functiondeclaration", path: './std/stream/seek_exception.this.html', attributes: []},
{name: 'std.stream.SliceStream', kind: "classdeclaration", path: './std/stream/slice_stream.html', attributes: []},
{name: 'std.stream.SliceStream.this', kind: "functiondeclaration", path: './std/stream/slice_stream.this.html', attributes: []},
{name: 'std.stream.Stream', kind: "classdeclaration", path: './std/stream/stream.html', attributes: []},
{name: 'std.stream.StreamException', kind: "classdeclaration", path: './std/stream/stream_exception.html', attributes: []},
{name: 'std.stream.StreamException.this', kind: "functiondeclaration", path: './std/stream/stream_exception.this.html', attributes: []},
{name: 'std.stream.StreamFileException', kind: "classdeclaration", path: './std/stream/stream_file_exception.html', attributes: []},
{name: 'std.stream.StreamFileException.this', kind: "functiondeclaration", path: './std/stream/stream_file_exception.this.html', attributes: []},
{name: 'std.stream.TArrayStream', kind: "classdeclaration", path: './std/stream/t_array_stream.html', attributes: []},
{name: 'std.stream.TArrayStream.data', kind: "functiondeclaration", path: './std/stream/t_array_stream.data.html', attributes: ["property"]},
{name: 'std.stream.TArrayStream.this', kind: "functiondeclaration", path: './std/stream/t_array_stream.this.html', attributes: []},
{name: 'std.stream.WriteException', kind: "classdeclaration", path: './std/stream/write_exception.html', attributes: []},
{name: 'std.stream.WriteException.this', kind: "functiondeclaration", path: './std/stream/write_exception.this.html', attributes: []},
{name: 'std.string', kind: "module", path: './std/string.html', attributes: []},
{name: 'std.string.abbrev', kind: "functiondeclaration", path: './std/string/abbrev.html', attributes: ["pure", "safe"]},
{name: 'std.string.assumeUTF', kind: "functiondeclaration", path: './std/string/assume_utf.html', attributes: ["auto"]},
{name: 'std.string.capitalize', kind: "functiondeclaration", path: './std/string/capitalize.html', attributes: ["pure", "trusted"]},
{name: 'std.string.CaseSensitive', kind: "aliasdeclaration", path: './std/string/case_sensitive.html', attributes: []},
{name: 'std.string.center', kind: "functiondeclaration", path: './std/string/center.html', attributes: ["pure", "trusted"]},
{name: 'std.string.chomp', kind: "functiondeclaration", path: './std/string/chomp.html', attributes: []},
{name: 'std.string.chompPrefix', kind: "functiondeclaration", path: './std/string/chomp_prefix.html', attributes: ["pure", "safe"]},
{name: 'std.string.chop', kind: "functiondeclaration", path: './std/string/chop.html', attributes: ["pure", "safe"]},
{name: 'std.string.column', kind: "functiondeclaration", path: './std/string/column.html', attributes: []},
{name: 'std.string.countchars', kind: "functiondeclaration", path: './std/string/countchars.html', attributes: ["pure", "nogc", "safe"]},
{name: 'std.string.detab', kind: "functiondeclaration", path: './std/string/detab.html', attributes: ["pure", "trusted"]},
{name: 'std.string.entab', kind: "functiondeclaration", path: './std/string/entab.html', attributes: ["pure", "trusted"]},
{name: 'std.string.fromStringz', kind: "functiondeclaration", path: './std/string/from_stringz.html', attributes: ["pure"]},
{name: 'std.string.indexOf', kind: "functiondeclaration", path: './std/string/index_of.html', attributes: ["pure", "safe"]},
{name: 'std.string.indexOfAny', kind: "functiondeclaration", path: './std/string/index_of_any.html', attributes: ["pure", "safe"]},
{name: 'std.string.indexOfNeither', kind: "functiondeclaration", path: './std/string/index_of_neither.html', attributes: ["pure", "safe"]},
{name: 'std.string.inPattern', kind: "functiondeclaration", path: './std/string/in_pattern.html', attributes: ["pure", "nogc", "safe"]},
{name: 'std.string.isNumeric', kind: "functiondeclaration", path: './std/string/is_numeric.html', attributes: ["pure", "safe"]},
{name: 'std.string.KeepTerminator', kind: "aliasdeclaration", path: './std/string/keep_terminator.html', attributes: []},
{name: 'std.string.lastIndexOf', kind: "functiondeclaration", path: './std/string/last_index_of.html', attributes: ["pure", "safe"]},
{name: 'std.string.lastIndexOfAny', kind: "functiondeclaration", path: './std/string/last_index_of_any.html', attributes: ["pure", "safe"]},
{name: 'std.string.lastIndexOfNeither', kind: "functiondeclaration", path: './std/string/last_index_of_neither.html', attributes: ["pure", "safe"]},
{name: 'std.string.leftJustify', kind: "functiondeclaration", path: './std/string/left_justify.html', attributes: ["pure", "trusted"]},
{name: 'std.string.lineSplitter', kind: "functiondeclaration", path: './std/string/line_splitter.html', attributes: ["auto"]},
{name: 'std.string.makeTrans', kind: "functiondeclaration", path: './std/string/make_trans.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.string.munch', kind: "functiondeclaration", path: './std/string/munch.html', attributes: ["pure", "nogc", "safe"]},
{name: 'std.string.outdent', kind: "functiondeclaration", path: './std/string/outdent.html', attributes: ["pure", "safe"]},
{name: 'std.string.removechars', kind: "functiondeclaration", path: './std/string/removechars.html', attributes: ["pure", "safe"]},
{name: 'std.string.representation', kind: "functiondeclaration", path: './std/string/representation.html', attributes: ["pure", "nothrow", "nogc", "safe", "auto"]},
{name: 'std.string.rightJustify', kind: "functiondeclaration", path: './std/string/right_justify.html', attributes: ["pure", "trusted"]},
{name: 'std.string.soundex', kind: "functiondeclaration", path: './std/string/soundex.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.string.soundexer', kind: "functiondeclaration", path: './std/string/soundexer.html', attributes: []},
{name: 'std.string.splitLines', kind: "functiondeclaration", path: './std/string/split_lines.html', attributes: ["pure", "safe"]},
{name: 'std.string.squeeze', kind: "functiondeclaration", path: './std/string/squeeze.html', attributes: []},
{name: 'std.string.StringException', kind: "classdeclaration", path: './std/string/string_exception.html', attributes: []},
{name: 'std.string.StringException.this', kind: "functiondeclaration", path: './std/string/string_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.string.strip', kind: "functiondeclaration", path: './std/string/strip.html', attributes: ["pure", "safe"]},
{name: 'std.string.stripLeft', kind: "functiondeclaration", path: './std/string/strip_left.html', attributes: ["pure", "nogc", "safe"]},
{name: 'std.string.stripRight', kind: "functiondeclaration", path: './std/string/strip_right.html', attributes: ["pure", "nogc", "safe"]},
{name: 'std.string.succ', kind: "functiondeclaration", path: './std/string/succ.html', attributes: ["pure", "safe"]},
{name: 'std.string.toStringz', kind: "functiondeclaration", path: './std/string/to_stringz.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.string.tr', kind: "functiondeclaration", path: './std/string/tr.html', attributes: []},
{name: 'std.string.translate', kind: "functiondeclaration", path: './std/string/translate.html', attributes: ["pure", "trusted"]},
{name: 'std.string.wrap', kind: "functiondeclaration", path: './std/string/wrap.html', attributes: ["pure", "safe"]},
{name: 'std.syserror', kind: "module", path: './std/syserror.html', attributes: []},
{name: 'std.system', kind: "module", path: './std/system.html', attributes: []},
{name: 'std.system.Endian', kind: "enumdeclaration", path: './std/system/endian.html', attributes: []},
{name: 'std.system.Endian.bigEndian', kind: "enummemberdeclaration", path: './std/system/endian.big_endian.html', attributes: []},
{name: 'std.system.Endian.littleEndian', kind: "enummemberdeclaration", path: './std/system/endian.little_endian.html', attributes: []},
{name: 'std.system.endian', kind: "variabledeclaration", path: './std/system/endian.html', attributes: []},
{name: 'std.system.OS', kind: "enumdeclaration", path: './std/system/os.html', attributes: []},
{name: 'std.system.OS.android', kind: "enummemberdeclaration", path: './std/system/os.android.html', attributes: []},
{name: 'std.system.OS.freeBSD', kind: "enummemberdeclaration", path: './std/system/os.free_bsd.html', attributes: []},
{name: 'std.system.OS.linux', kind: "enummemberdeclaration", path: './std/system/os.linux.html', attributes: []},
{name: 'std.system.OS.osx', kind: "enummemberdeclaration", path: './std/system/os.osx.html', attributes: []},
{name: 'std.system.OS.otherPosix', kind: "enummemberdeclaration", path: './std/system/os.other_posix.html', attributes: []},
{name: 'std.system.OS.solaris', kind: "enummemberdeclaration", path: './std/system/os.solaris.html', attributes: []},
{name: 'std.system.OS.win32', kind: "enummemberdeclaration", path: './std/system/os.win32.html', attributes: []},
{name: 'std.system.OS.win64', kind: "enummemberdeclaration", path: './std/system/os.win64.html', attributes: []},
{name: 'std.system.os', kind: "variabledeclaration", path: './std/system/os.html', attributes: []},
{name: 'std.traits', kind: "module", path: './std/traits.html', attributes: []},
{name: 'std.traits.areAllSafe', kind: "templatedeclaration", path: './std/traits/are_all_safe.html', attributes: []},
{name: 'std.traits.arity', kind: "enummemberdeclaration", path: './std/traits/arity.html', attributes: []},
{name: 'std.traits.BaseClassesTuple', kind: "templatedeclaration", path: './std/traits/base_classes_tuple.html', attributes: []},
{name: 'std.traits.BaseTypeTuple', kind: "templatedeclaration", path: './std/traits/base_type_tuple.html', attributes: []},
{name: 'std.traits.classInstanceAlignment', kind: "aliasdeclaration", path: './std/traits/class_instance_alignment.html', attributes: []},
{name: 'std.traits.CommonType', kind: "templatedeclaration", path: './std/traits/common_type.html', attributes: []},
{name: 'std.traits.EnumMembers', kind: "aliasdeclaration", path: './std/traits/enum_members.html', attributes: []},
{name: 'std.traits.FieldNameTuple', kind: "templatedeclaration", path: './std/traits/field_name_tuple.html', attributes: []},
{name: 'std.traits.FieldTypeTuple', kind: "templatedeclaration", path: './std/traits/field_type_tuple.html', attributes: []},
{name: 'std.traits.ForeachType', kind: "aliasdeclaration", path: './std/traits/foreach_type.html', attributes: []},
{name: 'std.traits.fullyQualifiedName', kind: "templatedeclaration", path: './std/traits/fully_qualified_name.html', attributes: []},
{name: 'std.traits.FunctionAttribute', kind: "enumdeclaration", path: './std/traits/function_attribute.html', attributes: []},
{name: 'std.traits.FunctionAttribute.const_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.const_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.immutable_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.immutable_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.inout_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.inout_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.nogc', kind: "enummemberdeclaration", path: './std/traits/function_attribute.nogc.html', attributes: []},
{name: 'std.traits.FunctionAttribute.none', kind: "enummemberdeclaration", path: './std/traits/function_attribute.none.html', attributes: []},
{name: 'std.traits.FunctionAttribute.nothrow_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.nothrow_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.property', kind: "enummemberdeclaration", path: './std/traits/function_attribute.property.html', attributes: []},
{name: 'std.traits.FunctionAttribute.pure_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.pure_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.ref_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.ref_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.return_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.return_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.safe', kind: "enummemberdeclaration", path: './std/traits/function_attribute.safe.html', attributes: []},
{name: 'std.traits.FunctionAttribute.shared_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.shared_.html', attributes: []},
{name: 'std.traits.FunctionAttribute.system', kind: "enummemberdeclaration", path: './std/traits/function_attribute.system.html', attributes: []},
{name: 'std.traits.FunctionAttribute.trusted', kind: "enummemberdeclaration", path: './std/traits/function_attribute.trusted.html', attributes: []},
{name: 'std.traits.functionAttributes', kind: "enummemberdeclaration", path: './std/traits/function_attributes.html', attributes: []},
{name: 'std.traits.functionLinkage', kind: "enummemberdeclaration", path: './std/traits/function_linkage.html', attributes: []},
{name: 'std.traits.FunctionTypeOf', kind: "templatedeclaration", path: './std/traits/function_type_of.html', attributes: []},
{name: 'std.traits.hasAliasing', kind: "templatedeclaration", path: './std/traits/has_aliasing.html', attributes: []},
{name: 'std.traits.hasElaborateAssign', kind: "templatedeclaration", path: './std/traits/has_elaborate_assign.html', attributes: []},
{name: 'std.traits.hasElaborateCopyConstructor', kind: "templatedeclaration", path: './std/traits/has_elaborate_copy_constructor.html', attributes: []},
{name: 'std.traits.hasElaborateDestructor', kind: "templatedeclaration", path: './std/traits/has_elaborate_destructor.html', attributes: []},
{name: 'std.traits.hasIndirections', kind: "templatedeclaration", path: './std/traits/has_indirections.html', attributes: []},
{name: 'std.traits.hasMember', kind: "templatedeclaration", path: './std/traits/has_member.html', attributes: []},
{name: 'std.traits.hasNested', kind: "templatedeclaration", path: './std/traits/has_nested.html', attributes: []},
{name: 'std.traits.hasUnsharedAliasing', kind: "templatedeclaration", path: './std/traits/has_unshared_aliasing.html', attributes: []},
{name: 'std.traits.ImplicitConversionTargets', kind: "templatedeclaration", path: './std/traits/implicit_conversion_targets.html', attributes: []},
{name: 'std.traits.InterfacesTuple', kind: "templatedeclaration", path: './std/traits/interfaces_tuple.html', attributes: []},
{name: 'std.traits.isAbstractClass', kind: "enummemberdeclaration", path: './std/traits/is_abstract_class.html', attributes: []},
{name: 'std.traits.isAbstractFunction', kind: "enummemberdeclaration", path: './std/traits/is_abstract_function.html', attributes: []},
{name: 'std.traits.isAggregateType', kind: "enummemberdeclaration", path: './std/traits/is_aggregate_type.html', attributes: []},
{name: 'std.traits.isArray', kind: "enummemberdeclaration", path: './std/traits/is_array.html', attributes: []},
{name: 'std.traits.isAssignable', kind: "enummemberdeclaration", path: './std/traits/is_assignable.html', attributes: []},
{name: 'std.traits.isAssociativeArray', kind: "enummemberdeclaration", path: './std/traits/is_associative_array.html', attributes: []},
{name: 'std.traits.isBasicType', kind: "enummemberdeclaration", path: './std/traits/is_basic_type.html', attributes: []},
{name: 'std.traits.isBoolean', kind: "enummemberdeclaration", path: './std/traits/is_boolean.html', attributes: []},
{name: 'std.traits.isBuiltinType', kind: "enummemberdeclaration", path: './std/traits/is_builtin_type.html', attributes: []},
{name: 'std.traits.isCallable', kind: "templatedeclaration", path: './std/traits/is_callable.html', attributes: []},
{name: 'std.traits.isCovariantWith', kind: "templatedeclaration", path: './std/traits/is_covariant_with.html', attributes: []},
{name: 'std.traits.isDelegate', kind: "templatedeclaration", path: './std/traits/is_delegate.html', attributes: []},
{name: 'std.traits.isDynamicArray', kind: "enummemberdeclaration", path: './std/traits/is_dynamic_array.html', attributes: []},
{name: 'std.traits.isExpressionTuple', kind: "templatedeclaration", path: './std/traits/is_expression_tuple.html', attributes: []},
{name: 'std.traits.isFinalClass', kind: "enummemberdeclaration", path: './std/traits/is_final_class.html', attributes: []},
{name: 'std.traits.isFinalFunction', kind: "enummemberdeclaration", path: './std/traits/is_final_function.html', attributes: []},
{name: 'std.traits.isFloatingPoint', kind: "enummemberdeclaration", path: './std/traits/is_floating_point.html', attributes: []},
{name: 'std.traits.isFunctionPointer', kind: "templatedeclaration", path: './std/traits/is_function_pointer.html', attributes: []},
{name: 'std.traits.isImplicitlyConvertible', kind: "enummemberdeclaration", path: './std/traits/is_implicitly_convertible.html', attributes: []},
{name: 'std.traits.isInstanceOf', kind: "enummemberdeclaration", path: './std/traits/is_instance_of.html', attributes: []},
{name: 'std.traits.isIntegral', kind: "enummemberdeclaration", path: './std/traits/is_integral.html', attributes: []},
{name: 'std.traits.isIterable', kind: "enummemberdeclaration", path: './std/traits/is_iterable.html', attributes: []},
{name: 'std.traits.isMutable', kind: "enummemberdeclaration", path: './std/traits/is_mutable.html', attributes: []},
{name: 'std.traits.isNested', kind: "enummemberdeclaration", path: './std/traits/is_nested.html', attributes: []},
{name: 'std.traits.isNestedFunction', kind: "enummemberdeclaration", path: './std/traits/is_nested_function.html', attributes: []},
{name: 'std.traits.isNumeric', kind: "enummemberdeclaration", path: './std/traits/is_numeric.html', attributes: []},
{name: 'std.traits.isPointer', kind: "enummemberdeclaration", path: './std/traits/is_pointer.html', attributes: []},
{name: 'std.traits.isSafe', kind: "enummemberdeclaration", path: './std/traits/is_safe.html', attributes: []},
{name: 'std.traits.isScalarType', kind: "enummemberdeclaration", path: './std/traits/is_scalar_type.html', attributes: []},
{name: 'std.traits.isSigned', kind: "enummemberdeclaration", path: './std/traits/is_signed.html', attributes: []},
{name: 'std.traits.isSIMDVector', kind: "enummemberdeclaration", path: './std/traits/is_simd_vector.html', attributes: []},
{name: 'std.traits.isSomeChar', kind: "enummemberdeclaration", path: './std/traits/is_some_char.html', attributes: []},
{name: 'std.traits.isSomeFunction', kind: "templatedeclaration", path: './std/traits/is_some_function.html', attributes: []},
{name: 'std.traits.isSomeString', kind: "enummemberdeclaration", path: './std/traits/is_some_string.html', attributes: []},
{name: 'std.traits.isStaticArray', kind: "enummemberdeclaration", path: './std/traits/is_static_array.html', attributes: []},
{name: 'std.traits.isTypeTuple', kind: "templatedeclaration", path: './std/traits/is_type_tuple.html', attributes: []},
{name: 'std.traits.isUnsafe', kind: "enummemberdeclaration", path: './std/traits/is_unsafe.html', attributes: []},
{name: 'std.traits.isUnsigned', kind: "enummemberdeclaration", path: './std/traits/is_unsigned.html', attributes: []},
{name: 'std.traits.KeyType', kind: "aliasdeclaration", path: './std/traits/key_type.html', attributes: []},
{name: 'std.traits.Largest', kind: "templatedeclaration", path: './std/traits/largest.html', attributes: []},
{name: 'std.traits.lvalueOf', kind: "functiondeclaration", path: './std/traits/lvalue_of.html', attributes: []},
{name: 'std.traits.mangledName', kind: "templatedeclaration", path: './std/traits/mangled_name.html', attributes: []},
{name: 'std.traits.MemberFunctionsTuple', kind: "templatedeclaration", path: './std/traits/member_functions_tuple.html', attributes: []},
{name: 'std.traits.moduleName', kind: "templatedeclaration", path: './std/traits/module_name.html', attributes: []},
{name: 'std.traits.mostNegative', kind: "templatedeclaration", path: './std/traits/most_negative.html', attributes: []},
{name: 'std.traits.OriginalType', kind: "aliasdeclaration", path: './std/traits/original_type.html', attributes: []},
{name: 'std.traits.packageName', kind: "templatedeclaration", path: './std/traits/package_name.html', attributes: []},
{name: 'std.traits.ParameterDefaultValueTuple', kind: "aliasdeclaration", path: './std/traits/parameter_default_value_tuple.html', attributes: []},
{name: 'std.traits.ParameterIdentifierTuple', kind: "aliasdeclaration", path: './std/traits/parameter_identifier_tuple.html', attributes: []},
{name: 'std.traits.ParameterStorageClass', kind: "enumdeclaration", path: './std/traits/parameter_storage_class.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.lazy_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.lazy_.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.none', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.none.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.out_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.out_.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.ref_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.ref_.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.return_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.return_.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.scope_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.scope_.html', attributes: []},
{name: 'std.traits.ParameterStorageClassTuple', kind: "aliasdeclaration", path: './std/traits/parameter_storage_class_tuple.html', attributes: []},
{name: 'std.traits.ParameterTypeTuple', kind: "templatedeclaration", path: './std/traits/parameter_type_tuple.html', attributes: []},
{name: 'std.traits.pointerTarget', kind: "aliasdeclaration", path: './std/traits/pointer_target.html', attributes: ["deprecated"]},
{name: 'std.traits.PointerTarget', kind: "aliasdeclaration", path: './std/traits/pointer_target.html', attributes: []},
{name: 'std.traits.RepresentationTypeTuple', kind: "templatedeclaration", path: './std/traits/representation_type_tuple.html', attributes: []},
{name: 'std.traits.ReturnType', kind: "templatedeclaration", path: './std/traits/return_type.html', attributes: []},
{name: 'std.traits.rvalueOf', kind: "functiondeclaration", path: './std/traits/rvalue_of.html', attributes: []},
{name: 'std.traits.Select', kind: "aliasdeclaration", path: './std/traits/select.html', attributes: []},
{name: 'std.traits.select', kind: "functiondeclaration", path: './std/traits/select.html', attributes: []},
{name: 'std.traits.SetFunctionAttributes', kind: "aliasdeclaration", path: './std/traits/set_function_attributes.html', attributes: []},
{name: 'std.traits.Signed', kind: "aliasdeclaration", path: './std/traits/signed.html', attributes: []},
{name: 'std.traits.TemplateArgsOf', kind: "aliasdeclaration", path: './std/traits/template_args_of.html', attributes: []},
{name: 'std.traits.TemplateOf', kind: "aliasdeclaration", path: './std/traits/template_of.html', attributes: []},
{name: 'std.traits.TransitiveBaseTypeTuple', kind: "templatedeclaration", path: './std/traits/transitive_base_type_tuple.html', attributes: []},
{name: 'std.traits.Unqual', kind: "templatedeclaration", path: './std/traits/unqual.html', attributes: []},
{name: 'std.traits.Unsigned', kind: "aliasdeclaration", path: './std/traits/unsigned.html', attributes: []},
{name: 'std.traits.ValueType', kind: "aliasdeclaration", path: './std/traits/value_type.html', attributes: []},
{name: 'std.traits.Variadic', kind: "enumdeclaration", path: './std/traits/variadic.html', attributes: []},
{name: 'std.traits.Variadic.c', kind: "enummemberdeclaration", path: './std/traits/variadic.c.html', attributes: []},
{name: 'std.traits.Variadic.d', kind: "enummemberdeclaration", path: './std/traits/variadic.d.html', attributes: []},
{name: 'std.traits.Variadic.no', kind: "enummemberdeclaration", path: './std/traits/variadic.no.html', attributes: []},
{name: 'std.traits.Variadic.typesafe', kind: "enummemberdeclaration", path: './std/traits/variadic.typesafe.html', attributes: []},
{name: 'std.traits.variadicFunctionStyle', kind: "enummemberdeclaration", path: './std/traits/variadic_function_style.html', attributes: []},
{name: 'std.typecons', kind: "module", path: './std/typecons.html', attributes: []},
{name: 'std.typecons.alignForSize', kind: "functiondeclaration", path: './std/typecons/align_for_size.html', attributes: []},
{name: 'std.typecons.AutoImplement', kind: "classdeclaration", path: './std/typecons/auto_implement.html', attributes: []},
{name: 'std.typecons.BitFlags', kind: "structdeclaration", path: './std/typecons/bit_flags.html', attributes: []},
{name: 'std.typecons.BlackHole', kind: "aliasdeclaration", path: './std/typecons/black_hole.html', attributes: []},
{name: 'std.typecons.Flag', kind: "enumdeclaration", path: './std/typecons/flag.html', attributes: []},
{name: 'std.typecons.Flag.no', kind: "enummemberdeclaration", path: './std/typecons/flag.no.html', attributes: []},
{name: 'std.typecons.Flag.yes', kind: "enummemberdeclaration", path: './std/typecons/flag.yes.html', attributes: []},
{name: 'std.typecons.generateAssertTrap', kind: "enummemberdeclaration", path: './std/typecons/generate_assert_trap.html', attributes: []},
{name: 'std.typecons.generateEmptyFunction', kind: "templatedeclaration", path: './std/typecons/generate_empty_function.html', attributes: []},
{name: 'std.typecons.isBitFlagEnum', kind: "templatedeclaration", path: './std/typecons/is_bit_flag_enum.html', attributes: []},
{name: 'std.typecons.isTuple', kind: "templatedeclaration", path: './std/typecons/is_tuple.html', attributes: []},
{name: 'std.typecons.No', kind: "structdeclaration", path: './std/typecons/no.html', attributes: []},
{name: 'std.typecons.Nullable', kind: "structdeclaration", path: './std/typecons/nullable.html', attributes: []},
{name: 'std.typecons.Nullable.get', kind: "functiondeclaration", path: './std/typecons/nullable.get.html', attributes: ["inout", "pure", "nothrow", "property", "ref", "safe"]},
{name: 'std.typecons.Nullable.isNull', kind: "functiondeclaration", path: './std/typecons/nullable.is_null.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.typecons.Nullable.nullify', kind: "templatedeclaration", path: './std/typecons/nullable.nullify.html', attributes: []},
{name: 'std.typecons.Nullable.nullify.nullify', kind: "functiondeclaration", path: './std/typecons/nullable.nullify.nullify.html', attributes: []},
{name: 'std.typecons.Nullable.opAssign', kind: "templatedeclaration", path: './std/typecons/nullable.op_assign.html', attributes: []},
{name: 'std.typecons.Nullable.opAssign.opAssign', kind: "functiondeclaration", path: './std/typecons/nullable.op_assign.op_assign.html', attributes: []},
{name: 'std.typecons.Nullable.this', kind: "functiondeclaration", path: './std/typecons/nullable.this.html', attributes: []},
{name: 'std.typecons.NullableRef', kind: "structdeclaration", path: './std/typecons/nullable_ref.html', attributes: []},
{name: 'std.typecons.NullableRef.bind', kind: "functiondeclaration", path: './std/typecons/nullable_ref.bind.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.typecons.NullableRef.get', kind: "functiondeclaration", path: './std/typecons/nullable_ref.get.html', attributes: ["inout", "pure", "nothrow", "property", "ref", "safe"]},
{name: 'std.typecons.NullableRef.isNull', kind: "functiondeclaration", path: './std/typecons/nullable_ref.is_null.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.typecons.NullableRef.nullify', kind: "functiondeclaration", path: './std/typecons/nullable_ref.nullify.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.typecons.NullableRef.opAssign', kind: "templatedeclaration", path: './std/typecons/nullable_ref.op_assign.html', attributes: []},
{name: 'std.typecons.NullableRef.opAssign.opAssign', kind: "functiondeclaration", path: './std/typecons/nullable_ref.op_assign.op_assign.html', attributes: []},
{name: 'std.typecons.NullableRef.this', kind: "functiondeclaration", path: './std/typecons/nullable_ref.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.typecons.Proxy', kind: "templatedeclaration", path: './std/typecons/proxy.html', attributes: []},
{name: 'std.typecons.rebindable', kind: "functiondeclaration", path: './std/typecons/rebindable.html', attributes: []},
{name: 'std.typecons.Rebindable', kind: "templatedeclaration", path: './std/typecons/rebindable.html', attributes: []},
{name: 'std.typecons.RefCounted', kind: "structdeclaration", path: './std/typecons/ref_counted.html', attributes: []},
{name: 'std.typecons.RefCounted.opAssign', kind: "functiondeclaration", path: './std/typecons/ref_counted.op_assign.html', attributes: []},
{name: 'std.typecons.RefCounted.refCountedPayload', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_payload.html', attributes: ["property", "ref"]},
{name: 'std.typecons.RefCounted.RefCountedStore', kind: "structdeclaration", path: './std/typecons/ref_counted.ref_counted_store.html', attributes: []},
{name: 'std.typecons.RefCounted.RefCountedStore.ensureInitialized', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.ensure_initialized.html', attributes: []},
{name: 'std.typecons.RefCounted.RefCountedStore.isInitialized', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.is_initialized.html', attributes: ["const", "nothrow", "property", "safe"]},
{name: 'std.typecons.RefCounted.RefCountedStore.refCount', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.ref_count.html', attributes: ["const", "nothrow", "property", "safe"]},
{name: 'std.typecons.RefCounted.refCountedStore', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.html', attributes: ["inout", "nothrow", "property", "ref", "safe"]},
{name: 'std.typecons.RefCounted.this', kind: "templatedeclaration", path: './std/typecons/ref_counted.this.html', attributes: []},
{name: 'std.typecons.RefCounted.this.this', kind: "functiondeclaration", path: './std/typecons/ref_counted.this.this.html', attributes: []},
{name: 'std.typecons.RefCountedAutoInitialize', kind: "enumdeclaration", path: './std/typecons/ref_counted_auto_initialize.html', attributes: []},
{name: 'std.typecons.RefCountedAutoInitialize.no', kind: "enummemberdeclaration", path: './std/typecons/ref_counted_auto_initialize.no.html', attributes: []},
{name: 'std.typecons.RefCountedAutoInitialize.yes', kind: "enummemberdeclaration", path: './std/typecons/ref_counted_auto_initialize.yes.html', attributes: []},
{name: 'std.typecons.reverse', kind: "functiondeclaration", path: './std/typecons/reverse.html', attributes: []},
{name: 'std.typecons.scoped', kind: "templatedeclaration", path: './std/typecons/scoped.html', attributes: []},
{name: 'std.typecons.scoped.scoped', kind: "functiondeclaration", path: './std/typecons/scoped.scoped.html', attributes: ["system", "auto"]},
{name: 'std.typecons.tuple', kind: "templatedeclaration", path: './std/typecons/tuple.html', attributes: []},
{name: 'std.typecons.tuple.tuple', kind: "functiondeclaration", path: './std/typecons/tuple.tuple.html', attributes: ["auto"]},
{name: 'std.typecons.Tuple', kind: "structdeclaration", path: './std/typecons/tuple.html', attributes: []},
{name: 'std.typecons.Tuple.expand', kind: "variabledeclaration", path: './std/typecons/tuple.expand.html', attributes: []},
{name: 'std.typecons.Tuple.fieldNames', kind: "aliasdeclaration", path: './std/typecons/tuple.field_names.html', attributes: []},
{name: 'std.typecons.Tuple.opAssign', kind: "templatedeclaration", path: './std/typecons/tuple.op_assign.html', attributes: []},
{name: 'std.typecons.Tuple.opAssign.opAssign', kind: "functiondeclaration", path: './std/typecons/tuple.op_assign.op_assign.html', attributes: []},
{name: 'std.typecons.Tuple.opCmp', kind: "templatedeclaration", path: './std/typecons/tuple.op_cmp.html', attributes: []},
{name: 'std.typecons.Tuple.opCmp.opCmp', kind: "functiondeclaration", path: './std/typecons/tuple.op_cmp.op_cmp.html', attributes: []},
{name: 'std.typecons.Tuple.opEquals', kind: "templatedeclaration", path: './std/typecons/tuple.op_equals.html', attributes: []},
{name: 'std.typecons.Tuple.opEquals.opEquals', kind: "functiondeclaration", path: './std/typecons/tuple.op_equals.op_equals.html', attributes: []},
{name: 'std.typecons.Tuple.slice', kind: "templatedeclaration", path: './std/typecons/tuple.slice.html', attributes: []},
{name: 'std.typecons.Tuple.slice.slice', kind: "functiondeclaration", path: './std/typecons/tuple.slice.slice.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.typecons.Tuple.this', kind: "templatedeclaration", path: './std/typecons/tuple.this.html', attributes: []},
{name: 'std.typecons.Tuple.this.this', kind: "functiondeclaration", path: './std/typecons/tuple.this.this.html', attributes: []},
{name: 'std.typecons.Tuple.toHash', kind: "functiondeclaration", path: './std/typecons/tuple.to_hash.html', attributes: ["const", "nothrow", "trusted"]},
{name: 'std.typecons.Tuple.toString', kind: "templatedeclaration", path: './std/typecons/tuple.to_string.html', attributes: []},
{name: 'std.typecons.Tuple.toString.toString', kind: "functiondeclaration", path: './std/typecons/tuple.to_string.to_string.html', attributes: []},
{name: 'std.typecons.Tuple.Types', kind: "aliasdeclaration", path: './std/typecons/tuple.types.html', attributes: []},
{name: 'std.typecons.Typedef', kind: "structdeclaration", path: './std/typecons/typedef.html', attributes: []},
{name: 'std.typecons.TypedefType', kind: "templatedeclaration", path: './std/typecons/typedef_type.html', attributes: []},
{name: 'std.typecons.Unique', kind: "structdeclaration", path: './std/typecons/unique.html', attributes: []},
{name: 'std.typecons.Unique.isEmpty', kind: "functiondeclaration", path: './std/typecons/unique.is_empty.html', attributes: ["const", "property"]},
{name: 'std.typecons.Unique.opAssign', kind: "templatedeclaration", path: './std/typecons/unique.op_assign.html', attributes: []},
{name: 'std.typecons.Unique.opAssign.opAssign', kind: "functiondeclaration", path: './std/typecons/unique.op_assign.op_assign.html', attributes: []},
{name: 'std.typecons.Unique.opDot', kind: "functiondeclaration", path: './std/typecons/unique.op_dot.html', attributes: []},
{name: 'std.typecons.Unique.release', kind: "functiondeclaration", path: './std/typecons/unique.release.html', attributes: []},
{name: 'std.typecons.Unique.this', kind: "functiondeclaration", path: './std/typecons/unique.this.html', attributes: []},
{name: 'std.typecons.Unique.this.this', kind: "functiondeclaration", path: './std/typecons/unique.this.this.html', attributes: []},
{name: 'std.typecons.UnqualRef', kind: "templatedeclaration", path: './std/typecons/unqual_ref.html', attributes: []},
{name: 'std.typecons.unwrap', kind: "templatedeclaration", path: './std/typecons/unwrap.html', attributes: []},
{name: 'std.typecons.unwrap.unwrap', kind: "functiondeclaration", path: './std/typecons/unwrap.unwrap.html', attributes: ["pure", "nothrow", "trusted", "auto"]},
{name: 'std.typecons.WhiteHole', kind: "aliasdeclaration", path: './std/typecons/white_hole.html', attributes: []},
{name: 'std.typecons.wrap', kind: "templatedeclaration", path: './std/typecons/wrap.html', attributes: []},
{name: 'std.typecons.wrap.wrap', kind: "functiondeclaration", path: './std/typecons/wrap.wrap.html', attributes: ["pure", "nothrow", "trusted", "auto"]},
{name: 'std.typecons.Yes', kind: "structdeclaration", path: './std/typecons/yes.html', attributes: []},
{name: 'std.typetuple', kind: "module", path: './std/typetuple.html', attributes: []},
{name: 'std.typetuple.allSatisfy', kind: "templatedeclaration", path: './std/typetuple/all_satisfy.html', attributes: []},
{name: 'std.typetuple.anySatisfy', kind: "templatedeclaration", path: './std/typetuple/any_satisfy.html', attributes: []},
{name: 'std.typetuple.DerivedToFront', kind: "templatedeclaration", path: './std/typetuple/derived_to_front.html', attributes: []},
{name: 'std.typetuple.Erase', kind: "aliasdeclaration", path: './std/typetuple/erase.html', attributes: []},
{name: 'std.typetuple.EraseAll', kind: "aliasdeclaration", path: './std/typetuple/erase_all.html', attributes: []},
{name: 'std.typetuple.Filter', kind: "templatedeclaration", path: './std/typetuple/filter.html', attributes: []},
{name: 'std.typetuple.IndexOf', kind: "aliasdeclaration", path: './std/typetuple/index_of.html', attributes: []},
{name: 'std.typetuple.MostDerived', kind: "templatedeclaration", path: './std/typetuple/most_derived.html', attributes: []},
{name: 'std.typetuple.NoDuplicates', kind: "templatedeclaration", path: './std/typetuple/no_duplicates.html', attributes: []},
{name: 'std.typetuple.Replace', kind: "aliasdeclaration", path: './std/typetuple/replace.html', attributes: []},
{name: 'std.typetuple.ReplaceAll', kind: "aliasdeclaration", path: './std/typetuple/replace_all.html', attributes: []},
{name: 'std.typetuple.Reverse', kind: "templatedeclaration", path: './std/typetuple/reverse.html', attributes: []},
{name: 'std.typetuple.staticIndexOf', kind: "enummemberdeclaration", path: './std/typetuple/static_index_of.html', attributes: []},
{name: 'std.typetuple.staticMap', kind: "templatedeclaration", path: './std/typetuple/static_map.html', attributes: []},
{name: 'std.typetuple.templateAnd', kind: "templatedeclaration", path: './std/typetuple/template_and.html', attributes: []},
{name: 'std.typetuple.templateNot', kind: "templatedeclaration", path: './std/typetuple/template_not.html', attributes: []},
{name: 'std.typetuple.templateNot.templateNot', kind: "enummemberdeclaration", path: './std/typetuple/template_not.template_not.html', attributes: []},
{name: 'std.typetuple.templateOr', kind: "templatedeclaration", path: './std/typetuple/template_or.html', attributes: []},
{name: 'std.typetuple.TypeTuple', kind: "aliasdeclaration", path: './std/typetuple/type_tuple.html', attributes: []},
{name: 'std.uni', kind: "module", path: './std/uni.html', attributes: []},
{name: 'std.uni.allowedIn', kind: "functiondeclaration", path: './std/uni/allowed_in.html', attributes: []},
{name: 'std.uni.byCodePoint', kind: "functiondeclaration", path: './std/uni/by_code_point.html', attributes: []},
{name: 'std.uni.byGrapheme', kind: "functiondeclaration", path: './std/uni/by_grapheme.html', attributes: ["auto"]},
{name: 'std.uni.CodepointInterval', kind: "structdeclaration", path: './std/uni/codepoint_interval.html', attributes: []},
{name: 'std.uni.CodepointSet', kind: "aliasdeclaration", path: './std/uni/codepoint_set.html', attributes: []},
{name: 'std.uni.codepointSetTrie', kind: "templatedeclaration", path: './std/uni/codepoint_set_trie.html', attributes: []},
{name: 'std.uni.codepointSetTrie.codepointSetTrie', kind: "functiondeclaration", path: './std/uni/codepoint_set_trie.codepoint_set_trie.html', attributes: ["auto"]},
{name: 'std.uni.CodepointSetTrie', kind: "aliasdeclaration", path: './std/uni/codepoint_set_trie.html', attributes: []},
{name: 'std.uni.codepointTrie', kind: "templatedeclaration", path: './std/uni/codepoint_trie.html', attributes: []},
{name: 'std.uni.codepointTrie.codepointTrie', kind: "functiondeclaration", path: './std/uni/codepoint_trie.codepoint_trie.html', attributes: ["auto"]},
{name: 'std.uni.CodepointTrie', kind: "aliasdeclaration", path: './std/uni/codepoint_trie.html', attributes: []},
{name: 'std.uni.combiningClass', kind: "functiondeclaration", path: './std/uni/combining_class.html', attributes: ["trusted"]},
{name: 'std.uni.compose', kind: "functiondeclaration", path: './std/uni/compose.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.uni.composeJamo', kind: "functiondeclaration", path: './std/uni/compose_jamo.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.uni.decodeGrapheme', kind: "functiondeclaration", path: './std/uni/decode_grapheme.html', attributes: []},
{name: 'std.uni.decompose', kind: "functiondeclaration", path: './std/uni/decompose.html', attributes: []},
{name: 'std.uni.decomposeHangul', kind: "functiondeclaration", path: './std/uni/decompose_hangul.html', attributes: ["trusted"]},
{name: 'std.uni.Grapheme', kind: "structdeclaration", path: './std/uni/grapheme.html', attributes: []},
{name: 'std.uni.Grapheme.length', kind: "functiondeclaration", path: './std/uni/grapheme.length.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted", "const"]},
{name: 'std.uni.Grapheme.opIndex', kind: "functiondeclaration", path: './std/uni/grapheme.op_index.html', attributes: ["pure", "nothrow", "nogc", "trusted", "const"]},
{name: 'std.uni.Grapheme.opIndexAssign', kind: "functiondeclaration", path: './std/uni/grapheme.op_index_assign.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.uni.Grapheme.opOpAssign', kind: "functiondeclaration", path: './std/uni/grapheme.op_op_assign.html', attributes: []},
{name: 'std.uni.Grapheme.opSlice', kind: "functiondeclaration", path: './std/uni/grapheme.op_slice.html', attributes: ["pure", "nothrow", "nogc", "auto"]},
{name: 'std.uni.Grapheme.valid', kind: "functiondeclaration", path: './std/uni/grapheme.valid.html', attributes: ["property"]},
{name: 'std.uni.graphemeStride', kind: "functiondeclaration", path: './std/uni/grapheme_stride.html', attributes: []},
{name: 'std.uni.icmp', kind: "functiondeclaration", path: './std/uni/icmp.html', attributes: []},
{name: 'std.uni.InversionList', kind: "structdeclaration", path: './std/uni/inversion_list.html', attributes: []},
{name: 'std.uni.InversionList.add', kind: "templatedeclaration", path: './std/uni/inversion_list.add.html', attributes: []},
{name: 'std.uni.InversionList.add.add', kind: "functiondeclaration", path: './std/uni/inversion_list.add.add.html', attributes: []},
{name: 'std.uni.InversionList.byCodepoint', kind: "functiondeclaration", path: './std/uni/inversion_list.by_codepoint.html', attributes: ["property", "auto"]},
{name: 'std.uni.InversionList.byInterval', kind: "functiondeclaration", path: './std/uni/inversion_list.by_interval.html', attributes: ["property", "auto"]},
{name: 'std.uni.InversionList.empty', kind: "functiondeclaration", path: './std/uni/inversion_list.empty.html', attributes: ["const", "property"]},
{name: 'std.uni.InversionList.inverted', kind: "functiondeclaration", path: './std/uni/inversion_list.inverted.html', attributes: ["property", "auto"]},
{name: 'std.uni.InversionList.length', kind: "functiondeclaration", path: './std/uni/inversion_list.length.html', attributes: ["property"]},
{name: 'std.uni.InversionList.opBinary', kind: "templatedeclaration", path: './std/uni/inversion_list.op_binary.html', attributes: []},
{name: 'std.uni.InversionList.opBinary.opBinary', kind: "functiondeclaration", path: './std/uni/inversion_list.op_binary.op_binary.html', attributes: []},
{name: 'std.uni.InversionList.opBinaryRight', kind: "templatedeclaration", path: './std/uni/inversion_list.op_binary_right.html', attributes: []},
{name: 'std.uni.InversionList.opBinaryRight.opBinaryRight', kind: "functiondeclaration", path: './std/uni/inversion_list.op_binary_right.op_binary_right.html', attributes: ["const"]},
{name: 'std.uni.InversionList.opIndex', kind: "functiondeclaration", path: './std/uni/inversion_list.op_index.html', attributes: ["const"]},
{name: 'std.uni.InversionList.opOpAssign', kind: "templatedeclaration", path: './std/uni/inversion_list.op_op_assign.html', attributes: []},
{name: 'std.uni.InversionList.opOpAssign.opOpAssign', kind: "functiondeclaration", path: './std/uni/inversion_list.op_op_assign.op_op_assign.html', attributes: ["ref"]},
{name: 'std.uni.InversionList.opUnary', kind: "templatedeclaration", path: './std/uni/inversion_list.op_unary.html', attributes: []},
{name: 'std.uni.InversionList.opUnary.opUnary', kind: "functiondeclaration", path: './std/uni/inversion_list.op_unary.op_unary.html', attributes: ["auto"]},
{name: 'std.uni.InversionList.this', kind: "templatedeclaration", path: './std/uni/inversion_list.this.html', attributes: []},
{name: 'std.uni.InversionList.this.this', kind: "functiondeclaration", path: './std/uni/inversion_list.this.this.html', attributes: []},
{name: 'std.uni.InversionList.toSourceCode', kind: "functiondeclaration", path: './std/uni/inversion_list.to_source_code.html', attributes: []},
{name: 'std.uni.InversionList.toString', kind: "functiondeclaration", path: './std/uni/inversion_list.to_string.html', attributes: []},
{name: 'std.uni.isAlpha', kind: "functiondeclaration", path: './std/uni/is_alpha.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isCodepointSet', kind: "templatedeclaration", path: './std/uni/is_codepoint_set.html', attributes: []},
{name: 'std.uni.isControl', kind: "functiondeclaration", path: './std/uni/is_control.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isFormat', kind: "functiondeclaration", path: './std/uni/is_format.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isGraphical', kind: "functiondeclaration", path: './std/uni/is_graphical.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isIntegralPair', kind: "enummemberdeclaration", path: './std/uni/is_integral_pair.html', attributes: []},
{name: 'std.uni.isLower', kind: "functiondeclaration", path: './std/uni/is_lower.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isMark', kind: "functiondeclaration", path: './std/uni/is_mark.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isNonCharacter', kind: "functiondeclaration", path: './std/uni/is_non_character.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isNumber', kind: "functiondeclaration", path: './std/uni/is_number.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isPrivateUse', kind: "functiondeclaration", path: './std/uni/is_private_use.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isPunctuation', kind: "functiondeclaration", path: './std/uni/is_punctuation.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSpace', kind: "functiondeclaration", path: './std/uni/is_space.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSurrogate', kind: "functiondeclaration", path: './std/uni/is_surrogate.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSurrogateHi', kind: "functiondeclaration", path: './std/uni/is_surrogate_hi.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSurrogateLo', kind: "functiondeclaration", path: './std/uni/is_surrogate_lo.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSymbol', kind: "functiondeclaration", path: './std/uni/is_symbol.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isUpper', kind: "functiondeclaration", path: './std/uni/is_upper.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isUtfMatcher', kind: "enummemberdeclaration", path: './std/uni/is_utf_matcher.html', attributes: []},
{name: 'std.uni.isWhite', kind: "functiondeclaration", path: './std/uni/is_white.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.lineSep', kind: "enummemberdeclaration", path: './std/uni/line_sep.html', attributes: []},
{name: 'std.uni.MatcherConcept', kind: "structdeclaration", path: './std/uni/matcher_concept.html', attributes: []},
{name: 'std.uni.MatcherConcept.match', kind: "functiondeclaration", path: './std/uni/matcher_concept.match.html', attributes: []},
{name: 'std.uni.MatcherConcept.skip', kind: "functiondeclaration", path: './std/uni/matcher_concept.skip.html', attributes: []},
{name: 'std.uni.MatcherConcept.test', kind: "functiondeclaration", path: './std/uni/matcher_concept.test.html', attributes: []},
{name: 'std.uni.nelSep', kind: "enummemberdeclaration", path: './std/uni/nel_sep.html', attributes: []},
{name: 'std.uni.NFC', kind: "enummemberdeclaration", path: './std/uni/nfc.html', attributes: []},
{name: 'std.uni.NFD', kind: "enummemberdeclaration", path: './std/uni/nfd.html', attributes: []},
{name: 'std.uni.NFKC', kind: "enummemberdeclaration", path: './std/uni/nfkc.html', attributes: []},
{name: 'std.uni.NFKD', kind: "enummemberdeclaration", path: './std/uni/nfkd.html', attributes: []},
{name: 'std.uni.NormalizationForm', kind: "enumdeclaration", path: './std/uni/normalization_form.html', attributes: []},
{name: 'std.uni.normalize', kind: "functiondeclaration", path: './std/uni/normalize.html', attributes: []},
{name: 'std.uni.paraSep', kind: "enummemberdeclaration", path: './std/uni/para_sep.html', attributes: []},
{name: 'std.uni.sicmp', kind: "functiondeclaration", path: './std/uni/sicmp.html', attributes: []},
{name: 'std.uni.toDelegate', kind: "functiondeclaration", path: './std/uni/to_delegate.html', attributes: ["auto"]},
{name: 'std.uni.toLower', kind: "functiondeclaration", path: './std/uni/to_lower.html', attributes: ["pure", "trusted"]},
{name: 'std.uni.toLowerCase', kind: "functiondeclaration", path: './std/uni/to_lower_case.html', attributes: ["auto"]},
{name: 'std.uni.toLowerInPlace', kind: "functiondeclaration", path: './std/uni/to_lower_in_place.html', attributes: ["pure", "trusted"]},
{name: 'std.uni.toTrie', kind: "functiondeclaration", path: './std/uni/to_trie.html', attributes: ["auto"]},
{name: 'std.uni.toUpper', kind: "functiondeclaration", path: './std/uni/to_upper.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.toUpperCase', kind: "functiondeclaration", path: './std/uni/to_upper_case.html', attributes: ["auto"]},
{name: 'std.uni.toUpperInPlace', kind: "functiondeclaration", path: './std/uni/to_upper_in_place.html', attributes: ["pure", "trusted"]},
{name: 'std.uni.unicode', kind: "structdeclaration", path: './std/uni/unicode.html', attributes: []},
{name: 'std.uni.unicode.block', kind: "structdeclaration", path: './std/uni/unicode.block.html', attributes: []},
{name: 'std.uni.unicode.hangulSyllableType', kind: "structdeclaration", path: './std/uni/unicode.hangul_syllable_type.html', attributes: []},
{name: 'std.uni.unicode.opCall', kind: "functiondeclaration", path: './std/uni/unicode.op_call.html', attributes: ["auto"]},
{name: 'std.uni.unicode.opDispatch', kind: "functiondeclaration", path: './std/uni/unicode.op_dispatch.html', attributes: ["pure", "property", "auto"]},
{name: 'std.uni.unicode.script', kind: "structdeclaration", path: './std/uni/unicode.script.html', attributes: []},
{name: 'std.uni.UnicodeDecomposition', kind: "enumdeclaration", path: './std/uni/unicode_decomposition.html', attributes: []},
{name: 'std.uni.UnicodeDecomposition.Canonical', kind: "enummemberdeclaration", path: './std/uni/unicode_decomposition.canonical.html', attributes: []},
{name: 'std.uni.UnicodeDecomposition.Compatibility', kind: "enummemberdeclaration", path: './std/uni/unicode_decomposition.compatibility.html', attributes: []},
{name: 'std.uni.utfMatcher', kind: "functiondeclaration", path: './std/uni/utf_matcher.html', attributes: ["trusted", "auto"]},
{name: 'std.uri', kind: "module", path: './std/uri.html', attributes: []},
{name: 'std.uri.decode', kind: "functiondeclaration", path: './std/uri/decode.html', attributes: []},
{name: 'std.uri.decodeComponent', kind: "functiondeclaration", path: './std/uri/decode_component.html', attributes: []},
{name: 'std.uri.emailLength', kind: "functiondeclaration", path: './std/uri/email_length.html', attributes: []},
{name: 'std.uri.encode', kind: "functiondeclaration", path: './std/uri/encode.html', attributes: []},
{name: 'std.uri.encodeComponent', kind: "functiondeclaration", path: './std/uri/encode_component.html', attributes: []},
{name: 'std.uri.URIException', kind: "classdeclaration", path: './std/uri/uri_exception.html', attributes: []},
{name: 'std.uri.uriLength', kind: "functiondeclaration", path: './std/uri/uri_length.html', attributes: []},
{name: 'std.utf', kind: "module", path: './std/utf.html', attributes: []},
{name: 'std.utf.byChar', kind: "functiondeclaration", path: './std/utf/by_char.html', attributes: ["auto"]},
{name: 'std.utf.byCodeUnit', kind: "functiondeclaration", path: './std/utf/by_code_unit.html', attributes: ["auto"]},
{name: 'std.utf.byDchar', kind: "functiondeclaration", path: './std/utf/by_dchar.html', attributes: ["auto"]},
{name: 'std.utf.byWchar', kind: "functiondeclaration", path: './std/utf/by_wchar.html', attributes: ["auto"]},
{name: 'std.utf.codeLength', kind: "functiondeclaration", path: './std/utf/code_length.html', attributes: []},
{name: 'std.utf.count', kind: "functiondeclaration", path: './std/utf/count.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.utf.decode', kind: "functiondeclaration", path: './std/utf/decode.html', attributes: []},
{name: 'std.utf.decodeFront', kind: "functiondeclaration", path: './std/utf/decode_front.html', attributes: []},
{name: 'std.utf.encode', kind: "functiondeclaration", path: './std/utf/encode.html', attributes: ["pure", "safe"]},
{name: 'std.utf.isValidDchar', kind: "functiondeclaration", path: './std/utf/is_valid_dchar.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.utf.replacementDchar', kind: "enummemberdeclaration", path: './std/utf/replacement_dchar.html', attributes: []},
{name: 'std.utf.stride', kind: "functiondeclaration", path: './std/utf/stride.html', attributes: []},
{name: 'std.utf.strideBack', kind: "functiondeclaration", path: './std/utf/stride_back.html', attributes: []},
{name: 'std.utf.toUCSindex', kind: "functiondeclaration", path: './std/utf/to_uc_sindex.html', attributes: ["pure", "safe"]},
{name: 'std.utf.toUTF16', kind: "functiondeclaration", path: './std/utf/to_ut_f16.html', attributes: ["pure", "trusted"]},
{name: 'std.utf.toUTF16z', kind: "functiondeclaration", path: './std/utf/to_ut_f16z.html', attributes: ["pure", "safe"]},
{name: 'std.utf.toUTF32', kind: "functiondeclaration", path: './std/utf/to_ut_f32.html', attributes: ["pure", "trusted"]},
{name: 'std.utf.toUTF8', kind: "functiondeclaration", path: './std/utf/to_ut_f8.html', attributes: ["pure", "trusted"]},
{name: 'std.utf.toUTFindex', kind: "functiondeclaration", path: './std/utf/to_ut_findex.html', attributes: ["pure", "safe"]},
{name: 'std.utf.toUTFz', kind: "templatedeclaration", path: './std/utf/to_ut_fz.html', attributes: []},
{name: 'std.utf.toUTFz.toUTFz', kind: "functiondeclaration", path: './std/utf/to_ut_fz.to_ut_fz.html', attributes: ["pure", "safe"]},
{name: 'std.utf.UTFException', kind: "classdeclaration", path: './std/utf/utf_exception.html', attributes: []},
{name: 'std.utf.validate', kind: "functiondeclaration", path: './std/utf/validate.html', attributes: ["pure", "safe"]},
{name: 'std.uuid', kind: "module", path: './std/uuid.html', attributes: []},
{name: 'std.uuid.dnsNamespace', kind: "enummemberdeclaration", path: './std/uuid/dns_namespace.html', attributes: []},
{name: 'std.uuid.md5UUID', kind: "functiondeclaration", path: './std/uuid/md5_uuid.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.oidNamespace', kind: "enummemberdeclaration", path: './std/uuid/oid_namespace.html', attributes: []},
{name: 'std.uuid.parseUUID', kind: "functiondeclaration", path: './std/uuid/parse_uuid.html', attributes: []},
{name: 'std.uuid.randomUUID', kind: "functiondeclaration", path: './std/uuid/random_uuid.html', attributes: ["safe"]},
{name: 'std.uuid.sha1UUID', kind: "functiondeclaration", path: './std/uuid/sha1_uuid.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.urlNamespace', kind: "enummemberdeclaration", path: './std/uuid/url_namespace.html', attributes: []},
{name: 'std.uuid.UUID', kind: "structdeclaration", path: './std/uuid/uuid.html', attributes: []},
{name: 'std.uuid.UUID.data', kind: "variabledeclaration", path: './std/uuid/uuid.data.html', attributes: []},
{name: 'std.uuid.UUID.empty', kind: "functiondeclaration", path: './std/uuid/uuid.empty.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted", "const"]},
{name: 'std.uuid.UUID.opCmp', kind: "functiondeclaration", path: './std/uuid/uuid.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.opEquals', kind: "functiondeclaration", path: './std/uuid/uuid.op_equals.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.swap', kind: "functiondeclaration", path: './std/uuid/uuid.swap.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.UUID.this', kind: "functiondeclaration", path: './std/uuid/uuid.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'std.uuid.UUID.toHash', kind: "functiondeclaration", path: './std/uuid/uuid.to_hash.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.toString', kind: "functiondeclaration", path: './std/uuid/uuid.to_string.html', attributes: ["const"]},
{name: 'std.uuid.UUID.uuidVersion', kind: "functiondeclaration", path: './std/uuid/uuid.uuid_version.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.Variant', kind: "enumdeclaration", path: './std/uuid/uuid.variant.html', attributes: []},
{name: 'std.uuid.UUID.Variant.future', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.future.html', attributes: []},
{name: 'std.uuid.UUID.Variant.microsoft', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.microsoft.html', attributes: []},
{name: 'std.uuid.UUID.Variant.ncs', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.ncs.html', attributes: []},
{name: 'std.uuid.UUID.Variant.rfc4122', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.rfc4122.html', attributes: []},
{name: 'std.uuid.UUID.variant', kind: "functiondeclaration", path: './std/uuid/uuid.variant.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.Version', kind: "enumdeclaration", path: './std/uuid/uuid.version.html', attributes: []},
{name: 'std.uuid.UUID.Version.dceSecurity', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.dce_security.html', attributes: []},
{name: 'std.uuid.UUID.Version.nameBasedMD5', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.name_based_m_d5.html', attributes: []},
{name: 'std.uuid.UUID.Version.nameBasedSHA1', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.name_based_sh_a1.html', attributes: []},
{name: 'std.uuid.UUID.Version.randomNumberBased', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.random_number_based.html', attributes: []},
{name: 'std.uuid.UUID.Version.timeBased', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.time_based.html', attributes: []},
{name: 'std.uuid.UUID.Version.unknown', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.unknown.html', attributes: []},
{name: 'std.uuid.UUIDParsingException', kind: "classdeclaration", path: './std/uuid/uuid_parsing_exception.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.input', kind: "variabledeclaration", path: './std/uuid/uuid_parsing_exception.input.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.position', kind: "variabledeclaration", path: './std/uuid/uuid_parsing_exception.position.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason', kind: "enumdeclaration", path: './std/uuid/uuid_parsing_exception.reason.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.invalidChar', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.invalid_char.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.tooLittle', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.too_little.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.tooMuch', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.too_much.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.unknown', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.unknown.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.reason', kind: "variabledeclaration", path: './std/uuid/uuid_parsing_exception.reason.html', attributes: []},
{name: 'std.uuid.uuidRegex', kind: "enummemberdeclaration", path: './std/uuid/uuid_regex.html', attributes: []},
{name: 'std.uuid.x500Namespace', kind: "enummemberdeclaration", path: './std/uuid/x500_namespace.html', attributes: []},
{name: 'std.variant', kind: "module", path: './std/variant.html', attributes: []},
{name: 'std.variant.Algebraic', kind: "aliasdeclaration", path: './std/variant/algebraic.html', attributes: []},
{name: 'std.variant.maxSize', kind: "templatedeclaration", path: './std/variant/max_size.html', attributes: []},
{name: 'std.variant.tryVisit', kind: "templatedeclaration", path: './std/variant/try_visit.html', attributes: []},
{name: 'std.variant.tryVisit.tryVisit', kind: "functiondeclaration", path: './std/variant/try_visit.try_visit.html', attributes: ["auto"]},
{name: 'std.variant.Variant', kind: "aliasdeclaration", path: './std/variant/variant.html', attributes: []},
{name: 'std.variant.variantArray', kind: "functiondeclaration", path: './std/variant/variant_array.html', attributes: []},
{name: 'std.variant.VariantException', kind: "classdeclaration", path: './std/variant/variant_exception.html', attributes: []},
{name: 'std.variant.VariantException.source', kind: "variabledeclaration", path: './std/variant/variant_exception.source.html', attributes: []},
{name: 'std.variant.VariantException.target', kind: "variabledeclaration", path: './std/variant/variant_exception.target.html', attributes: []},
{name: 'std.variant.VariantN', kind: "structdeclaration", path: './std/variant/variant.html', attributes: []},
{name: 'std.variant.VariantN.allowed', kind: "templatedeclaration", path: './std/variant/variant.allowed.html', attributes: []},
{name: 'std.variant.VariantN.allowed.allowed', kind: "enummemberdeclaration", path: './std/variant/variant.allowed.allowed.html', attributes: []},
{name: 'std.variant.VariantN.coerce', kind: "templatedeclaration", path: './std/variant/variant.coerce.html', attributes: []},
{name: 'std.variant.VariantN.coerce.coerce', kind: "functiondeclaration", path: './std/variant/variant.coerce.coerce.html', attributes: ["property"]},
{name: 'std.variant.VariantN.convertsTo', kind: "templatedeclaration", path: './std/variant/variant.converts_to.html', attributes: []},
{name: 'std.variant.VariantN.convertsTo.convertsTo', kind: "functiondeclaration", path: './std/variant/variant.converts_to.converts_to.html', attributes: ["const", "property"]},
{name: 'std.variant.VariantN.get', kind: "templatedeclaration", path: './std/variant/variant.get.html', attributes: []},
{name: 'std.variant.VariantN.get.get', kind: "functiondeclaration", path: './std/variant/variant.get.get.html', attributes: ["property"]},
{name: 'std.variant.VariantN.hasValue', kind: "functiondeclaration", path: './std/variant/variant.has_value.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.variant.VariantN.length', kind: "functiondeclaration", path: './std/variant/variant.length.html', attributes: ["property"]},
{name: 'std.variant.VariantN.opAdd', kind: "templatedeclaration", path: './std/variant/variant.op_add.html', attributes: []},
{name: 'std.variant.VariantN.opAdd.opAdd', kind: "functiondeclaration", path: './std/variant/variant.op_add.op_add.html', attributes: []},
{name: 'std.variant.VariantN.opAddAssign', kind: "templatedeclaration", path: './std/variant/variant.op_add_assign.html', attributes: []},
{name: 'std.variant.VariantN.opAddAssign.opAddAssign', kind: "functiondeclaration", path: './std/variant/variant.op_add_assign.op_add_assign.html', attributes: []},
{name: 'std.variant.VariantN.opAnd', kind: "templatedeclaration", path: './std/variant/variant.op_and.html', attributes: []},
{name: 'std.variant.VariantN.opAnd.opAnd', kind: "functiondeclaration", path: './std/variant/variant.op_and.op_and.html', attributes: []},
{name: 'std.variant.VariantN.opAndAssign', kind: "templatedeclaration", path: './std/variant/variant.op_and_assign.html', attributes: []},
{name: 'std.variant.VariantN.opAndAssign.opAndAssign', kind: "functiondeclaration", path: './std/variant/variant.op_and_assign.op_and_assign.html', attributes: []},
{name: 'std.variant.VariantN.opApply', kind: "templatedeclaration", path: './std/variant/variant.op_apply.html', attributes: []},
{name: 'std.variant.VariantN.opApply.opApply', kind: "functiondeclaration", path: './std/variant/variant.op_apply.op_apply.html', attributes: []},
{name: 'std.variant.VariantN.opAssign', kind: "templatedeclaration", path: './std/variant/variant.op_assign.html', attributes: []},
{name: 'std.variant.VariantN.opAssign.opAssign', kind: "functiondeclaration", path: './std/variant/variant.op_assign.op_assign.html', attributes: []},
{name: 'std.variant.VariantN.opCat', kind: "templatedeclaration", path: './std/variant/variant.op_cat.html', attributes: []},
{name: 'std.variant.VariantN.opCat.opCat', kind: "functiondeclaration", path: './std/variant/variant.op_cat.op_cat.html', attributes: []},
{name: 'std.variant.VariantN.opCatAssign', kind: "templatedeclaration", path: './std/variant/variant.op_cat_assign.html', attributes: []},
{name: 'std.variant.VariantN.opCatAssign.opCatAssign', kind: "functiondeclaration", path: './std/variant/variant.op_cat_assign.op_cat_assign.html', attributes: []},
{name: 'std.variant.VariantN.opCmp', kind: "templatedeclaration", path: './std/variant/variant.op_cmp.html', attributes: []},
{name: 'std.variant.VariantN.opCmp.opCmp', kind: "functiondeclaration", path: './std/variant/variant.op_cmp.op_cmp.html', attributes: []},
{name: 'std.variant.VariantN.opDiv', kind: "templatedeclaration", path: './std/variant/variant.op_div.html', attributes: []},
{name: 'std.variant.VariantN.opDiv.opDiv', kind: "functiondeclaration", path: './std/variant/variant.op_div.op_div.html', attributes: []},
{name: 'std.variant.VariantN.opDivAssign', kind: "templatedeclaration", path: './std/variant/variant.op_div_assign.html', attributes: []},
{name: 'std.variant.VariantN.opDivAssign.opDivAssign', kind: "functiondeclaration", path: './std/variant/variant.op_div_assign.op_div_assign.html', attributes: []},
{name: 'std.variant.VariantN.opEquals', kind: "templatedeclaration", path: './std/variant/variant.op_equals.html', attributes: []},
{name: 'std.variant.VariantN.opEquals.opEquals', kind: "functiondeclaration", path: './std/variant/variant.op_equals.op_equals.html', attributes: ["const"]},
{name: 'std.variant.VariantN.opIndex', kind: "templatedeclaration", path: './std/variant/variant.op_index.html', attributes: []},
{name: 'std.variant.VariantN.opIndex.opIndex', kind: "functiondeclaration", path: './std/variant/variant.op_index.op_index.html', attributes: []},
{name: 'std.variant.VariantN.opIndexAssign', kind: "templatedeclaration", path: './std/variant/variant.op_index_assign.html', attributes: []},
{name: 'std.variant.VariantN.opIndexAssign.opIndexAssign', kind: "functiondeclaration", path: './std/variant/variant.op_index_assign.op_index_assign.html', attributes: []},
{name: 'std.variant.VariantN.opMod', kind: "templatedeclaration", path: './std/variant/variant.op_mod.html', attributes: []},
{name: 'std.variant.VariantN.opMod.opMod', kind: "functiondeclaration", path: './std/variant/variant.op_mod.op_mod.html', attributes: []},
{name: 'std.variant.VariantN.opModAssign', kind: "templatedeclaration", path: './std/variant/variant.op_mod_assign.html', attributes: []},
{name: 'std.variant.VariantN.opModAssign.opModAssign', kind: "functiondeclaration", path: './std/variant/variant.op_mod_assign.op_mod_assign.html', attributes: []},
{name: 'std.variant.VariantN.opMul', kind: "templatedeclaration", path: './std/variant/variant.op_mul.html', attributes: []},
{name: 'std.variant.VariantN.opMul.opMul', kind: "functiondeclaration", path: './std/variant/variant.op_mul.op_mul.html', attributes: []},
{name: 'std.variant.VariantN.opMulAssign', kind: "templatedeclaration", path: './std/variant/variant.op_mul_assign.html', attributes: []},
{name: 'std.variant.VariantN.opMulAssign.opMulAssign', kind: "functiondeclaration", path: './std/variant/variant.op_mul_assign.op_mul_assign.html', attributes: []},
{name: 'std.variant.VariantN.opOr', kind: "templatedeclaration", path: './std/variant/variant.op_or.html', attributes: []},
{name: 'std.variant.VariantN.opOr.opOr', kind: "functiondeclaration", path: './std/variant/variant.op_or.op_or.html', attributes: []},
{name: 'std.variant.VariantN.opOrAssign', kind: "templatedeclaration", path: './std/variant/variant.op_or_assign.html', attributes: []},
{name: 'std.variant.VariantN.opOrAssign.opOrAssign', kind: "functiondeclaration", path: './std/variant/variant.op_or_assign.op_or_assign.html', attributes: []},
{name: 'std.variant.VariantN.opShl', kind: "templatedeclaration", path: './std/variant/variant.op_shl.html', attributes: []},
{name: 'std.variant.VariantN.opShl.opShl', kind: "functiondeclaration", path: './std/variant/variant.op_shl.op_shl.html', attributes: []},
{name: 'std.variant.VariantN.opShlAssign', kind: "templatedeclaration", path: './std/variant/variant.op_shl_assign.html', attributes: []},
{name: 'std.variant.VariantN.opShlAssign.opShlAssign', kind: "functiondeclaration", path: './std/variant/variant.op_shl_assign.op_shl_assign.html', attributes: []},
{name: 'std.variant.VariantN.opShr', kind: "templatedeclaration", path: './std/variant/variant.op_shr.html', attributes: []},
{name: 'std.variant.VariantN.opShr.opShr', kind: "functiondeclaration", path: './std/variant/variant.op_shr.op_shr.html', attributes: []},
{name: 'std.variant.VariantN.opShrAssign', kind: "templatedeclaration", path: './std/variant/variant.op_shr_assign.html', attributes: []},
{name: 'std.variant.VariantN.opShrAssign.opShrAssign', kind: "functiondeclaration", path: './std/variant/variant.op_shr_assign.op_shr_assign.html', attributes: []},
{name: 'std.variant.VariantN.opSub', kind: "templatedeclaration", path: './std/variant/variant.op_sub.html', attributes: []},
{name: 'std.variant.VariantN.opSub.opSub', kind: "functiondeclaration", path: './std/variant/variant.op_sub.op_sub.html', attributes: []},
{name: 'std.variant.VariantN.opSubAssign', kind: "templatedeclaration", path: './std/variant/variant.op_sub_assign.html', attributes: []},
{name: 'std.variant.VariantN.opSubAssign.opSubAssign', kind: "functiondeclaration", path: './std/variant/variant.op_sub_assign.op_sub_assign.html', attributes: []},
{name: 'std.variant.VariantN.opUShr', kind: "templatedeclaration", path: './std/variant/variant.op_u_shr.html', attributes: []},
{name: 'std.variant.VariantN.opUShr.opUShr', kind: "functiondeclaration", path: './std/variant/variant.op_u_shr.op_u_shr.html', attributes: []},
{name: 'std.variant.VariantN.opUShrAssign', kind: "templatedeclaration", path: './std/variant/variant.op_u_shr_assign.html', attributes: []},
{name: 'std.variant.VariantN.opUShrAssign.opUShrAssign', kind: "functiondeclaration", path: './std/variant/variant.op_u_shr_assign.op_u_shr_assign.html', attributes: []},
{name: 'std.variant.VariantN.opXor', kind: "templatedeclaration", path: './std/variant/variant.op_xor.html', attributes: []},
{name: 'std.variant.VariantN.opXor.opXor', kind: "functiondeclaration", path: './std/variant/variant.op_xor.op_xor.html', attributes: []},
{name: 'std.variant.VariantN.opXorAssign', kind: "templatedeclaration", path: './std/variant/variant.op_xor_assign.html', attributes: []},
{name: 'std.variant.VariantN.opXorAssign.opXorAssign', kind: "functiondeclaration", path: './std/variant/variant.op_xor_assign.op_xor_assign.html', attributes: []},
{name: 'std.variant.VariantN.peek', kind: "templatedeclaration", path: './std/variant/variant.peek.html', attributes: []},
{name: 'std.variant.VariantN.peek.peek', kind: "functiondeclaration", path: './std/variant/variant.peek.peek.html', attributes: ["inout", "property"]},
{name: 'std.variant.VariantN.this', kind: "templatedeclaration", path: './std/variant/variant.this.html', attributes: []},
{name: 'std.variant.VariantN.this.this', kind: "functiondeclaration", path: './std/variant/variant.this.this.html', attributes: []},
{name: 'std.variant.VariantN.toHash', kind: "functiondeclaration", path: './std/variant/variant.to_hash.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.variant.VariantN.toString', kind: "functiondeclaration", path: './std/variant/variant.to_string.html', attributes: []},
{name: 'std.variant.VariantN.type', kind: "functiondeclaration", path: './std/variant/variant.type.html', attributes: ["const", "nothrow", "property", "trusted"]},
{name: 'std.variant.visit', kind: "templatedeclaration", path: './std/variant/visit.html', attributes: []},
{name: 'std.variant.visit.visit', kind: "functiondeclaration", path: './std/variant/visit.visit.html', attributes: ["auto"]},
{name: 'std.xml', kind: "module", path: './std/xml.html', attributes: []},
{name: 'std.xml.CData', kind: "classdeclaration", path: './std/xml/c_data.html', attributes: []},
{name: 'std.xml.CData.isEmptyXML', kind: "functiondeclaration", path: './std/xml/c_data.is_empty_xml.html', attributes: ["property", "const", "override"]},
{name: 'std.xml.CData.opCmp', kind: "functiondeclaration", path: './std/xml/c_data.op_cmp.html', attributes: ["override"]},
{name: 'std.xml.CData.opEquals', kind: "functiondeclaration", path: './std/xml/c_data.op_equals.html', attributes: ["override"]},
{name: 'std.xml.CData.this', kind: "functiondeclaration", path: './std/xml/c_data.this.html', attributes: []},
{name: 'std.xml.CData.toHash', kind: "functiondeclaration", path: './std/xml/c_data.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.CData.toString', kind: "functiondeclaration", path: './std/xml/c_data.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.Item.pretty', kind: "functiondeclaration", path: './std/xml/item.pretty.html', attributes: ["const"]},
{name: 'std.xml.CDataException', kind: "classdeclaration", path: './std/xml/c_data_exception.html', attributes: []},
{name: 'std.xml.check', kind: "functiondeclaration", path: './std/xml/check.html', attributes: []},
{name: 'std.xml.CheckException', kind: "classdeclaration", path: './std/xml/check_exception.html', attributes: []},
{name: 'std.xml.CheckException.column', kind: "variabledeclaration", path: './std/xml/check_exception.column.html', attributes: []},
{name: 'std.xml.CheckException.err', kind: "variabledeclaration", path: './std/xml/check_exception.err.html', attributes: []},
{name: 'std.xml.CheckException.line', kind: "variabledeclaration", path: './std/xml/check_exception.line.html', attributes: []},
{name: 'std.xml.CheckException.msg', kind: "variabledeclaration", path: './std/xml/check_exception.msg.html', attributes: []},
{name: 'std.xml.Comment', kind: "classdeclaration", path: './std/xml/comment.html', attributes: []},
{name: 'std.xml.Comment.isEmptyXML', kind: "functiondeclaration", path: './std/xml/comment.is_empty_xml.html', attributes: ["property", "const", "override"]},
{name: 'std.xml.Comment.opCmp', kind: "functiondeclaration", path: './std/xml/comment.op_cmp.html', attributes: ["override"]},
{name: 'std.xml.Comment.opEquals', kind: "functiondeclaration", path: './std/xml/comment.op_equals.html', attributes: ["override"]},
{name: 'std.xml.Comment.this', kind: "functiondeclaration", path: './std/xml/comment.this.html', attributes: []},
{name: 'std.xml.Comment.toHash', kind: "functiondeclaration", path: './std/xml/comment.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.Comment.toString', kind: "functiondeclaration", path: './std/xml/comment.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.CommentException', kind: "classdeclaration", path: './std/xml/comment_exception.html', attributes: []},
{name: 'std.xml.decode', kind: "functiondeclaration", path: './std/xml/decode.html', attributes: []},
{name: 'std.xml.DecodeException', kind: "classdeclaration", path: './std/xml/decode_exception.html', attributes: []},
{name: 'std.xml.DecodeMode', kind: "enumdeclaration", path: './std/xml/decode_mode.html', attributes: []},
{name: 'std.xml.Document', kind: "classdeclaration", path: './std/xml/document.html', attributes: []},
{name: 'std.xml.Document.epilog', kind: "variabledeclaration", path: './std/xml/document.epilog.html', attributes: []},
{name: 'std.xml.Document.opCmp', kind: "functiondeclaration", path: './std/xml/document.op_cmp.html', attributes: ["const", "override"]},
{name: 'std.xml.Document.opEquals', kind: "functiondeclaration", path: './std/xml/document.op_equals.html', attributes: ["const", "override"]},
{name: 'std.xml.Document.prolog', kind: "variabledeclaration", path: './std/xml/document.prolog.html', attributes: []},
{name: 'std.xml.Document.this', kind: "functiondeclaration", path: './std/xml/document.this.html', attributes: []},
{name: 'std.xml.Document.toHash', kind: "functiondeclaration", path: './std/xml/document.to_hash.html', attributes: ["nothrow", "trusted", "const", "override"]},
{name: 'std.xml.Document.toString', kind: "functiondeclaration", path: './std/xml/document.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.Element.cdatas', kind: "variabledeclaration", path: './std/xml/element.cdatas.html', attributes: []},
{name: 'std.xml.Element.comments', kind: "variabledeclaration", path: './std/xml/element.comments.html', attributes: []},
{name: 'std.xml.Element.elements', kind: "variabledeclaration", path: './std/xml/element.elements.html', attributes: []},
{name: 'std.xml.Item.isEmptyXML', kind: "functiondeclaration", path: './std/xml/item.is_empty_xml.html', attributes: ["property", "const", "abstract"]},
{name: 'std.xml.Element.items', kind: "variabledeclaration", path: './std/xml/element.items.html', attributes: []},
{name: 'std.xml.Element.opCatAssign', kind: "functiondeclaration", path: './std/xml/element.op_cat_assign.html', attributes: []},
{name: 'std.xml.Element.opCmp', kind: "functiondeclaration", path: './std/xml/element.op_cmp.html', attributes: ["override"]},
{name: 'std.xml.Element.opEquals', kind: "functiondeclaration", path: './std/xml/element.op_equals.html', attributes: ["override"]},
{name: 'std.xml.Element.pis', kind: "variabledeclaration", path: './std/xml/element.pis.html', attributes: []},
{name: 'std.xml.Element.pretty', kind: "functiondeclaration", path: './std/xml/element.pretty.html', attributes: ["const", "override"]},
{name: 'std.xml.Element.tag', kind: "variabledeclaration", path: './std/xml/element.tag.html', attributes: []},
{name: 'std.xml.Element.text', kind: "functiondeclaration", path: './std/xml/element.text.html', attributes: ["const"]},
{name: 'std.xml.Element.texts', kind: "variabledeclaration", path: './std/xml/element.texts.html', attributes: []},
{name: 'std.xml.Element.toHash', kind: "functiondeclaration", path: './std/xml/element.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.DocumentParser', kind: "classdeclaration", path: './std/xml/document_parser.html', attributes: []},
{name: 'std.xml.DocumentParser.this', kind: "functiondeclaration", path: './std/xml/document_parser.this.html', attributes: []},
{name: 'std.xml.ElementParser.onCData', kind: "functiondeclaration", path: './std/xml/element_parser.on_c_data.html', attributes: ["property"]},
{name: 'std.xml.ElementParser.onComment', kind: "functiondeclaration", path: './std/xml/element_parser.on_comment.html', attributes: ["property"]},
{name: 'std.xml.ElementParser.onEndTag', kind: "variabledeclaration", path: './std/xml/element_parser.on_end_tag.html', attributes: []},
{name: 'std.xml.ElementParser.onPI', kind: "functiondeclaration", path: './std/xml/element_parser.on_pi.html', attributes: ["property"]},
{name: 'std.xml.ElementParser.onStartTag', kind: "variabledeclaration", path: './std/xml/element_parser.on_start_tag.html', attributes: []},
{name: 'std.xml.ElementParser.onText', kind: "functiondeclaration", path: './std/xml/element_parser.on_text.html', attributes: ["property"]},
{name: 'std.xml.ElementParser.onTextRaw', kind: "functiondeclaration", path: './std/xml/element_parser.on_text_raw.html', attributes: []},
{name: 'std.xml.ElementParser.onXI', kind: "functiondeclaration", path: './std/xml/element_parser.on_xi.html', attributes: ["property"]},
{name: 'std.xml.ElementParser.parse', kind: "functiondeclaration", path: './std/xml/element_parser.parse.html', attributes: []},
{name: 'std.xml.ElementParser.tag', kind: "functiondeclaration", path: './std/xml/element_parser.tag.html', attributes: ["property", "const"]},
{name: 'std.xml.ElementParser.toString', kind: "functiondeclaration", path: './std/xml/element_parser.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.Element', kind: "classdeclaration", path: './std/xml/element.html', attributes: []},
{name: 'std.xml.Element.this', kind: "functiondeclaration", path: './std/xml/element.this.html', attributes: []},
{name: 'std.xml.Element.toString', kind: "functiondeclaration", path: './std/xml/element.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.ElementParser', kind: "classdeclaration", path: './std/xml/element_parser.html', attributes: []},
{name: 'std.xml.encode', kind: "functiondeclaration", path: './std/xml/encode.html', attributes: []},
{name: 'std.xml.InvalidTypeException', kind: "classdeclaration", path: './std/xml/invalid_type_exception.html', attributes: []},
{name: 'std.xml.isBaseChar', kind: "functiondeclaration", path: './std/xml/is_base_char.html', attributes: []},
{name: 'std.xml.isChar', kind: "functiondeclaration", path: './std/xml/is_char.html', attributes: []},
{name: 'std.xml.isCombiningChar', kind: "functiondeclaration", path: './std/xml/is_combining_char.html', attributes: []},
{name: 'std.xml.isDigit', kind: "functiondeclaration", path: './std/xml/is_digit.html', attributes: []},
{name: 'std.xml.isExtender', kind: "functiondeclaration", path: './std/xml/is_extender.html', attributes: []},
{name: 'std.xml.isIdeographic', kind: "functiondeclaration", path: './std/xml/is_ideographic.html', attributes: []},
{name: 'std.xml.isLetter', kind: "functiondeclaration", path: './std/xml/is_letter.html', attributes: []},
{name: 'std.xml.isSpace', kind: "functiondeclaration", path: './std/xml/is_space.html', attributes: []},
{name: 'std.xml.Item', kind: "classdeclaration", path: './std/xml/item.html', attributes: []},
{name: 'std.xml.Item.opCmp', kind: "functiondeclaration", path: './std/xml/item.op_cmp.html', attributes: ["abstract", "override"]},
{name: 'std.xml.Item.opEquals', kind: "functiondeclaration", path: './std/xml/item.op_equals.html', attributes: ["abstract", "override"]},
{name: 'std.xml.Item.toHash', kind: "functiondeclaration", path: './std/xml/item.to_hash.html', attributes: ["nothrow", "safe", "const", "abstract", "override"]},
{name: 'std.xml.Item.toString', kind: "functiondeclaration", path: './std/xml/item.to_string.html', attributes: ["const", "abstract", "override"]},
{name: 'std.xml.PIException', kind: "classdeclaration", path: './std/xml/pi_exception.html', attributes: []},
{name: 'std.xml.ProcessingInstruction', kind: "classdeclaration", path: './std/xml/processing_instruction.html', attributes: []},
{name: 'std.xml.ProcessingInstruction.isEmptyXML', kind: "functiondeclaration", path: './std/xml/processing_instruction.is_empty_xml.html', attributes: ["property", "const", "override"]},
{name: 'std.xml.ProcessingInstruction.opCmp', kind: "functiondeclaration", path: './std/xml/processing_instruction.op_cmp.html', attributes: ["override"]},
{name: 'std.xml.ProcessingInstruction.opEquals', kind: "functiondeclaration", path: './std/xml/processing_instruction.op_equals.html', attributes: ["override"]},
{name: 'std.xml.ProcessingInstruction.this', kind: "functiondeclaration", path: './std/xml/processing_instruction.this.html', attributes: []},
{name: 'std.xml.ProcessingInstruction.toHash', kind: "functiondeclaration", path: './std/xml/processing_instruction.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.ProcessingInstruction.toString', kind: "functiondeclaration", path: './std/xml/processing_instruction.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.Tag', kind: "classdeclaration", path: './std/xml/tag.html', attributes: []},
{name: 'std.xml.Tag.attr', kind: "variabledeclaration", path: './std/xml/tag.attr.html', attributes: []},
{name: 'std.xml.Tag.isEmpty', kind: "functiondeclaration", path: './std/xml/tag.is_empty.html', attributes: ["property", "const"]},
{name: 'std.xml.Tag.isEnd', kind: "functiondeclaration", path: './std/xml/tag.is_end.html', attributes: ["property", "const"]},
{name: 'std.xml.Tag.isStart', kind: "functiondeclaration", path: './std/xml/tag.is_start.html', attributes: ["property", "const"]},
{name: 'std.xml.Tag.name', kind: "variabledeclaration", path: './std/xml/tag.name.html', attributes: []},
{name: 'std.xml.Tag.opCmp', kind: "functiondeclaration", path: './std/xml/tag.op_cmp.html', attributes: ["const", "override"]},
{name: 'std.xml.Tag.opEquals', kind: "functiondeclaration", path: './std/xml/tag.op_equals.html', attributes: ["const", "override"]},
{name: 'std.xml.Tag.this', kind: "functiondeclaration", path: './std/xml/tag.this.html', attributes: []},
{name: 'std.xml.Tag.toHash', kind: "functiondeclaration", path: './std/xml/tag.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.Tag.toString', kind: "functiondeclaration", path: './std/xml/tag.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.Tag.type', kind: "variabledeclaration", path: './std/xml/tag.type.html', attributes: []},
{name: 'std.xml.TagException', kind: "classdeclaration", path: './std/xml/tag_exception.html', attributes: []},
{name: 'std.xml.TagType', kind: "enumdeclaration", path: './std/xml/tag_type.html', attributes: []},
{name: 'std.xml.Text', kind: "classdeclaration", path: './std/xml/text.html', attributes: []},
{name: 'std.xml.Text.isEmptyXML', kind: "functiondeclaration", path: './std/xml/text.is_empty_xml.html', attributes: ["property", "const", "override"]},
{name: 'std.xml.Text.opCmp', kind: "functiondeclaration", path: './std/xml/text.op_cmp.html', attributes: ["override"]},
{name: 'std.xml.Text.opEquals', kind: "functiondeclaration", path: './std/xml/text.op_equals.html', attributes: ["override"]},
{name: 'std.xml.Text.this', kind: "functiondeclaration", path: './std/xml/text.this.html', attributes: []},
{name: 'std.xml.Text.toHash', kind: "functiondeclaration", path: './std/xml/text.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.Text.toString', kind: "functiondeclaration", path: './std/xml/text.to_string.html', attributes: ["const", "override"]},
{name: 'std.xml.TextException', kind: "classdeclaration", path: './std/xml/text_exception.html', attributes: []},
{name: 'std.xml.XIException', kind: "classdeclaration", path: './std/xml/xi_exception.html', attributes: []},
{name: 'std.xml.XMLException', kind: "classdeclaration", path: './std/xml/xml_exception.html', attributes: []},
{name: 'std.xml.XMLInstruction', kind: "classdeclaration", path: './std/xml/xml_instruction.html', attributes: []},
{name: 'std.xml.XMLInstruction.isEmptyXML', kind: "functiondeclaration", path: './std/xml/xml_instruction.is_empty_xml.html', attributes: ["property", "const", "override"]},
{name: 'std.xml.XMLInstruction.opCmp', kind: "functiondeclaration", path: './std/xml/xml_instruction.op_cmp.html', attributes: ["override"]},
{name: 'std.xml.XMLInstruction.opEquals', kind: "functiondeclaration", path: './std/xml/xml_instruction.op_equals.html', attributes: ["override"]},
{name: 'std.xml.XMLInstruction.this', kind: "functiondeclaration", path: './std/xml/xml_instruction.this.html', attributes: []},
{name: 'std.xml.XMLInstruction.toHash', kind: "functiondeclaration", path: './std/xml/xml_instruction.to_hash.html', attributes: ["nothrow", "safe", "const", "override"]},
{name: 'std.xml.XMLInstruction.toString', kind: "functiondeclaration", path: './std/xml/xml_instruction.to_string.html', attributes: ["const", "override"]},
{name: 'std.zip', kind: "module", path: './std/zip.html', attributes: []},
{name: 'std.zip.ArchiveMember', kind: "classdeclaration", path: './std/zip/archive_member.html', attributes: []},
{name: 'std.zip.ArchiveMember.comment', kind: "variabledeclaration", path: './std/zip/archive_member.comment.html', attributes: []},
{name: 'std.zip.ArchiveMember.compressedData', kind: "functiondeclaration", path: './std/zip/archive_member.compressed_data.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.compressedSize', kind: "functiondeclaration", path: './std/zip/archive_member.compressed_size.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.compressionMethod', kind: "functiondeclaration", path: './std/zip/archive_member.compression_method.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.crc32', kind: "functiondeclaration", path: './std/zip/archive_member.crc32.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.diskNumber', kind: "functiondeclaration", path: './std/zip/archive_member.disk_number.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.expandedData', kind: "functiondeclaration", path: './std/zip/archive_member.expanded_data.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.expandedSize', kind: "functiondeclaration", path: './std/zip/archive_member.expanded_size.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.extra', kind: "variabledeclaration", path: './std/zip/archive_member.extra.html', attributes: []},
{name: 'std.zip.ArchiveMember.extractVersion', kind: "functiondeclaration", path: './std/zip/archive_member.extract_version.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.fileAttributes', kind: "functiondeclaration", path: './std/zip/archive_member.file_attributes.html', attributes: ["property"]},
{name: 'std.zip.ArchiveMember.flags', kind: "variabledeclaration", path: './std/zip/archive_member.flags.html', attributes: []},
{name: 'std.zip.ArchiveMember.internalAttributes', kind: "variabledeclaration", path: './std/zip/archive_member.internal_attributes.html', attributes: []},
{name: 'std.zip.ArchiveMember.name', kind: "variabledeclaration", path: './std/zip/archive_member.name.html', attributes: []},
{name: 'std.zip.ArchiveMember.time', kind: "functiondeclaration", path: './std/zip/archive_member.time.html', attributes: ["property"]},
{name: 'std.zip.CompressionMethod', kind: "enumdeclaration", path: './std/zip/compression_method.html', attributes: []},
{name: 'std.zip.CompressionMethod.deflate', kind: "enummemberdeclaration", path: './std/zip/compression_method.deflate.html', attributes: []},
{name: 'std.zip.CompressionMethod.none', kind: "enummemberdeclaration", path: './std/zip/compression_method.none.html', attributes: []},
{name: 'std.zip.ZipArchive', kind: "classdeclaration", path: './std/zip/zip_archive.html', attributes: []},
{name: 'std.zip.ZipArchive.addMember', kind: "functiondeclaration", path: './std/zip/zip_archive.add_member.html', attributes: []},
{name: 'std.zip.ZipArchive.build', kind: "functiondeclaration", path: './std/zip/zip_archive.build.html', attributes: []},
{name: 'std.zip.ZipArchive.comment', kind: "variabledeclaration", path: './std/zip/zip_archive.comment.html', attributes: []},
{name: 'std.zip.ZipArchive.data', kind: "functiondeclaration", path: './std/zip/zip_archive.data.html', attributes: ["property"]},
{name: 'std.zip.ZipArchive.deleteMember', kind: "functiondeclaration", path: './std/zip/zip_archive.delete_member.html', attributes: []},
{name: 'std.zip.ZipArchive.directory', kind: "functiondeclaration", path: './std/zip/zip_archive.directory.html', attributes: ["property"]},
{name: 'std.zip.ZipArchive.diskNumber', kind: "functiondeclaration", path: './std/zip/zip_archive.disk_number.html', attributes: ["property"]},
{name: 'std.zip.ZipArchive.diskStartDir', kind: "functiondeclaration", path: './std/zip/zip_archive.disk_start_dir.html', attributes: ["property"]},
{name: 'std.zip.ZipArchive.expand', kind: "functiondeclaration", path: './std/zip/zip_archive.expand.html', attributes: []},
{name: 'std.zip.ZipArchive.isZip64', kind: "functiondeclaration", path: './std/zip/zip_archive.is_zip64.html', attributes: ["property"]},
{name: 'std.zip.ZipArchive.numEntries', kind: "functiondeclaration", path: './std/zip/zip_archive.num_entries.html', attributes: ["property"]},
{name: 'std.zip.ZipArchive.this', kind: "functiondeclaration", path: './std/zip/zip_archive.this.html', attributes: []},
{name: 'std.zip.ZipArchive.totalEntries', kind: "functiondeclaration", path: './std/zip/zip_archive.total_entries.html', attributes: ["property"]},
{name: 'std.zip.ZipException', kind: "classdeclaration", path: './std/zip/zip_exception.html', attributes: []},
{name: 'std.zlib', kind: "module", path: './std/zlib.html', attributes: []},
{name: 'std.zlib.adler32', kind: "functiondeclaration", path: './std/zlib/adler32.html', attributes: []},
{name: 'std.zlib.compress', kind: "functiondeclaration", path: './std/zlib/compress.html', attributes: []},
{name: 'std.zlib.Compress', kind: "classdeclaration", path: './std/zlib/compress.html', attributes: []},
{name: 'std.zlib.Compress.compress', kind: "functiondeclaration", path: './std/zlib/compress.compress.html', attributes: []},
{name: 'std.zlib.Compress.flush', kind: "functiondeclaration", path: './std/zlib/compress.flush.html', attributes: []},
{name: 'std.zlib.Compress.this', kind: "functiondeclaration", path: './std/zlib/compress.this.html', attributes: []},
{name: 'std.zlib.crc32', kind: "functiondeclaration", path: './std/zlib/crc32.html', attributes: []},
{name: 'std.zlib.HeaderFormat', kind: "enumdeclaration", path: './std/zlib/header_format.html', attributes: []},
{name: 'std.zlib.HeaderFormat.deflate', kind: "enummemberdeclaration", path: './std/zlib/header_format.deflate.html', attributes: []},
{name: 'std.zlib.HeaderFormat.determineFromData', kind: "enummemberdeclaration", path: './std/zlib/header_format.determine_from_data.html', attributes: []},
{name: 'std.zlib.HeaderFormat.gzip', kind: "enummemberdeclaration", path: './std/zlib/header_format.gzip.html', attributes: []},
{name: 'std.zlib.uncompress', kind: "functiondeclaration", path: './std/zlib/uncompress.html', attributes: []},
{name: 'std.zlib.UnCompress', kind: "classdeclaration", path: './std/zlib/un_compress.html', attributes: []},
{name: 'std.zlib.UnCompress.flush', kind: "functiondeclaration", path: './std/zlib/un_compress.flush.html', attributes: []},
{name: 'std.zlib.UnCompress.this', kind: "functiondeclaration", path: './std/zlib/un_compress.this.html', attributes: []},
{name: 'std.zlib.UnCompress.uncompress', kind: "functiondeclaration", path: './std/zlib/un_compress.uncompress.html', attributes: []},
{name: 'std.zlib.ZlibException', kind: "classdeclaration", path: './std/zlib/zlib_exception.html', attributes: []},
{name: 'core.sync.barrier', kind: "module", path: './core/sync/barrier.html', attributes: []},
{name: 'core.sync.barrier.Barrier', kind: "classdeclaration", path: './core/sync/barrier/barrier.html', attributes: []},
{name: 'core.sync.barrier.Barrier.this', kind: "functiondeclaration", path: './core/sync/barrier/barrier.this.html', attributes: []},
{name: 'core.sync.barrier.Barrier.wait', kind: "functiondeclaration", path: './core/sync/barrier/barrier.wait.html', attributes: []},
{name: 'core.sync.condition', kind: "module", path: './core/sync/condition.html', attributes: []},
{name: 'core.sync.condition.Condition', kind: "classdeclaration", path: './core/sync/condition/condition.html', attributes: []},
{name: 'core.sync.condition.Condition.mutex', kind: "functiondeclaration", path: './core/sync/condition/condition.mutex.html', attributes: ["property"]},
{name: 'core.sync.condition.Condition.notify', kind: "functiondeclaration", path: './core/sync/condition/condition.notify.html', attributes: []},
{name: 'core.sync.condition.Condition.notifyAll', kind: "functiondeclaration", path: './core/sync/condition/condition.notify_all.html', attributes: []},
{name: 'core.sync.condition.Condition.this', kind: "functiondeclaration", path: './core/sync/condition/condition.this.html', attributes: ["nothrow", "safe"]},
{name: 'core.sync.condition.Condition.wait', kind: "functiondeclaration", path: './core/sync/condition/condition.wait.html', attributes: []},
{name: 'core.sync.config', kind: "module", path: './core/sync/config.html', attributes: []},
{name: 'core.sync.exception', kind: "module", path: './core/sync/exception.html', attributes: []},
{name: 'core.sync.exception.SyncError', kind: "classdeclaration", path: './core/sync/exception/sync_error.html', attributes: []},
{name: 'object.Error.bypassedException', kind: "variabledeclaration", path: './object/error.bypassed_exception.html', attributes: []},
{name: 'core.sync.mutex', kind: "module", path: './core/sync/mutex.html', attributes: []},
{name: 'core.sync.mutex.Mutex', kind: "classdeclaration", path: './core/sync/mutex/mutex.html', attributes: []},
{name: 'core.sync.mutex.Mutex.lock', kind: "functiondeclaration", path: './core/sync/mutex/mutex.lock.html', attributes: ["trusted"]},
{name: 'core.sync.mutex.Mutex.this', kind: "functiondeclaration", path: './core/sync/mutex/mutex.this.html', attributes: ["nothrow", "trusted"]},
{name: 'core.sync.mutex.Mutex.tryLock', kind: "functiondeclaration", path: './core/sync/mutex/mutex.try_lock.html', attributes: []},
{name: 'core.sync.mutex.Mutex.unlock', kind: "functiondeclaration", path: './core/sync/mutex/mutex.unlock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex', kind: "module", path: './core/sync/rwmutex.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex', kind: "classdeclaration", path: './core/sync/rwmutex/read_write_mutex.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Policy', kind: "enumdeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Policy.PREFER_READERS', kind: "enummemberdeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.prefe_r_readers.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Policy.PREFER_WRITERS', kind: "enummemberdeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.prefe_r_writers.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.policy', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.html', attributes: ["property"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.reader', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.html', attributes: ["property"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader', kind: "classdeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.lock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.lock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.this', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.this.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.tryLock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.try_lock.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.unlock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.unlock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.this', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.this.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.writer', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.html', attributes: ["property"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer', kind: "classdeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.lock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.lock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.this', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.this.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.tryLock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.try_lock.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.unlock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.unlock.html', attributes: ["trusted"]},
{name: 'core.sync.semaphore', kind: "module", path: './core/sync/semaphore.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore', kind: "classdeclaration", path: './core/sync/semaphore/semaphore.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.notify', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.notify.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.this', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.this.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.tryWait', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.try_wait.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.wait', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.wait.html', attributes: []},
{name: 'core.atomic', kind: "module", path: './core/atomic.html', attributes: []},
{name: 'core.atomic.atomicFence', kind: "functiondeclaration", path: './core/atomic/atomic_fence.html', attributes: ["nothrow", "nogc"]},
{name: 'core.atomic.atomicLoad', kind: "functiondeclaration", path: './core/atomic/atomic_load.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.atomic.atomicOp', kind: "functiondeclaration", path: './core/atomic/atomic_op.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.atomic.atomicStore', kind: "functiondeclaration", path: './core/atomic/atomic_store.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.atomic.cas', kind: "functiondeclaration", path: './core/atomic/cas.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.atomic.MemoryOrder', kind: "enumdeclaration", path: './core/atomic/memory_order.html', attributes: []},
{name: 'core.atomic.MemoryOrder.acq', kind: "enummemberdeclaration", path: './core/atomic/memory_order.acq.html', attributes: []},
{name: 'core.atomic.MemoryOrder.raw', kind: "enummemberdeclaration", path: './core/atomic/memory_order.raw.html', attributes: []},
{name: 'core.atomic.MemoryOrder.rel', kind: "enummemberdeclaration", path: './core/atomic/memory_order.rel.html', attributes: []},
{name: 'core.atomic.MemoryOrder.seq', kind: "enummemberdeclaration", path: './core/atomic/memory_order.seq.html', attributes: []},
{name: 'core.bitop', kind: "module", path: './core/bitop.html', attributes: []},
{name: 'core.bitop.bitswap', kind: "functiondeclaration", path: './core/bitop/bitswap.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.bitop.bsf', kind: "functiondeclaration", path: './core/bitop/bsf.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bsr', kind: "functiondeclaration", path: './core/bitop/bsr.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bswap', kind: "functiondeclaration", path: './core/bitop/bswap.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bt', kind: "functiondeclaration", path: './core/bitop/bt.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.btc', kind: "functiondeclaration", path: './core/bitop/btc.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.btr', kind: "functiondeclaration", path: './core/bitop/btr.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.bts', kind: "functiondeclaration", path: './core/bitop/bts.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.inp', kind: "functiondeclaration", path: './core/bitop/inp.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.inpl', kind: "functiondeclaration", path: './core/bitop/inpl.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.inpw', kind: "functiondeclaration", path: './core/bitop/inpw.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.outp', kind: "functiondeclaration", path: './core/bitop/outp.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.outpl', kind: "functiondeclaration", path: './core/bitop/outpl.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.outpw', kind: "functiondeclaration", path: './core/bitop/outpw.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.popcnt', kind: "functiondeclaration", path: './core/bitop/popcnt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.volatileLoad', kind: "functiondeclaration", path: './core/bitop/volatile_load.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'core.bitop.volatileStore', kind: "functiondeclaration", path: './core/bitop/volatile_store.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'core.bitop._popcnt', kind: "functiondeclaration", path: './core/bitop/_popcnt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint', kind: "module", path: './core/checkedint.html', attributes: []},
{name: 'core.checkedint.adds', kind: "functiondeclaration", path: './core/checkedint/adds.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint.addu', kind: "functiondeclaration", path: './core/checkedint/addu.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint.muls', kind: "functiondeclaration", path: './core/checkedint/muls.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint.mulu', kind: "functiondeclaration", path: './core/checkedint/mulu.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint.negs', kind: "functiondeclaration", path: './core/checkedint/negs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint.subs', kind: "functiondeclaration", path: './core/checkedint/subs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.checkedint.subu', kind: "functiondeclaration", path: './core/checkedint/subu.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.cpuid', kind: "module", path: './core/cpuid.html', attributes: []},
{name: 'core.cpuid.aes', kind: "functiondeclaration", path: './core/cpuid/aes.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.amd3dnow', kind: "functiondeclaration", path: './core/cpuid/amd3dnow.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.amd3dnowExt', kind: "functiondeclaration", path: './core/cpuid/amd3dnow_ext.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.amdMmx', kind: "functiondeclaration", path: './core/cpuid/amd_mmx.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.avx', kind: "functiondeclaration", path: './core/cpuid/avx.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.avx2', kind: "functiondeclaration", path: './core/cpuid/avx2.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.CacheInfo', kind: "structdeclaration", path: './core/cpuid/cache_info.html', attributes: []},
{name: 'core.cpuid.CacheInfo.associativity', kind: "variabledeclaration", path: './core/cpuid/cache_info.associativity.html', attributes: []},
{name: 'core.cpuid.CacheInfo.lineSize', kind: "variabledeclaration", path: './core/cpuid/cache_info.line_size.html', attributes: []},
{name: 'core.cpuid.CacheInfo.size', kind: "variabledeclaration", path: './core/cpuid/cache_info.size.html', attributes: []},
{name: 'core.cpuid.cacheLevels', kind: "functiondeclaration", path: './core/cpuid/cache_levels.html', attributes: ["nothrow", "property", "nogc", "trusted", "__gshared"]},
{name: 'core.cpuid.coresPerCPU', kind: "functiondeclaration", path: './core/cpuid/cores_per_cpu.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.datacache', kind: "variabledeclaration", path: './core/cpuid/datacache.html', attributes: []},
{name: 'core.cpuid.dataCaches', kind: "functiondeclaration", path: './core/cpuid/data_caches.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.family', kind: "variabledeclaration", path: './core/cpuid/family.html', attributes: []},
{name: 'core.cpuid.fma', kind: "functiondeclaration", path: './core/cpuid/fma.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.fp16c', kind: "functiondeclaration", path: './core/cpuid/fp16c.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.has3dnowPrefetch', kind: "functiondeclaration", path: './core/cpuid/has3dnow_prefetch.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasCmov', kind: "functiondeclaration", path: './core/cpuid/has_cmov.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasCmpxchg16b', kind: "functiondeclaration", path: './core/cpuid/has_cmpxchg16b.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasCmpxchg8b', kind: "functiondeclaration", path: './core/cpuid/has_cmpxchg8b.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasFxsr', kind: "functiondeclaration", path: './core/cpuid/has_fxsr.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasLahfSahf', kind: "functiondeclaration", path: './core/cpuid/has_lahf_sahf.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasLzcnt', kind: "functiondeclaration", path: './core/cpuid/has_lzcnt.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasPclmulqdq', kind: "functiondeclaration", path: './core/cpuid/has_pclmulqdq.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasPopcnt', kind: "functiondeclaration", path: './core/cpuid/has_popcnt.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasRdrand', kind: "functiondeclaration", path: './core/cpuid/has_rdrand.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasRdseed', kind: "functiondeclaration", path: './core/cpuid/has_rdseed.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasRdtsc', kind: "functiondeclaration", path: './core/cpuid/has_rdtsc.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasSha', kind: "functiondeclaration", path: './core/cpuid/has_sha.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasSysEnterSysExit', kind: "functiondeclaration", path: './core/cpuid/has_sys_enter_sys_exit.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasVpclmulqdq', kind: "functiondeclaration", path: './core/cpuid/has_vpclmulqdq.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hle', kind: "functiondeclaration", path: './core/cpuid/hle.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hyperThreading', kind: "functiondeclaration", path: './core/cpuid/hyper_threading.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.isItanium', kind: "functiondeclaration", path: './core/cpuid/is_itanium.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.isX86_64', kind: "functiondeclaration", path: './core/cpuid/is_x86_64.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.mmx', kind: "functiondeclaration", path: './core/cpuid/mmx.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.model', kind: "variabledeclaration", path: './core/cpuid/model.html', attributes: []},
{name: 'core.cpuid.numCacheLevels', kind: "variabledeclaration", path: './core/cpuid/num_cache_levels.html', attributes: []},
{name: 'core.cpuid.preferAthlon', kind: "functiondeclaration", path: './core/cpuid/prefer_athlon.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.preferPentium1', kind: "functiondeclaration", path: './core/cpuid/prefer_pentium1.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.preferPentium4', kind: "functiondeclaration", path: './core/cpuid/prefer_pentium4.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.processor', kind: "functiondeclaration", path: './core/cpuid/processor.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.rtm', kind: "functiondeclaration", path: './core/cpuid/rtm.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse', kind: "functiondeclaration", path: './core/cpuid/sse.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse2', kind: "functiondeclaration", path: './core/cpuid/sse2.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse3', kind: "functiondeclaration", path: './core/cpuid/sse3.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse41', kind: "functiondeclaration", path: './core/cpuid/sse41.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse42', kind: "functiondeclaration", path: './core/cpuid/sse42.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse4a', kind: "functiondeclaration", path: './core/cpuid/sse4a.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.ssse3', kind: "functiondeclaration", path: './core/cpuid/ssse3.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.stepping', kind: "variabledeclaration", path: './core/cpuid/stepping.html', attributes: []},
{name: 'core.cpuid.threadsPerCPU', kind: "functiondeclaration", path: './core/cpuid/threads_per_cpu.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.vaes', kind: "functiondeclaration", path: './core/cpuid/vaes.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.vendor', kind: "functiondeclaration", path: './core/cpuid/vendor.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.x87onChip', kind: "functiondeclaration", path: './core/cpuid/x87on_chip.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'core.demangle', kind: "module", path: './core/demangle.html', attributes: []},
{name: 'core.demangle.demangle', kind: "functiondeclaration", path: './core/demangle/demangle.html', attributes: []},
{name: 'core.demangle.demangleType', kind: "functiondeclaration", path: './core/demangle/demangle_type.html', attributes: []},
{name: 'core.demangle.mangle', kind: "functiondeclaration", path: './core/demangle/mangle.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.demangle.mangleC', kind: "functiondeclaration", path: './core/demangle/mangle.html', attributes: []},
{name: 'core.demangle.mangleFunc', kind: "functiondeclaration", path: './core/demangle/mangle_func.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.exception', kind: "module", path: './core/exception.html', attributes: []},
{name: 'core.exception.AssertError', kind: "classdeclaration", path: './core/exception/assert_error.html', attributes: []},
{name: 'core.exception.AssertHandler', kind: "aliasdeclaration", path: './core/exception/assert_handler.html', attributes: []},
{name: 'core.exception.assertHandler', kind: "functiondeclaration", path: './core/exception/assert_handler.html', attributes: ["nothrow", "property", "nogc", "trusted", "nothrow"]},
{name: 'core.exception.FinalizeError', kind: "classdeclaration", path: './core/exception/finalize_error.html', attributes: []},
{name: 'core.exception.HiddenFuncError', kind: "classdeclaration", path: './core/exception/hidden_func_error.html', attributes: []},
{name: 'core.exception.InvalidMemoryOperationError', kind: "classdeclaration", path: './core/exception/invalid_memory_operation_error.html', attributes: []},
{name: 'core.exception.onAssertError', kind: "functiondeclaration", path: './core/exception/on_assert_error.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.exception.onAssertErrorMsg', kind: "functiondeclaration", path: './core/exception/on_assert_error_msg.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.exception.onFinalizeError', kind: "functiondeclaration", path: './core/exception/on_finalize_error.html', attributes: ["extern(C)", "nothrow", "trusted"]},
{name: 'core.exception.onHiddenFuncError', kind: "functiondeclaration", path: './core/exception/on_hidden_func_error.html', attributes: ["extern(C)", "pure", "nothrow", "safe"]},
{name: 'core.exception.onInvalidMemoryOperationError', kind: "functiondeclaration", path: './core/exception/on_invalid_memory_operation_error.html', attributes: ["extern(C)", "pure", "nothrow", "nogc", "trusted"]},
{name: 'core.exception.onOutOfMemoryError', kind: "functiondeclaration", path: './core/exception/on_out_of_memory_error.html', attributes: ["extern(C)", "pure", "nothrow", "nogc", "trusted"]},
{name: 'core.exception.onRangeError', kind: "functiondeclaration", path: './core/exception/on_range_error.html', attributes: ["extern(C)", "pure", "nothrow", "safe"]},
{name: 'core.exception.onSwitchError', kind: "functiondeclaration", path: './core/exception/on_switch_error.html', attributes: ["extern(C)", "pure", "nothrow", "safe"]},
{name: 'core.exception.onUnicodeError', kind: "functiondeclaration", path: './core/exception/on_unicode_error.html', attributes: ["extern(C)", "pure", "safe"]},
{name: 'core.exception.onUnittestErrorMsg', kind: "functiondeclaration", path: './core/exception/on_unittest_error_msg.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.exception.OutOfMemoryError', kind: "classdeclaration", path: './core/exception/out_of_memory_error.html', attributes: []},
{name: 'core.exception.RangeError', kind: "classdeclaration", path: './core/exception/range_error.html', attributes: []},
{name: 'core.exception.setAssertHandler', kind: "functiondeclaration", path: './core/exception/set_assert_handler.html', attributes: ["nothrow", "nogc", "trusted", "deprecated"]},
{name: 'core.exception.SwitchError', kind: "classdeclaration", path: './core/exception/switch_error.html', attributes: []},
{name: 'core.exception.UnicodeException', kind: "classdeclaration", path: './core/exception/unicode_exception.html', attributes: []},
{name: 'core.exception._d_arraybounds', kind: "functiondeclaration", path: './core/exception/_d_arraybounds.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_array_bounds', kind: "functiondeclaration", path: './core/exception/_d_array_bounds.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_assert', kind: "functiondeclaration", path: './core/exception/_d_assert.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_assertm', kind: "functiondeclaration", path: './core/exception/_d_assertm.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_assert_msg', kind: "functiondeclaration", path: './core/exception/_d_assert_msg.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_hidden_func', kind: "functiondeclaration", path: './core/exception/_d_hidden_func.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_switch_error', kind: "functiondeclaration", path: './core/exception/_d_switch_error.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_unittest', kind: "functiondeclaration", path: './core/exception/_d_unittest.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_unittestm', kind: "functiondeclaration", path: './core/exception/_d_unittestm.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_unittest_msg', kind: "functiondeclaration", path: './core/exception/_d_unittest_msg.html', attributes: ["extern(C)"]},
{name: 'core.math', kind: "module", path: './core/math.html', attributes: []},
{name: 'core.math.cos', kind: "functiondeclaration", path: './core/math/cos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.fabs', kind: "functiondeclaration", path: './core/math/fabs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.ldexp', kind: "functiondeclaration", path: './core/math/ldexp.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.rint', kind: "functiondeclaration", path: './core/math/rint.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.rndtol', kind: "functiondeclaration", path: './core/math/rndtol.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.rndtonl', kind: "functiondeclaration", path: './core/math/rndtonl.html', attributes: ["extern(C)", "nogc"]},
{name: 'core.math.sin', kind: "functiondeclaration", path: './core/math/sin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.sqrt', kind: "functiondeclaration", path: './core/math/sqrt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.yl2x', kind: "functiondeclaration", path: './core/math/yl2x.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.memory', kind: "module", path: './core/memory.html', attributes: []},
{name: 'core.memory.GC', kind: "structdeclaration", path: './core/memory/gc.html', attributes: []},
{name: 'core.memory.GC.addRange', kind: "functiondeclaration", path: './core/memory/gc.add_range.html', attributes: ["nothrow", "nogc", "static"]},
{name: 'core.memory.GC.addrOf', kind: "functiondeclaration", path: './core/memory/gc.addr_of.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.addRoot', kind: "functiondeclaration", path: './core/memory/gc.add_root.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.BlkAttr', kind: "enumdeclaration", path: './core/memory/gc.blk_attr.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.APPENDABLE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.appendable.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.FINALIZE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.finalize.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.NONE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.none.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.NO_INTERIOR', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.n_o_interior.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.NO_MOVE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.n_o_move.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.NO_SCAN', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.n_o_scan.html', attributes: []},
{name: 'core.memory.GC.BlkInfo', kind: "aliasdeclaration", path: './core/memory/gc.blk_info.html', attributes: []},
{name: 'core.memory.GC.calloc', kind: "functiondeclaration", path: './core/memory/gc.calloc.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.clrAttr', kind: "functiondeclaration", path: './core/memory/gc.clr_attr.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.collect', kind: "functiondeclaration", path: './core/memory/gc.collect.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.disable', kind: "functiondeclaration", path: './core/memory/gc.disable.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.enable', kind: "functiondeclaration", path: './core/memory/gc.enable.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.extend', kind: "functiondeclaration", path: './core/memory/gc.extend.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.free', kind: "functiondeclaration", path: './core/memory/gc.free.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.getAttr', kind: "functiondeclaration", path: './core/memory/gc.get_attr.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.malloc', kind: "functiondeclaration", path: './core/memory/gc.malloc.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.minimize', kind: "functiondeclaration", path: './core/memory/gc.minimize.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.qalloc', kind: "functiondeclaration", path: './core/memory/gc.qalloc.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.query', kind: "functiondeclaration", path: './core/memory/gc.query.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.realloc', kind: "functiondeclaration", path: './core/memory/gc.realloc.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.removeRange', kind: "functiondeclaration", path: './core/memory/gc.remove_range.html', attributes: ["nothrow", "nogc", "static"]},
{name: 'core.memory.GC.removeRoot', kind: "functiondeclaration", path: './core/memory/gc.remove_root.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.reserve', kind: "functiondeclaration", path: './core/memory/gc.reserve.html', attributes: ["nothrow", "static"]},
{name: 'core.memory.GC.runFinalizers', kind: "functiondeclaration", path: './core/memory/gc.run_finalizers.html', attributes: ["static"]},
{name: 'core.memory.GC.setAttr', kind: "functiondeclaration", path: './core/memory/gc.set_attr.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.memory.GC.sizeOf', kind: "functiondeclaration", path: './core/memory/gc.size_of.html', attributes: ["pure", "nothrow", "static"]},
{name: 'core.runtime', kind: "module", path: './core/runtime.html', attributes: []},
{name: 'core.runtime.CArgs', kind: "structdeclaration", path: './core/runtime/c_args.html', attributes: []},
{name: 'core.runtime.CArgs.argc', kind: "variabledeclaration", path: './core/runtime/c_args.argc.html', attributes: []},
{name: 'core.runtime.CArgs.argv', kind: "variabledeclaration", path: './core/runtime/c_args.argv.html', attributes: []},
{name: 'core.runtime.defaultTraceHandler', kind: "functiondeclaration", path: './core/runtime/default_trace_handler.html', attributes: []},
{name: 'core.runtime.rt_init', kind: "functiondeclaration", path: './core/runtime/rt_init.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_loadLibrary', kind: "functiondeclaration", path: './core/runtime/rt_load_library.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_term', kind: "functiondeclaration", path: './core/runtime/rt_term.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_unloadLibrary', kind: "functiondeclaration", path: './core/runtime/rt_unload_library.html', attributes: ["extern(C)"]},
{name: 'core.runtime.runModuleUnitTests', kind: "functiondeclaration", path: './core/runtime/run_module_unit_tests.html', attributes: ["extern(C)"]},
{name: 'core.runtime.Runtime', kind: "structdeclaration", path: './core/runtime/runtime.html', attributes: []},
{name: 'core.runtime.Runtime.args', kind: "functiondeclaration", path: './core/runtime/runtime.args.html', attributes: ["property", "static"]},
{name: 'core.runtime.Runtime.cArgs', kind: "functiondeclaration", path: './core/runtime/runtime.c_args.html', attributes: ["property", "static"]},
{name: 'core.runtime.Runtime.collectHandler', kind: "functiondeclaration", path: './core/runtime/runtime.collect_handler.html', attributes: ["property", "static"]},
{name: 'core.runtime.Runtime.initialize', kind: "functiondeclaration", path: './core/runtime/runtime.initialize.html', attributes: ["static"]},
{name: 'core.runtime.Runtime.loadLibrary', kind: "functiondeclaration", path: './core/runtime/runtime.load_library.html', attributes: []},
{name: 'core.runtime.Runtime.moduleUnitTester', kind: "functiondeclaration", path: './core/runtime/runtime.module_unit_tester.html', attributes: ["property", "static"]},
{name: 'core.runtime.Runtime.terminate', kind: "functiondeclaration", path: './core/runtime/runtime.terminate.html', attributes: ["static"]},
{name: 'core.runtime.Runtime.traceHandler', kind: "functiondeclaration", path: './core/runtime/runtime.trace_handler.html', attributes: ["property", "static"]},
{name: 'core.runtime.Runtime.unloadLibrary', kind: "functiondeclaration", path: './core/runtime/runtime.unload_library.html', attributes: []},
{name: 'core.simd', kind: "module", path: './core/simd.html', attributes: []},
{name: 'core.simd.byte16', kind: "aliasdeclaration", path: './core/simd/byte16.html', attributes: []},
{name: 'core.simd.byte32', kind: "aliasdeclaration", path: './core/simd/byte32.html', attributes: []},
{name: 'core.simd.double2', kind: "aliasdeclaration", path: './core/simd/double2.html', attributes: []},
{name: 'core.simd.double4', kind: "aliasdeclaration", path: './core/simd/double4.html', attributes: []},
{name: 'core.simd.float4', kind: "aliasdeclaration", path: './core/simd/float4.html', attributes: []},
{name: 'core.simd.float8', kind: "aliasdeclaration", path: './core/simd/float8.html', attributes: []},
{name: 'core.simd.int4', kind: "aliasdeclaration", path: './core/simd/int4.html', attributes: []},
{name: 'core.simd.int8', kind: "aliasdeclaration", path: './core/simd/int8.html', attributes: []},
{name: 'core.simd.long2', kind: "aliasdeclaration", path: './core/simd/long2.html', attributes: []},
{name: 'core.simd.long4', kind: "aliasdeclaration", path: './core/simd/long4.html', attributes: []},
{name: 'core.simd.short16', kind: "aliasdeclaration", path: './core/simd/short16.html', attributes: []},
{name: 'core.simd.short8', kind: "aliasdeclaration", path: './core/simd/short8.html', attributes: []},
{name: 'core.simd.ubyte16', kind: "aliasdeclaration", path: './core/simd/ubyte16.html', attributes: []},
{name: 'core.simd.ubyte32', kind: "aliasdeclaration", path: './core/simd/ubyte32.html', attributes: []},
{name: 'core.simd.uint4', kind: "aliasdeclaration", path: './core/simd/uint4.html', attributes: []},
{name: 'core.simd.uint8', kind: "aliasdeclaration", path: './core/simd/uint8.html', attributes: []},
{name: 'core.simd.ulong2', kind: "aliasdeclaration", path: './core/simd/ulong2.html', attributes: []},
{name: 'core.simd.ulong4', kind: "aliasdeclaration", path: './core/simd/ulong4.html', attributes: []},
{name: 'core.simd.ushort16', kind: "aliasdeclaration", path: './core/simd/ushort16.html', attributes: []},
{name: 'core.simd.ushort8', kind: "aliasdeclaration", path: './core/simd/ushort8.html', attributes: []},
{name: 'core.simd.Vector', kind: "aliasdeclaration", path: './core/simd/vector.html', attributes: []},
{name: 'core.simd.void16', kind: "aliasdeclaration", path: './core/simd/void16.html', attributes: []},
{name: 'core.simd.void32', kind: "aliasdeclaration", path: './core/simd/void32.html', attributes: []},
{name: 'core.simd.XMM', kind: "enumdeclaration", path: './core/simd/xmm.html', attributes: []},
{name: 'core.thread', kind: "module", path: './core/thread.html', attributes: []},
{name: 'core.thread.Fiber', kind: "classdeclaration", path: './core/thread/fiber.html', attributes: []},
{name: 'core.thread.Fiber.call', kind: "functiondeclaration", path: './core/thread/fiber.call.html', attributes: ["final"]},
{name: 'core.thread.Fiber.getThis', kind: "functiondeclaration", path: './core/thread/fiber.get_this.html', attributes: ["nothrow", "static"]},
{name: 'core.thread.Fiber.reset', kind: "functiondeclaration", path: './core/thread/fiber.reset.html', attributes: ["nothrow", "final"]},
{name: 'core.thread.Fiber.Rethrow', kind: "enumdeclaration", path: './core/thread/fiber.rethrow.html', attributes: []},
{name: 'core.thread.Fiber.State', kind: "enumdeclaration", path: './core/thread/fiber.state.html', attributes: []},
{name: 'core.thread.Fiber.State.EXEC', kind: "enummemberdeclaration", path: './core/thread/fiber.state.exec.html', attributes: []},
{name: 'core.thread.Fiber.State.HOLD', kind: "enummemberdeclaration", path: './core/thread/fiber.state.hold.html', attributes: []},
{name: 'core.thread.Fiber.State.TERM', kind: "enummemberdeclaration", path: './core/thread/fiber.state.term.html', attributes: []},
{name: 'core.thread.Fiber.state', kind: "functiondeclaration", path: './core/thread/fiber.state.html', attributes: ["nothrow", "property", "const", "final"]},
{name: 'core.thread.Fiber.this', kind: "functiondeclaration", path: './core/thread/fiber.this.html', attributes: ["nothrow"]},
{name: 'core.thread.Fiber.yield', kind: "functiondeclaration", path: './core/thread/fiber.yield.html', attributes: ["nothrow", "static"]},
{name: 'core.thread.Fiber.yieldAndThrow', kind: "functiondeclaration", path: './core/thread/fiber.yield_and_throw.html', attributes: ["nothrow", "static"]},
{name: 'core.thread.getpid', kind: "aliasdeclaration", path: './core/thread/getpid.html', attributes: []},
{name: 'core.thread.IsMarked', kind: "enumdeclaration", path: './core/thread/is_marked.html', attributes: []},
{name: 'core.thread.IsMarked.no', kind: "enummemberdeclaration", path: './core/thread/is_marked.no.html', attributes: []},
{name: 'core.thread.IsMarked.unknown', kind: "enummemberdeclaration", path: './core/thread/is_marked.unknown.html', attributes: []},
{name: 'core.thread.IsMarked.yes', kind: "enummemberdeclaration", path: './core/thread/is_marked.yes.html', attributes: []},
{name: 'core.thread.IsMarkedDg', kind: "aliasdeclaration", path: './core/thread/is_marked_dg.html', attributes: []},
{name: 'core.thread.ScanAllThreadsFn', kind: "aliasdeclaration", path: './core/thread/scan_all_threads_fn.html', attributes: []},
{name: 'core.thread.ScanAllThreadsTypeFn', kind: "aliasdeclaration", path: './core/thread/scan_all_threads_type_fn.html', attributes: []},
{name: 'core.thread.ScanType', kind: "enumdeclaration", path: './core/thread/scan_type.html', attributes: []},
{name: 'core.thread.ScanType.stack', kind: "enummemberdeclaration", path: './core/thread/scan_type.stack.html', attributes: []},
{name: 'core.thread.ScanType.tls', kind: "enummemberdeclaration", path: './core/thread/scan_type.tls.html', attributes: []},
{name: 'core.thread.Thread', kind: "classdeclaration", path: './core/thread/thread.html', attributes: []},
{name: 'core.thread.Thread.getAll', kind: "functiondeclaration", path: './core/thread/thread.get_all.html', attributes: ["static"]},
{name: 'core.thread.Thread.getThis', kind: "functiondeclaration", path: './core/thread/thread.get_this.html', attributes: ["nothrow", "static"]},
{name: 'core.thread.Thread.isDaemon', kind: "functiondeclaration", path: './core/thread/thread.is_daemon.html', attributes: ["property", "final"]},
{name: 'core.thread.Thread.isRunning', kind: "functiondeclaration", path: './core/thread/thread.is_running.html', attributes: ["nothrow", "property", "final"]},
{name: 'core.thread.Thread.join', kind: "functiondeclaration", path: './core/thread/thread.join.html', attributes: ["final"]},
{name: 'core.thread.Thread.name', kind: "functiondeclaration", path: './core/thread/thread.name.html', attributes: ["property", "final"]},
{name: 'core.thread.Thread.opApply', kind: "functiondeclaration", path: './core/thread/thread.op_apply.html', attributes: ["static"]},
{name: 'core.thread.Thread.priority', kind: "functiondeclaration", path: './core/thread/thread.priority.html', attributes: ["property", "final"]},
{name: 'core.thread.Thread.PRIORITY_DEFAULT', kind: "variabledeclaration", path: './core/thread/thread.priorit_y_default.html', attributes: []},
{name: 'core.thread.Thread.PRIORITY_MAX', kind: "variabledeclaration", path: './core/thread/thread.priorit_y_max.html', attributes: []},
{name: 'core.thread.Thread.PRIORITY_MIN', kind: "variabledeclaration", path: './core/thread/thread.priorit_y_min.html', attributes: []},
{name: 'core.thread.Thread.sleep', kind: "functiondeclaration", path: './core/thread/thread.sleep.html', attributes: ["nothrow", "static"]},
{name: 'core.thread.Thread.start', kind: "functiondeclaration", path: './core/thread/thread.start.html', attributes: ["nothrow", "final"]},
{name: 'core.thread.Thread.this', kind: "functiondeclaration", path: './core/thread/thread.this.html', attributes: []},
{name: 'core.thread.Thread.yield', kind: "functiondeclaration", path: './core/thread/thread.yield.html', attributes: ["nothrow", "static"]},
{name: 'core.thread.ThreadError', kind: "classdeclaration", path: './core/thread/thread_error.html', attributes: []},
{name: 'core.thread.ThreadException', kind: "classdeclaration", path: './core/thread/thread_exception.html', attributes: []},
{name: 'core.thread.ThreadGroup', kind: "classdeclaration", path: './core/thread/thread_group.html', attributes: []},
{name: 'core.thread.ThreadGroup.add', kind: "functiondeclaration", path: './core/thread/thread_group.add.html', attributes: ["final"]},
{name: 'core.thread.ThreadGroup.create', kind: "functiondeclaration", path: './core/thread/thread_group.create.html', attributes: ["final"]},
{name: 'core.thread.ThreadGroup.joinAll', kind: "functiondeclaration", path: './core/thread/thread_group.join_all.html', attributes: ["final"]},
{name: 'core.thread.ThreadGroup.opApply', kind: "functiondeclaration", path: './core/thread/thread_group.op_apply.html', attributes: ["final"]},
{name: 'core.thread.ThreadGroup.remove', kind: "functiondeclaration", path: './core/thread/thread_group.remove.html', attributes: ["final"]},
{name: 'core.thread.thread_attachThis', kind: "functiondeclaration", path: './core/thread/thread_attach_this.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_detachByAddr', kind: "functiondeclaration", path: './core/thread/thread_detach_by_addr.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_detachInstance', kind: "functiondeclaration", path: './core/thread/thread_detach_instance.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_detachThis', kind: "functiondeclaration", path: './core/thread/thread_detach_this.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_enterCriticalRegion', kind: "functiondeclaration", path: './core/thread/thread_enter_critical_region.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_exitCriticalRegion', kind: "functiondeclaration", path: './core/thread/thread_exit_critical_region.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_findByAddr', kind: "functiondeclaration", path: './core/thread/thread_find_by_addr.html', attributes: ["static"]},
{name: 'core.thread.thread_inCriticalRegion', kind: "functiondeclaration", path: './core/thread/thread_in_critical_region.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_init', kind: "functiondeclaration", path: './core/thread/thread_init.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_isMainThread', kind: "functiondeclaration", path: './core/thread/thread_is_main_thread.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_joinAll', kind: "functiondeclaration", path: './core/thread/thread_join_all.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_processGCMarks', kind: "functiondeclaration", path: './core/thread/thread_process_gc_marks.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_resumeAll', kind: "functiondeclaration", path: './core/thread/thread_resume_all.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_scanAll', kind: "functiondeclaration", path: './core/thread/thread_scan_all.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_scanAllType', kind: "functiondeclaration", path: './core/thread/thread_scan_all_type.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_setGCSignals', kind: "functiondeclaration", path: './core/thread/thread_set_gc_signals.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_setThis', kind: "functiondeclaration", path: './core/thread/thread_set_this.html', attributes: ["extern(C)"]},
{name: 'core.thread.thread_stackBottom', kind: "functiondeclaration", path: './core/thread/thread_stack_bottom.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_stackTop', kind: "functiondeclaration", path: './core/thread/thread_stack_top.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_suspendAll', kind: "functiondeclaration", path: './core/thread/thread_suspend_all.html', attributes: ["extern(C)", "nothrow"]},
{name: 'core.thread.thread_term', kind: "functiondeclaration", path: './core/thread/thread_term.html', attributes: ["extern(C)"]},
{name: 'core.time', kind: "module", path: './core/time.html', attributes: []},
{name: 'core.time.abs', kind: "functiondeclaration", path: './core/time/abs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.convClockFreq', kind: "functiondeclaration", path: './core/time/conv_clock_freq.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.convert', kind: "functiondeclaration", path: './core/time/convert.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.days', kind: "aliasdeclaration", path: './core/time/days.html', attributes: []},
{name: 'core.time.dur', kind: "functiondeclaration", path: './core/time/dur.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.Duration', kind: "structdeclaration", path: './core/time/duration.html', attributes: []},
{name: 'core.time.Duration.days', kind: "functiondeclaration", path: './core/time/duration.days.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const", "deprecated"]},
{name: 'core.time.Duration.fracSec', kind: "functiondeclaration", path: './core/time/duration.frac_sec.html', attributes: ["pure", "nothrow", "property", "safe", "const", "deprecated"]},
{name: 'core.time.Duration.get', kind: "functiondeclaration", path: './core/time/duration.get.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.hours', kind: "functiondeclaration", path: './core/time/duration.hours.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const", "deprecated"]},
{name: 'core.time.Duration.isNegative', kind: "functiondeclaration", path: './core/time/duration.is_negative.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.Duration.max', kind: "functiondeclaration", path: './core/time/duration.max.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.Duration.min', kind: "functiondeclaration", path: './core/time/duration.min.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.Duration.minutes', kind: "functiondeclaration", path: './core/time/duration.minutes.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const", "deprecated"]},
{name: 'core.time.Duration.opBinary', kind: "functiondeclaration", path: './core/time/duration.op_binary.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.opBinaryRight', kind: "functiondeclaration", path: './core/time/duration.op_binary_right.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.opCast', kind: "functiondeclaration", path: './core/time/duration.op_cast.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.opCmp', kind: "functiondeclaration", path: './core/time/duration.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'core.time.Duration.opOpAssign', kind: "functiondeclaration", path: './core/time/duration.op_op_assign.html', attributes: ["ref"]},
{name: 'core.time.Duration.opUnary', kind: "functiondeclaration", path: './core/time/duration.op_unary.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.seconds', kind: "functiondeclaration", path: './core/time/duration.seconds.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const", "deprecated"]},
{name: 'core.time.Duration.split', kind: "templatedeclaration", path: './core/time/duration.split.html', attributes: []},
{name: 'core.time.Duration.split.split', kind: "functiondeclaration", path: './core/time/duration.split.split.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.toString', kind: "functiondeclaration", path: './core/time/duration.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'core.time.Duration.total', kind: "functiondeclaration", path: './core/time/duration.total.html', attributes: ["const", "nothrow", "nogc", "property"]},
{name: 'core.time.Duration.weeks', kind: "functiondeclaration", path: './core/time/duration.weeks.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const", "deprecated"]},
{name: 'core.time.Duration.zero', kind: "functiondeclaration", path: './core/time/duration.zero.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.FracSec', kind: "structdeclaration", path: './core/time/frac_sec.html', attributes: []},
{name: 'core.time.FracSec.from', kind: "functiondeclaration", path: './core/time/frac_sec.from.html', attributes: []},
{name: 'core.time.FracSec.hnsecs', kind: "functiondeclaration", path: './core/time/frac_sec.hnsecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.FracSec.msecs', kind: "functiondeclaration", path: './core/time/frac_sec.msecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.FracSec.nsecs', kind: "functiondeclaration", path: './core/time/frac_sec.nsecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.FracSec.opUnary', kind: "functiondeclaration", path: './core/time/frac_sec.op_unary.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.FracSec.toString', kind: "functiondeclaration", path: './core/time/frac_sec.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'core.time.FracSec.usecs', kind: "functiondeclaration", path: './core/time/frac_sec.usecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.FracSec.zero', kind: "functiondeclaration", path: './core/time/frac_sec.zero.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.hnsecs', kind: "aliasdeclaration", path: './core/time/hnsecs.html', attributes: []},
{name: 'core.time.hours', kind: "aliasdeclaration", path: './core/time/hours.html', attributes: []},
{name: 'core.time.minutes', kind: "aliasdeclaration", path: './core/time/minutes.html', attributes: []},
{name: 'core.time.MonoTime', kind: "structdeclaration", path: './core/time/mono_time.html', attributes: []},
{name: 'core.time.MonoTime.currTime', kind: "functiondeclaration", path: './core/time/mono_time.curr_time.html', attributes: ["nothrow", "property", "nogc", "trusted", "static"]},
{name: 'core.time.MonoTime.max', kind: "functiondeclaration", path: './core/time/mono_time.max.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.MonoTime.min', kind: "functiondeclaration", path: './core/time/mono_time.min.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.MonoTime.opBinary', kind: "functiondeclaration", path: './core/time/mono_time.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc"]},
{name: 'core.time.MonoTime.opCmp', kind: "functiondeclaration", path: './core/time/mono_time.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'core.time.MonoTime.opOpAssign', kind: "functiondeclaration", path: './core/time/mono_time.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref"]},
{name: 'core.time.MonoTime.ticks', kind: "functiondeclaration", path: './core/time/mono_time.ticks.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.MonoTime.ticksPerSecond', kind: "functiondeclaration", path: './core/time/mono_time.ticks_per_second.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.MonoTime.toString', kind: "functiondeclaration", path: './core/time/mono_time.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'core.time.MonoTime.zero', kind: "functiondeclaration", path: './core/time/mono_time.zero.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.msecs', kind: "aliasdeclaration", path: './core/time/msecs.html', attributes: []},
{name: 'core.time.nsecs', kind: "aliasdeclaration", path: './core/time/nsecs.html', attributes: []},
{name: 'core.time.nsecsToTicks', kind: "functiondeclaration", path: './core/time/nsecs_to_ticks.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.seconds', kind: "aliasdeclaration", path: './core/time/seconds.html', attributes: []},
{name: 'core.time.TickDuration', kind: "structdeclaration", path: './core/time/tick_duration.html', attributes: []},
{name: 'core.time.TickDuration.appOrigin', kind: "variabledeclaration", path: './core/time/tick_duration.app_origin.html', attributes: []},
{name: 'core.time.TickDuration.currSystemTick', kind: "functiondeclaration", path: './core/time/tick_duration.curr_system_tick.html', attributes: ["nothrow", "property", "nogc", "trusted", "static"]},
{name: 'core.time.TickDuration.from', kind: "functiondeclaration", path: './core/time/tick_duration.from.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.hnsecs', kind: "functiondeclaration", path: './core/time/tick_duration.hnsecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.length', kind: "variabledeclaration", path: './core/time/tick_duration.length.html', attributes: []},
{name: 'core.time.TickDuration.max', kind: "functiondeclaration", path: './core/time/tick_duration.max.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.TickDuration.min', kind: "functiondeclaration", path: './core/time/tick_duration.min.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.TickDuration.msecs', kind: "functiondeclaration", path: './core/time/tick_duration.msecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.nsecs', kind: "functiondeclaration", path: './core/time/tick_duration.nsecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.opBinary', kind: "functiondeclaration", path: './core/time/tick_duration.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.opCast', kind: "functiondeclaration", path: './core/time/tick_duration.op_cast.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.opCmp', kind: "functiondeclaration", path: './core/time/tick_duration.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.opOpAssign', kind: "functiondeclaration", path: './core/time/tick_duration.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'core.time.TickDuration.opUnary', kind: "functiondeclaration", path: './core/time/tick_duration.op_unary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.seconds', kind: "functiondeclaration", path: './core/time/tick_duration.seconds.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.this', kind: "functiondeclaration", path: './core/time/tick_duration.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'core.time.TickDuration.ticksPerSec', kind: "variabledeclaration", path: './core/time/tick_duration.ticks_per_sec.html', attributes: []},
{name: 'core.time.TickDuration.usecs', kind: "functiondeclaration", path: './core/time/tick_duration.usecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.zero', kind: "functiondeclaration", path: './core/time/tick_duration.zero.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "static"]},
{name: 'core.time.ticksToNSecs', kind: "functiondeclaration", path: './core/time/ticks_ton_secs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TimeException', kind: "classdeclaration", path: './core/time/time_exception.html', attributes: []},
{name: 'core.time.TimeException.this', kind: "functiondeclaration", path: './core/time/time_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.time.to', kind: "functiondeclaration", path: './core/time/to.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.usecs', kind: "aliasdeclaration", path: './core/time/usecs.html', attributes: []},
{name: 'core.time.weeks', kind: "aliasdeclaration", path: './core/time/weeks.html', attributes: []},
{name: 'core.vararg', kind: "module", path: './core/vararg.html', attributes: []},
{name: 'etc.c.curl', kind: "module", path: './etc/c/curl.html', attributes: []},
{name: 'etc.c.curl.CURL', kind: "aliasdeclaration", path: './etc/c/curl/curl.html', attributes: []},
{name: 'etc.c.curl.CurlAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_auth.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.any', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.any.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.anysafe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.anysafe.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.basic', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.basic.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.digest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.digest.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.digest_ie', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.digest_ie.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.gssnegotiate', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.gssnegotiate.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.ntlm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.ntlm.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.only', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.only.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo', kind: "enumdeclaration", path: './etc/c/curl/curl_callback_info.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.data_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.data_in.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.data_out', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.data_out.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.end', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.end.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.header_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.header_in.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.header_out', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.header_out.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.ssl_data_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.ssl_data_in.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.ssl_data_out', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.ssl_data_out.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.text', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.text.html', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.html', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.fail.html', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.ok.html', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc.skip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.skip.html', attributes: []},
{name: 'etc.c.curl.CurlChunkEndFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_chunk_end_func.html', attributes: []},
{name: 'etc.c.curl.CurlChunkEndFunc.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_end_func.fail.html', attributes: []},
{name: 'etc.c.curl.CurlChunkEndFunc.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_end_func.ok.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy', kind: "enumdeclaration", path: './etc/c/curl/curl_close_policy.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.callback', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.callback.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.last.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.least_recently_used', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.least_recently_used.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.least_traffic', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.least_traffic.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.none.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.oldest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.oldest.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.slowest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.slowest.html', attributes: []},
{name: 'etc.c.curl.CURLcode', kind: "aliasdeclaration", path: './etc/c/curl/cur_lcode.html', attributes: []},
{name: 'etc.c.curl.CurlCSelect', kind: "enumdeclaration", path: './etc/c/curl/curl_c_select.html', attributes: []},
{name: 'etc.c.curl.CurlCSelect.err_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_c_select.err_.html', attributes: []},
{name: 'etc.c.curl.CurlCSelect.in_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_c_select.in_.html', attributes: []},
{name: 'etc.c.curl.CurlCSelect.out_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_c_select.out_.html', attributes: []},
{name: 'etc.c.curl.CurlError', kind: "enumdeclaration", path: './etc/c/curl/curl_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.aborted_by_callback', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.aborted_by_callback.html', attributes: []},
{name: 'etc.c.curl.CurlError.again', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.again.html', attributes: []},
{name: 'etc.c.curl.CurlError.bad_content_encoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.bad_content_encoding.html', attributes: []},
{name: 'etc.c.curl.CurlError.bad_download_resume', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.bad_download_resume.html', attributes: []},
{name: 'etc.c.curl.CurlError.bad_function_argument', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.bad_function_argument.html', attributes: []},
{name: 'etc.c.curl.CurlError.chunk_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.chunk_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.conv_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.conv_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.conv_reqd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.conv_reqd.html', attributes: []},
{name: 'etc.c.curl.CurlError.couldnt_connect', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.couldnt_connect.html', attributes: []},
{name: 'etc.c.curl.CurlError.couldnt_resolve_host', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.couldnt_resolve_host.html', attributes: []},
{name: 'etc.c.curl.CurlError.couldnt_resolve_proxy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.couldnt_resolve_proxy.html', attributes: []},
{name: 'etc.c.curl.CurlError.curl_last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.curl_last.html', attributes: []},
{name: 'etc.c.curl.CurlError.failed_init', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.failed_init.html', attributes: []},
{name: 'etc.c.curl.CurlError.filesize_exceeded', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.filesize_exceeded.html', attributes: []},
{name: 'etc.c.curl.CurlError.file_couldnt_read_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.file_couldnt_read_file.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_bad_file_list', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_bad_file_list.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_cant_get_host', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_cant_get_host.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_couldnt_retr_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_couldnt_retr_file.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_couldnt_set_type', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_couldnt_set_type.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_couldnt_use_rest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_couldnt_use_rest.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_port_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_port_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_pret_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_pret_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_227_format', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_weird_227_format.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_pass_reply', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_weird_pass_reply.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_pasv_reply', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_weird_pasv_reply.html', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_server_reply', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ftp_weird_server_reply.html', attributes: []},
{name: 'etc.c.curl.CurlError.function_not_found', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.function_not_found.html', attributes: []},
{name: 'etc.c.curl.CurlError.got_nothing', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.got_nothing.html', attributes: []},
{name: 'etc.c.curl.CurlError.http_post_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.http_post_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.http_returned_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.http_returned_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.interface_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.interface_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.ldap_cannot_bind', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ldap_cannot_bind.html', attributes: []},
{name: 'etc.c.curl.CurlError.ldap_invalid_url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ldap_invalid_url.html', attributes: []},
{name: 'etc.c.curl.CurlError.ldap_search_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ldap_search_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.login_denied', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.login_denied.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete10', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete10.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete12', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete12.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete16', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete16.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete20', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete20.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete24', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete24.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete29', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete29.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete32', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete32.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete4.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete40', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete40.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete44', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete44.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete46', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete46.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete50', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete50.html', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete57', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.obsolete57.html', attributes: []},
{name: 'etc.c.curl.CurlError.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ok.html', attributes: []},
{name: 'etc.c.curl.CurlError.operation_timedout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.operation_timedout.html', attributes: []},
{name: 'etc.c.curl.CurlError.out_of_memory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.out_of_memory.html', attributes: []},
{name: 'etc.c.curl.CurlError.partial_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.partial_file.html', attributes: []},
{name: 'etc.c.curl.CurlError.peer_failed_verification', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.peer_failed_verification.html', attributes: []},
{name: 'etc.c.curl.CurlError.quote_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.quote_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.range_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.range_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.read_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.read_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.recv_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.recv_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.remote_access_denied', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.remote_access_denied.html', attributes: []},
{name: 'etc.c.curl.CurlError.remote_disk_full', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.remote_disk_full.html', attributes: []},
{name: 'etc.c.curl.CurlError.remote_file_exists', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.remote_file_exists.html', attributes: []},
{name: 'etc.c.curl.CurlError.remote_file_not_found', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.remote_file_not_found.html', attributes: []},
{name: 'etc.c.curl.CurlError.rtsp_cseq_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.rtsp_cseq_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.rtsp_session_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.rtsp_session_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.send_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.send_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.send_fail_rewind', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.send_fail_rewind.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssh', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssh.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_cacert', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_cacert.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_cacert_badfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_cacert_badfile.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_certproblem', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_certproblem.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_cipher', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_cipher.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_connect_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_connect_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_crl_badfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_crl_badfile.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_engine_initfailed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_engine_initfailed.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_engine_notfound', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_engine_notfound.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_engine_setfailed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_engine_setfailed.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_issuer_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_issuer_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_shutdown_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.ssl_shutdown_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.telnet_option_syntax', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.telnet_option_syntax.html', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_illegal', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.tftp_illegal.html', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_nosuchuser', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.tftp_nosuchuser.html', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_notfound', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.tftp_notfound.html', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_perm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.tftp_perm.html', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_unknownid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.tftp_unknownid.html', attributes: []},
{name: 'etc.c.curl.CurlError.too_many_redirects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.too_many_redirects.html', attributes: []},
{name: 'etc.c.curl.CurlError.unknown_telnet_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.unknown_telnet_option.html', attributes: []},
{name: 'etc.c.curl.CurlError.unsupported_protocol', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.unsupported_protocol.html', attributes: []},
{name: 'etc.c.curl.CurlError.upload_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.upload_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.url_malformat', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.url_malformat.html', attributes: []},
{name: 'etc.c.curl.CurlError.use_ssl_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.use_ssl_failed.html', attributes: []},
{name: 'etc.c.curl.CurlError.write_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.write_error.html', attributes: []},
{name: 'etc.c.curl.curlfiletype', kind: "aliasdeclaration", path: './etc/c/curl/curlfiletype.html', attributes: []},
{name: 'etc.c.curl.CurlFileType', kind: "enumdeclaration", path: './etc/c/curl/curl_file_type.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.device_block', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.device_block.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.device_char', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.device_char.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.directory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.directory.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.door', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.door.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.file.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.namedpipe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.namedpipe.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.socket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.socket.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.symlink', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.symlink.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.unknown', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.unknown.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown', kind: "enumdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.filename', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.filename.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.filetype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.filetype.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.gid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.gid.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.hlinkcount', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.hlinkcount.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.perm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.perm.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.size', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.size.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.time.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.uid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.uid.html', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_fnm_atch_func.html', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_fnm_atch_func.fail.html', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc.match', kind: "enummemberdeclaration", path: './etc/c/curl/curl_fnm_atch_func.match.html', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc.nomatch', kind: "enummemberdeclaration", path: './etc/c/curl/curl_fnm_atch_func.nomatch.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd', kind: "enumdeclaration", path: './etc/c/curl/curl_form_add.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.disabled', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.disabled.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.illegal_array', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.illegal_array.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.incomplete', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.incomplete.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.last.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.memory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.memory.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.null_ptr', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.null_ptr.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.ok.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.option_twice', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.option_twice.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.unknown_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.unknown_option.html', attributes: []},
{name: 'etc.c.curl.CURLFORMcode', kind: "aliasdeclaration", path: './etc/c/curl/curlfor_mcode.html', attributes: []},
{name: 'etc.c.curl.CurlFtp', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp.html', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.create_dir.html', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir_last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.create_dir_last.html', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir_none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.create_dir_none.html', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir_retry', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.create_dir_retry.html', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp_auth.html', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.defaultauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.defaultauth.html', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.last.html', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.ssl.html', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.tls', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.tls.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp_method.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.defaultmethod', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.defaultmethod.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.last.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.multicwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.multicwd.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.nocwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.nocwd.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.singlecwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.singlecwd.html', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp_ssl.html', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_active', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.ccc_active.html', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.ccc_last.html', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.ccc_none.html', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_passive', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.ccc_passive.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal', kind: "enumdeclaration", path: './etc/c/curl/curl_global.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.all.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal.default_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.default_.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal.nothing', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.nothing.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal.ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.ssl.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal.win32', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.win32.html', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion', kind: "enumdeclaration", path: './etc/c/curl/curl_http_version.html', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.last.html', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.none.html', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.v1_0', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.v1_0.html', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.v1_1', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.v1_1.html', attributes: []},
{name: 'etc.c.curl.CurlInfo', kind: "enumdeclaration", path: './etc/c/curl/curl_info.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.appconnect_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.appconnect_time.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.certinfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.certinfo.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.condition_unmet', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.condition_unmet.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.connect_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.connect_time.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.content_length_download', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.content_length_download.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.content_length_upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.content_length_upload.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.content_type', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.content_type.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.cookielist', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.cookielist.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.effective_url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.effective_url.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.filetime', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.filetime.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.ftp_entry_path', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.ftp_entry_path.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.header_size', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.header_size.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.httpauth_avail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.httpauth_avail.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.http_connectcode', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.http_connectcode.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.lastone', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.lastone.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.lastsocket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.lastsocket.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.local_ip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.local_ip.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.local_port', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.local_port.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.namelookup_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.namelookup_time.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.none.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.num_connects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.num_connects.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.os_errno', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.os_errno.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.pretransfer_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.pretransfer_time.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.primary_ip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.primary_ip.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.primary_port', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.primary_port.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.private_info', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.private_info.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.proxyauth_avail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.proxyauth_avail.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.redirect_count', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.redirect_count.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.redirect_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.redirect_time.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.redirect_url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.redirect_url.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.request_size', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.request_size.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.response_code', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.response_code.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_client_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.rtsp_client_cseq.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_cseq_recv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.rtsp_cseq_recv.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_server_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.rtsp_server_cseq.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_session_id', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.rtsp_session_id.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.size_download', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.size_download.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.size_upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.size_upload.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.speed_download', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.speed_download.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.speed_upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.speed_upload.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.ssl_engines', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.ssl_engines.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.ssl_verifyresult', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.ssl_verifyresult.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.starttransfer_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.starttransfer_time.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.total_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.total_time.html', attributes: []},
{name: 'etc.c.curl.CURLINFO', kind: "aliasdeclaration", path: './etc/c/curl/curlinfo.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_DOUBLE', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_double.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_HTTP_CODE', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_htt_p_code.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_LONG', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_long.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_MASK', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_mask.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_SLIST', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_slist.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_STRING', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_string.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_TYPEMASK', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_typemask.html', attributes: []},
{name: 'etc.c.curl.curliocmd', kind: "aliasdeclaration", path: './etc/c/curl/curliocmd.html', attributes: []},
{name: 'etc.c.curl.CurlIoCmd', kind: "enumdeclaration", path: './etc/c/curl/curl_io_cmd.html', attributes: []},
{name: 'etc.c.curl.CurlIoCmd.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_cmd.last.html', attributes: []},
{name: 'etc.c.curl.CurlIoCmd.nop', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_cmd.nop.html', attributes: []},
{name: 'etc.c.curl.CurlIoCmd.restartread', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_cmd.restartread.html', attributes: []},
{name: 'etc.c.curl.curlioerr', kind: "aliasdeclaration", path: './etc/c/curl/curlioerr.html', attributes: []},
{name: 'etc.c.curl.CurlIoError', kind: "enumdeclaration", path: './etc/c/curl/curl_io_error.html', attributes: []},
{name: 'etc.c.curl.CurlIoError.failrestart', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.failrestart.html', attributes: []},
{name: 'etc.c.curl.CurlIoError.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.last.html', attributes: []},
{name: 'etc.c.curl.CurlIoError.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.ok.html', attributes: []},
{name: 'etc.c.curl.CurlIoError.unknowncmd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.unknowncmd.html', attributes: []},
{name: 'etc.c.curl.CurlIpResolve', kind: "enumdeclaration", path: './etc/c/curl/curl_ip_resolve.html', attributes: []},
{name: 'etc.c.curl.CurlIpResolve.v4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ip_resolve.v4.html', attributes: []},
{name: 'etc.c.curl.CurlIpResolve.v6', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ip_resolve.v6.html', attributes: []},
{name: 'etc.c.curl.CurlIpResolve.whatever', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ip_resolve.whatever.html', attributes: []},
{name: 'etc.c.curl.CurlKHMatch', kind: "enumdeclaration", path: './etc/c/curl/curl_kh_match.html', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.last.html', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.mismatch', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.mismatch.html', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.missing', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.missing.html', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.ok.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat', kind: "enumdeclaration", path: './etc/c/curl/curl_kh_stat.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat.defer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.defer.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat.fine', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.fine.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat.fine_add_to_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.fine_add_to_file.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.last.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat.reject', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.reject.html', attributes: []},
{name: 'etc.c.curl.CurlKHType', kind: "enumdeclaration", path: './etc/c/curl/curl_kh_type.html', attributes: []},
{name: 'etc.c.curl.CurlKHType.dss', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.dss.html', attributes: []},
{name: 'etc.c.curl.CurlKHType.rsa', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.rsa.html', attributes: []},
{name: 'etc.c.curl.CurlKHType.rsa1', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.rsa1.html', attributes: []},
{name: 'etc.c.curl.CurlKHType.unknown', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.unknown.html', attributes: []},
{name: 'etc.c.curl.CurlLockAccess', kind: "enumdeclaration", path: './etc/c/curl/curl_lock_access.html', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.last.html', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.none.html', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.shared_access', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.shared_access.html', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.single', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.single.html', attributes: []},
{name: 'etc.c.curl.CurlLockData', kind: "enumdeclaration", path: './etc/c/curl/curl_lock_data.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.connect', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.connect.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.cookie', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.cookie.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.dns', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.dns.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.last.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.none.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.share', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.share.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.ssl_session', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.ssl_session.html', attributes: []},
{name: 'etc.c.curl.CurlM', kind: "enumdeclaration", path: './etc/c/curl/curl.html', attributes: []},
{name: 'etc.c.curl.CurlM.bad_easy_handle', kind: "enummemberdeclaration", path: './etc/c/curl/curl.bad_easy_handle.html', attributes: []},
{name: 'etc.c.curl.CurlM.bad_handle', kind: "enummemberdeclaration", path: './etc/c/curl/curl.bad_handle.html', attributes: []},
{name: 'etc.c.curl.CurlM.bad_socket', kind: "enummemberdeclaration", path: './etc/c/curl/curl.bad_socket.html', attributes: []},
{name: 'etc.c.curl.CurlM.call_multi_perform', kind: "enummemberdeclaration", path: './etc/c/curl/curl.call_multi_perform.html', attributes: []},
{name: 'etc.c.curl.CurlM.internal_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl.internal_error.html', attributes: []},
{name: 'etc.c.curl.CurlM.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl.last.html', attributes: []},
{name: 'etc.c.curl.CurlM.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl.ok.html', attributes: []},
{name: 'etc.c.curl.CurlM.out_of_memory', kind: "enummemberdeclaration", path: './etc/c/curl/curl.out_of_memory.html', attributes: []},
{name: 'etc.c.curl.CurlM.unknown_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl.unknown_option.html', attributes: []},
{name: 'etc.c.curl.CURLM', kind: "aliasdeclaration", path: './etc/c/curl/curlm.html', attributes: []},
{name: 'etc.c.curl.CURLMcode', kind: "aliasdeclaration", path: './etc/c/curl/curl_mcode.html', attributes: []},
{name: 'etc.c.curl.CURLMoption', kind: "aliasdeclaration", path: './etc/c/curl/curl_moption.html', attributes: []},
{name: 'etc.c.curl.CurlMOption', kind: "enumdeclaration", path: './etc/c/curl/curl_m_option.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.lastentry', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.lastentry.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.maxconnects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.maxconnects.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.pipelining', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.pipelining.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.socketdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.socketdata.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.socketfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.socketfunction.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.timerdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.timerdata.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.timerfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.timerfunction.html', attributes: []},
{name: 'etc.c.curl.CURLMsg', kind: "structdeclaration", path: './etc/c/curl/curl_msg.html', attributes: []},
{name: 'etc.c.curl.CURLMsg.data', kind: "variabledeclaration", path: './etc/c/curl/curl_msg.data.html', attributes: []},
{name: 'etc.c.curl.CURLMsg.easy_handle', kind: "variabledeclaration", path: './etc/c/curl/curl_msg.easy_handle.html', attributes: []},
{name: 'etc.c.curl.CURLMsg.msg', kind: "variabledeclaration", path: './etc/c/curl/curl_msg.msg.html', attributes: []},
{name: 'etc.c.curl.CURLMSG', kind: "aliasdeclaration", path: './etc/c/curl/curlmsg.html', attributes: []},
{name: 'etc.c.curl.CurlMsg', kind: "enumdeclaration", path: './etc/c/curl/curl_msg.html', attributes: []},
{name: 'etc.c.curl.CurlMsg.done', kind: "enummemberdeclaration", path: './etc/c/curl/curl_msg.done.html', attributes: []},
{name: 'etc.c.curl.CurlMsg.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_msg.last.html', attributes: []},
{name: 'etc.c.curl.CurlMsg.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_msg.none.html', attributes: []},
{name: 'etc.c.curl.CURLM_CALL_MULTI_SOCKET', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_cal_l_mult_i_socket.html', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption', kind: "enumdeclaration", path: './etc/c/curl/curl_net_rc_option.html', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.ignored', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.ignored.html', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.last.html', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.optional', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.optional.html', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.required', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.required.html', attributes: []},
{name: 'etc.c.curl.CurlOption', kind: "enumdeclaration", path: './etc/c/curl/curl_option.html', attributes: []},
{name: 'etc.c.curl.CurlOption.address_scope', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.address_scope.html', attributes: []},
{name: 'etc.c.curl.CurlOption.append', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.append.html', attributes: []},
{name: 'etc.c.curl.CurlOption.autoreferer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.autoreferer.html', attributes: []},
{name: 'etc.c.curl.CurlOption.buffersize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.buffersize.html', attributes: []},
{name: 'etc.c.curl.CurlOption.cainfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.cainfo.html', attributes: []},
{name: 'etc.c.curl.CurlOption.capath', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.capath.html', attributes: []},
{name: 'etc.c.curl.CurlOption.certinfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.certinfo.html', attributes: []},
{name: 'etc.c.curl.CurlOption.chunk_bgn_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.chunk_bgn_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.chunk_data', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.chunk_data.html', attributes: []},
{name: 'etc.c.curl.CurlOption.chunk_end_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.chunk_end_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.closepolicy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.closepolicy.html', attributes: []},
{name: 'etc.c.curl.CurlOption.connecttimeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.connecttimeout.html', attributes: []},
{name: 'etc.c.curl.CurlOption.connect_only', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.connect_only.html', attributes: []},
{name: 'etc.c.curl.CurlOption.conv_from_network_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.conv_from_network_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.conv_from_utf8_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.conv_from_utf8_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.conv_to_network_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.conv_to_network_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.cookie', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.cookie.html', attributes: []},
{name: 'etc.c.curl.CurlOption.cookiefile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.cookiefile.html', attributes: []},
{name: 'etc.c.curl.CurlOption.cookiejar', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.cookiejar.html', attributes: []},
{name: 'etc.c.curl.CurlOption.cookielist', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.cookielist.html', attributes: []},
{name: 'etc.c.curl.CurlOption.cookiesession', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.cookiesession.html', attributes: []},
{name: 'etc.c.curl.CurlOption.copypostfields', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.copypostfields.html', attributes: []},
{name: 'etc.c.curl.CurlOption.crlf', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.crlf.html', attributes: []},
{name: 'etc.c.curl.CurlOption.crlfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.crlfile.html', attributes: []},
{name: 'etc.c.curl.CurlOption.customrequest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.customrequest.html', attributes: []},
{name: 'etc.c.curl.CurlOption.debugdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.debugdata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.debugfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.debugfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.dirlistonly', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.dirlistonly.html', attributes: []},
{name: 'etc.c.curl.CurlOption.dns_cache_timeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.dns_cache_timeout.html', attributes: []},
{name: 'etc.c.curl.CurlOption.dns_use_global_cache', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.dns_use_global_cache.html', attributes: []},
{name: 'etc.c.curl.CurlOption.egdsocket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.egdsocket.html', attributes: []},
{name: 'etc.c.curl.CurlOption.encoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.encoding.html', attributes: []},
{name: 'etc.c.curl.CurlOption.errorbuffer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.errorbuffer.html', attributes: []},
{name: 'etc.c.curl.CurlOption.failonerror', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.failonerror.html', attributes: []},
{name: 'etc.c.curl.CurlOption.file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.file.html', attributes: []},
{name: 'etc.c.curl.CurlOption.filetime', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.filetime.html', attributes: []},
{name: 'etc.c.curl.CurlOption.fnmatch_data', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.fnmatch_data.html', attributes: []},
{name: 'etc.c.curl.CurlOption.fnmatch_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.fnmatch_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.followlocation', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.followlocation.html', attributes: []},
{name: 'etc.c.curl.CurlOption.forbid_reuse', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.forbid_reuse.html', attributes: []},
{name: 'etc.c.curl.CurlOption.fresh_connect', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.fresh_connect.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftpport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftpport.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftpsslauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftpsslauth.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_account', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_account.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_alternative_to_user', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_alternative_to_user.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_create_missing_dirs', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_create_missing_dirs.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_filemethod', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_filemethod.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_response_timeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_response_timeout.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_skip_pasv_ip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_skip_pasv_ip.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_ssl_ccc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_ssl_ccc.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_use_eprt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_use_eprt.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_use_epsv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_use_epsv.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_use_pret', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ftp_use_pret.html', attributes: []},
{name: 'etc.c.curl.CurlOption.header', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.header.html', attributes: []},
{name: 'etc.c.curl.CurlOption.headerdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.headerdata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.headerfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.headerfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.http200aliases', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.http200aliases.html', attributes: []},
{name: 'etc.c.curl.CurlOption.httpauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.httpauth.html', attributes: []},
{name: 'etc.c.curl.CurlOption.httpget', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.httpget.html', attributes: []},
{name: 'etc.c.curl.CurlOption.httpheader', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.httpheader.html', attributes: []},
{name: 'etc.c.curl.CurlOption.httppost', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.httppost.html', attributes: []},
{name: 'etc.c.curl.CurlOption.httpproxytunnel', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.httpproxytunnel.html', attributes: []},
{name: 'etc.c.curl.CurlOption.http_content_decoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.http_content_decoding.html', attributes: []},
{name: 'etc.c.curl.CurlOption.http_transfer_decoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.http_transfer_decoding.html', attributes: []},
{name: 'etc.c.curl.CurlOption.http_version', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.http_version.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ignore_content_length', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ignore_content_length.html', attributes: []},
{name: 'etc.c.curl.CurlOption.infile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.infile.html', attributes: []},
{name: 'etc.c.curl.CurlOption.infilesize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.infilesize.html', attributes: []},
{name: 'etc.c.curl.CurlOption.infilesize_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.infilesize_large.html', attributes: []},
{name: 'etc.c.curl.CurlOption.interleavedata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.interleavedata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.interleavefunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.interleavefunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.intrface', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.intrface.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ioctldata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ioctldata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ioctlfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ioctlfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ipresolve', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ipresolve.html', attributes: []},
{name: 'etc.c.curl.CurlOption.issuercert', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.issuercert.html', attributes: []},
{name: 'etc.c.curl.CurlOption.keypasswd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.keypasswd.html', attributes: []},
{name: 'etc.c.curl.CurlOption.krblevel', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.krblevel.html', attributes: []},
{name: 'etc.c.curl.CurlOption.lastentry', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.lastentry.html', attributes: []},
{name: 'etc.c.curl.CurlOption.localport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.localport.html', attributes: []},
{name: 'etc.c.curl.CurlOption.localportrange', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.localportrange.html', attributes: []},
{name: 'etc.c.curl.CurlOption.low_speed_limit', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.low_speed_limit.html', attributes: []},
{name: 'etc.c.curl.CurlOption.low_speed_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.low_speed_time.html', attributes: []},
{name: 'etc.c.curl.CurlOption.mail_from', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.mail_from.html', attributes: []},
{name: 'etc.c.curl.CurlOption.mail_rcpt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.mail_rcpt.html', attributes: []},
{name: 'etc.c.curl.CurlOption.maxconnects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.maxconnects.html', attributes: []},
{name: 'etc.c.curl.CurlOption.maxfilesize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.maxfilesize.html', attributes: []},
{name: 'etc.c.curl.CurlOption.maxfilesize_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.maxfilesize_large.html', attributes: []},
{name: 'etc.c.curl.CurlOption.maxredirs', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.maxredirs.html', attributes: []},
{name: 'etc.c.curl.CurlOption.max_recv_speed_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.max_recv_speed_large.html', attributes: []},
{name: 'etc.c.curl.CurlOption.max_send_speed_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.max_send_speed_large.html', attributes: []},
{name: 'etc.c.curl.CurlOption.netrc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.netrc.html', attributes: []},
{name: 'etc.c.curl.CurlOption.netrc_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.netrc_file.html', attributes: []},
{name: 'etc.c.curl.CurlOption.new_directory_perms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.new_directory_perms.html', attributes: []},
{name: 'etc.c.curl.CurlOption.new_file_perms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.new_file_perms.html', attributes: []},
{name: 'etc.c.curl.CurlOption.nobody', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.nobody.html', attributes: []},
{name: 'etc.c.curl.CurlOption.noprogress', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.noprogress.html', attributes: []},
{name: 'etc.c.curl.CurlOption.noproxy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.noproxy.html', attributes: []},
{name: 'etc.c.curl.CurlOption.nosignal', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.nosignal.html', attributes: []},
{name: 'etc.c.curl.CurlOption.opensocketdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.opensocketdata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.opensocketfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.opensocketfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.password', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.password.html', attributes: []},
{name: 'etc.c.curl.CurlOption.port', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.port.html', attributes: []},
{name: 'etc.c.curl.CurlOption.post', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.post.html', attributes: []},
{name: 'etc.c.curl.CurlOption.postfields', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.postfields.html', attributes: []},
{name: 'etc.c.curl.CurlOption.postfieldsize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.postfieldsize.html', attributes: []},
{name: 'etc.c.curl.CurlOption.postfieldsize_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.postfieldsize_large.html', attributes: []},
{name: 'etc.c.curl.CurlOption.postquote', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.postquote.html', attributes: []},
{name: 'etc.c.curl.CurlOption.postredir', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.postredir.html', attributes: []},
{name: 'etc.c.curl.CurlOption.prequote', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.prequote.html', attributes: []},
{name: 'etc.c.curl.CurlOption.private_opt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.private_opt.html', attributes: []},
{name: 'etc.c.curl.CurlOption.progressdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.progressdata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.progressfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.progressfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.protocols', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.protocols.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxy.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxyauth.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxypassword', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxypassword.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxyport.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxytype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxytype.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyusername', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxyusername.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyuserpwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxyuserpwd.html', attributes: []},
{name: 'etc.c.curl.CurlOption.proxy_transfer_mode', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.proxy_transfer_mode.html', attributes: []},
{name: 'etc.c.curl.CurlOption.put', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.put.html', attributes: []},
{name: 'etc.c.curl.CurlOption.quote', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.quote.html', attributes: []},
{name: 'etc.c.curl.CurlOption.random_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.random_file.html', attributes: []},
{name: 'etc.c.curl.CurlOption.range', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.range.html', attributes: []},
{name: 'etc.c.curl.CurlOption.readdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.readdata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.readfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.readfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.redir_protocols', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.redir_protocols.html', attributes: []},
{name: 'etc.c.curl.CurlOption.referer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.referer.html', attributes: []},
{name: 'etc.c.curl.CurlOption.resolve', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.resolve.html', attributes: []},
{name: 'etc.c.curl.CurlOption.resume_from', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.resume_from.html', attributes: []},
{name: 'etc.c.curl.CurlOption.resume_from_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.resume_from_large.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtspheader', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtspheader.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_client_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtsp_client_cseq.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_request', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtsp_request.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_server_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtsp_server_cseq.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_session_id', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtsp_session_id.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_stream_uri', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtsp_stream_uri.html', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_transport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.rtsp_transport.html', attributes: []},
{name: 'etc.c.curl.CurlOption.seekdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.seekdata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.seekfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.seekfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.share', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.share.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sockoptfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sockoptfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.socks5_gssapi_nec', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.socks5_gssapi_nec.html', attributes: []},
{name: 'etc.c.curl.CurlOption.socks5_gssapi_service', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.socks5_gssapi_service.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_auth_types', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssh_auth_types.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_host_public_key_md5', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssh_host_public_key_md5.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_keydata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssh_keydata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_keyfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssh_keyfunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_knownhosts', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssh_knownhosts.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_public_keyfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssh_public_keyfile.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslcert', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslcert.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslcerttype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslcerttype.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslengine', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslengine.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslengine_default', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslengine_default.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslkey', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslkey.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslkeytype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslkeytype.html', attributes: []},
{name: 'etc.c.curl.CurlOption.sslversion', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.sslversion.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_cipher_list', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssl_cipher_list.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_ctx_data', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssl_ctx_data.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_ctx_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssl_ctx_function.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_sessionid_cache', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssl_sessionid_cache.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_verifyhost', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssl_verifyhost.html', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_verifypeer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.ssl_verifypeer.html', attributes: []},
{name: 'etc.c.curl.CurlOption.stderr', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.stderr.html', attributes: []},
{name: 'etc.c.curl.CurlOption.tcp_nodelay', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.tcp_nodelay.html', attributes: []},
{name: 'etc.c.curl.CurlOption.telnetoptions', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.telnetoptions.html', attributes: []},
{name: 'etc.c.curl.CurlOption.tftp_blksize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.tftp_blksize.html', attributes: []},
{name: 'etc.c.curl.CurlOption.timecondition', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.timecondition.html', attributes: []},
{name: 'etc.c.curl.CurlOption.timeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.timeout.html', attributes: []},
{name: 'etc.c.curl.CurlOption.timeout_ms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.timeout_ms.html', attributes: []},
{name: 'etc.c.curl.CurlOption.timevalue', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.timevalue.html', attributes: []},
{name: 'etc.c.curl.CurlOption.tlsauth_password', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.tlsauth_password.html', attributes: []},
{name: 'etc.c.curl.CurlOption.tlsauth_type', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.tlsauth_type.html', attributes: []},
{name: 'etc.c.curl.CurlOption.tlsauth_username', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.tlsauth_username.html', attributes: []},
{name: 'etc.c.curl.CurlOption.transfertext', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.transfertext.html', attributes: []},
{name: 'etc.c.curl.CurlOption.unrestricted_auth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.unrestricted_auth.html', attributes: []},
{name: 'etc.c.curl.CurlOption.upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.upload.html', attributes: []},
{name: 'etc.c.curl.CurlOption.url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.url.html', attributes: []},
{name: 'etc.c.curl.CurlOption.useragent', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.useragent.html', attributes: []},
{name: 'etc.c.curl.CurlOption.username', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.username.html', attributes: []},
{name: 'etc.c.curl.CurlOption.userpwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.userpwd.html', attributes: []},
{name: 'etc.c.curl.CurlOption.use_ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.use_ssl.html', attributes: []},
{name: 'etc.c.curl.CurlOption.verbose', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.verbose.html', attributes: []},
{name: 'etc.c.curl.CurlOption.wildcardmatch', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.wildcardmatch.html', attributes: []},
{name: 'etc.c.curl.CurlOption.writedata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.writedata.html', attributes: []},
{name: 'etc.c.curl.CurlOption.writefunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.writefunction.html', attributes: []},
{name: 'etc.c.curl.CurlOption.writeheader', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.writeheader.html', attributes: []},
{name: 'etc.c.curl.CurlOption.writeinfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.writeinfo.html', attributes: []},
{name: 'etc.c.curl.CURLoption', kind: "aliasdeclaration", path: './etc/c/curl/cur_loption.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_FUNCTIONPOINT', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_functionpoint.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_LONG', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_long.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_OBJECTPOINT', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_objectpoint.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_OFF_T', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_of_f_t.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_HEADERDATA', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_headerdata.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_READDATA', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_readdata.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_RTSPHEADER', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_rtspheader.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_SERVER_RESPONSE_TIMEOUT', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_serve_r_respons_e_timeout.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_WRITEDATA', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_writedata.html', attributes: []},
{name: 'etc.c.curl.CurlPause', kind: "enumdeclaration", path: './etc/c/curl/curl_pause.html', attributes: []},
{name: 'etc.c.curl.CurlPause.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.all.html', attributes: []},
{name: 'etc.c.curl.CurlPause.cont', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.cont.html', attributes: []},
{name: 'etc.c.curl.CurlPause.recv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.recv.html', attributes: []},
{name: 'etc.c.curl.CurlPause.recv_cont', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.recv_cont.html', attributes: []},
{name: 'etc.c.curl.CurlPause.send', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.send.html', attributes: []},
{name: 'etc.c.curl.CurlPause.send_cont', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.send_cont.html', attributes: []},
{name: 'etc.c.curl.CurlPoll', kind: "enumdeclaration", path: './etc/c/curl/curl_poll.html', attributes: []},
{name: 'etc.c.curl.CurlPoll.inout_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.inout_.html', attributes: []},
{name: 'etc.c.curl.CurlPoll.in_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.in_.html', attributes: []},
{name: 'etc.c.curl.CurlPoll.none_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.none_.html', attributes: []},
{name: 'etc.c.curl.CurlPoll.out_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.out_.html', attributes: []},
{name: 'etc.c.curl.CurlPoll.remove_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.remove_.html', attributes: []},
{name: 'etc.c.curl.CurlProto', kind: "enumdeclaration", path: './etc/c/curl/curl_proto.html', attributes: []},
{name: 'etc.c.curl.CurlProto.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.all.html', attributes: []},
{name: 'etc.c.curl.CurlProto.dict', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.dict.html', attributes: []},
{name: 'etc.c.curl.CurlProto.file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.file.html', attributes: []},
{name: 'etc.c.curl.CurlProto.ftp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.ftp.html', attributes: []},
{name: 'etc.c.curl.CurlProto.ftps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.ftps.html', attributes: []},
{name: 'etc.c.curl.CurlProto.gopher', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.gopher.html', attributes: []},
{name: 'etc.c.curl.CurlProto.http', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.http.html', attributes: []},
{name: 'etc.c.curl.CurlProto.https', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.https.html', attributes: []},
{name: 'etc.c.curl.CurlProto.imap', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.imap.html', attributes: []},
{name: 'etc.c.curl.CurlProto.imaps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.imaps.html', attributes: []},
{name: 'etc.c.curl.CurlProto.ldap', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.ldap.html', attributes: []},
{name: 'etc.c.curl.CurlProto.ldaps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.ldaps.html', attributes: []},
{name: 'etc.c.curl.CurlProto.pop3', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.pop3.html', attributes: []},
{name: 'etc.c.curl.CurlProto.pop3s', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.pop3s.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtmp.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtmpe.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtmps.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtmpt.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpte', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtmpte.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpts', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtmpts.html', attributes: []},
{name: 'etc.c.curl.CurlProto.rtsp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.rtsp.html', attributes: []},
{name: 'etc.c.curl.CurlProto.scp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.scp.html', attributes: []},
{name: 'etc.c.curl.CurlProto.sftp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.sftp.html', attributes: []},
{name: 'etc.c.curl.CurlProto.smtp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.smtp.html', attributes: []},
{name: 'etc.c.curl.CurlProto.smtps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.smtps.html', attributes: []},
{name: 'etc.c.curl.CurlProto.telnet', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.telnet.html', attributes: []},
{name: 'etc.c.curl.CurlProto.tftp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.tftp.html', attributes: []},
{name: 'etc.c.curl.CurlProxy', kind: "enumdeclaration", path: './etc/c/curl/curl_proxy.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.http', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.http.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.http_1_0', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.http_1_0.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.socks4.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks4a', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.socks4a.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks5', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.socks5.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks5_hostname', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.socks5_hostname.html', attributes: []},
{name: 'etc.c.curl.CurlReadFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_read_func.html', attributes: []},
{name: 'etc.c.curl.CurlReadFunc.abort', kind: "enummemberdeclaration", path: './etc/c/curl/curl_read_func.abort.html', attributes: []},
{name: 'etc.c.curl.CurlReadFunc.pause', kind: "enummemberdeclaration", path: './etc/c/curl/curl_read_func.pause.html', attributes: []},
{name: 'etc.c.curl.CurlRedir', kind: "enumdeclaration", path: './etc/c/curl/curl_redir.html', attributes: []},
{name: 'etc.c.curl.CurlRedir.get_all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.get_all.html', attributes: []},
{name: 'etc.c.curl.CurlRedir.post_301', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.post_301.html', attributes: []},
{name: 'etc.c.curl.CurlRedir.post_302', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.post_302.html', attributes: []},
{name: 'etc.c.curl.CurlRedir.post_all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.post_all.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq', kind: "enumdeclaration", path: './etc/c/curl/curl_rtsp_req.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.announce', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.announce.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.describe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.describe.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.get_parameter', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.get_parameter.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.last.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.none.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.options', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.options.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.pause', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.pause.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.play', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.play.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.receive', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.receive.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.record', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.record.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.setup', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.setup.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.set_parameter', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.set_parameter.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.teardown', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.teardown.html', attributes: []},
{name: 'etc.c.curl.CurlSeek', kind: "enumdeclaration", path: './etc/c/curl/curl_seek.html', attributes: []},
{name: 'etc.c.curl.CurlSeek.cantseek', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek.cantseek.html', attributes: []},
{name: 'etc.c.curl.CurlSeek.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek.fail.html', attributes: []},
{name: 'etc.c.curl.CurlSeek.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek.ok.html', attributes: []},
{name: 'etc.c.curl.CurlSeekPos', kind: "enumdeclaration", path: './etc/c/curl/curl_seek_pos.html', attributes: []},
{name: 'etc.c.curl.CurlSeekPos.current', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek_pos.current.html', attributes: []},
{name: 'etc.c.curl.CurlSeekPos.end', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek_pos.end.html', attributes: []},
{name: 'etc.c.curl.CurlSeekPos.set', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek_pos.set.html', attributes: []},
{name: 'etc.c.curl.CURLSH', kind: "aliasdeclaration", path: './etc/c/curl/curlsh.html', attributes: []},
{name: 'etc.c.curl.CURLSHcode', kind: "aliasdeclaration", path: './etc/c/curl/curls_hcode.html', attributes: []},
{name: 'etc.c.curl.CurlShError', kind: "enumdeclaration", path: './etc/c/curl/curl_sh_error.html', attributes: []},
{name: 'etc.c.curl.CurlShError.bad_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.bad_option.html', attributes: []},
{name: 'etc.c.curl.CurlShError.invalid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.invalid.html', attributes: []},
{name: 'etc.c.curl.CurlShError.in_use', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.in_use.html', attributes: []},
{name: 'etc.c.curl.CurlShError.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.last.html', attributes: []},
{name: 'etc.c.curl.CurlShError.nomem', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.nomem.html', attributes: []},
{name: 'etc.c.curl.CurlShError.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.ok.html', attributes: []},
{name: 'etc.c.curl.CurlShOption', kind: "enumdeclaration", path: './etc/c/curl/curl_sh_option.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.last.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.lockfunc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.lockfunc.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.none.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.share', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.share.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.unlockfunc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.unlockfunc.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.unshare', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.unshare.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.userdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.userdata.html', attributes: []},
{name: 'etc.c.curl.CURLSHoption', kind: "aliasdeclaration", path: './etc/c/curl/curls_hoption.html', attributes: []},
{name: 'etc.c.curl.CurlSockType', kind: "enumdeclaration", path: './etc/c/curl/curl_sock_type.html', attributes: []},
{name: 'etc.c.curl.CurlSockType.ipcxn', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sock_type.ipcxn.html', attributes: []},
{name: 'etc.c.curl.CurlSockType.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sock_type.last.html', attributes: []},
{name: 'etc.c.curl.curlsocktype', kind: "aliasdeclaration", path: './etc/c/curl/curlsocktype.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_ssh_auth.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.any', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.any.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.host', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.host.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.keyboard', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.keyboard.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.none.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.password', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.password.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.publickey', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.publickey.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion', kind: "enumdeclaration", path: './etc/c/curl/curl_ssl_version.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.default_version', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.default_version.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.last.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.sslv2', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.sslv2.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.sslv3', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.sslv3.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.tlsv1', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.tlsv1.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond', kind: "enumdeclaration", path: './etc/c/curl/curl_time_cond.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.ifmodsince', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.ifmodsince.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.ifunmodsince', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.ifunmodsince.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.last.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.lastmod', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.lastmod.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.none.html', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_tls_auth.html', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_tls_auth.last.html', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_tls_auth.none.html', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth.srp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_tls_auth.srp.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL', kind: "enumdeclaration", path: './etc/c/curl/curl_use_ssl.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.all.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.control', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.control.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.last.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.none.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.tryssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.tryssl.html', attributes: []},
{name: 'etc.c.curl.CurlVer', kind: "enumdeclaration", path: './etc/c/curl/curl_ver.html', attributes: []},
{name: 'etc.c.curl.CurlVer.first', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.first.html', attributes: []},
{name: 'etc.c.curl.CurlVer.fourth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.fourth.html', attributes: []},
{name: 'etc.c.curl.CurlVer.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.last.html', attributes: []},
{name: 'etc.c.curl.CurlVer.second', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.second.html', attributes: []},
{name: 'etc.c.curl.CurlVer.third', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.third.html', attributes: []},
{name: 'etc.c.curl.CurlVersion', kind: "enumdeclaration", path: './etc/c/curl/curl_version.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.asynchdns', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.asynchdns.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.conv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.conv.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.curldebug', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.curldebug.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.dbg', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.dbg.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.gssnegotiate', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.gssnegotiate.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.idn', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.idn.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.ipv6', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.ipv6.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.kerberos4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.kerberos4.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.largefile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.largefile.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.libz', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.libz.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.ntlm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.ntlm.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.spnego', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.spnego.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.ssl.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.sspi', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.sspi.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.tlsauth_srp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.tlsauth_srp.html', attributes: []},
{name: 'etc.c.curl.CURLversion', kind: "aliasdeclaration", path: './etc/c/curl/cur_lversion.html', attributes: []},
{name: 'etc.c.curl.CURLVERSION_NOW', kind: "enummemberdeclaration", path: './etc/c/curl/curlversio_n_now.html', attributes: []},
{name: 'etc.c.curl.curl_calloc_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_calloc_callback.html', attributes: []},
{name: 'etc.c.curl.curl_certinfo', kind: "structdeclaration", path: './etc/c/curl/curl_certinfo.html', attributes: []},
{name: 'etc.c.curl.curl_certinfo.certinfo', kind: "variabledeclaration", path: './etc/c/curl/curl_certinfo.certinfo.html', attributes: []},
{name: 'etc.c.curl.curl_certinfo.num_of_certs', kind: "variabledeclaration", path: './etc/c/curl/curl_certinfo.num_of_certs.html', attributes: []},
{name: 'etc.c.curl.curl_chunk_bgn_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_chunk_bgn_callback.html', attributes: []},
{name: 'etc.c.curl.curl_chunk_end_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_chunk_end_callback.html', attributes: []},
{name: 'etc.c.curl.curl_closepolicy', kind: "aliasdeclaration", path: './etc/c/curl/curl_closepolicy.html', attributes: []},
{name: 'etc.c.curl.curl_conv_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_conv_callback.html', attributes: []},
{name: 'etc.c.curl.curl_debug_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_debug_callback.html', attributes: []},
{name: 'etc.c.curl.curl_easy_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_duphandle', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_duphandle.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_escape', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_escape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_getinfo', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_getinfo.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_init', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_pause', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_pause.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_perform', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_perform.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_recv', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_recv.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_reset', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_reset.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_send', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_send.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_setopt', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_setopt.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_strerror', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_strerror.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_unescape', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_unescape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.CURL_ERROR_SIZE', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_erro_r_size.html', attributes: []},
{name: 'etc.c.curl.curl_escape', kind: "functiondeclaration", path: './etc/c/curl/curl_escape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_fileinfo', kind: "structdeclaration", path: './etc/c/curl/curl_fileinfo.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.b_data', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.b_data.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.b_size', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.b_size.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.b_used', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.b_used.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.filename', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.filename.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.filetype', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.filetype.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.flags', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.flags.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.gid', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.gid.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.hardlinks', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.hardlinks.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.perm', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.perm.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.size', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.size.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.strings', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.strings.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.time', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.time.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.uid', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.uid.html', attributes: []},
{name: 'etc.c.curl.curl_fnmatch_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_fnmatch_callback.html', attributes: []},
{name: 'etc.c.curl.curl_formadd', kind: "functiondeclaration", path: './etc/c/curl/curl_formadd.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_formfree', kind: "functiondeclaration", path: './etc/c/curl/curl_formfree.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_formget', kind: "functiondeclaration", path: './etc/c/curl/curl_formget.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_formget_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_formget_callback.html', attributes: []},
{name: 'etc.c.curl.curl_forms', kind: "structdeclaration", path: './etc/c/curl/curl_forms.html', attributes: []},
{name: 'etc.c.curl.curl_forms.option', kind: "variabledeclaration", path: './etc/c/curl/curl_forms.option.html', attributes: []},
{name: 'etc.c.curl.curl_forms.value', kind: "variabledeclaration", path: './etc/c/curl/curl_forms.value.html', attributes: []},
{name: 'etc.c.curl.curl_free', kind: "functiondeclaration", path: './etc/c/curl/curl_free.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_free_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_free_callback.html', attributes: []},
{name: 'etc.c.curl.curl_ftpauth', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpauth.html', attributes: []},
{name: 'etc.c.curl.curl_ftpccc', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpccc.html', attributes: []},
{name: 'etc.c.curl.curl_ftpcreatedir', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpcreatedir.html', attributes: []},
{name: 'etc.c.curl.curl_ftpmethod', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpmethod.html', attributes: []},
{name: 'etc.c.curl.curl_getdate', kind: "functiondeclaration", path: './etc/c/curl/curl_getdate.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_getenv', kind: "functiondeclaration", path: './etc/c/curl/curl_getenv.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_global_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_global_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_global_init', kind: "functiondeclaration", path: './etc/c/curl/curl_global_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_global_init_mem', kind: "functiondeclaration", path: './etc/c/curl/curl_global_init_mem.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_httppost', kind: "structdeclaration", path: './etc/c/curl/curl_httppost.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.buffer', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.buffer.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.bufferlength', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.bufferlength.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contentheader', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contentheader.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contents', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contents.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contentslength', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contentslength.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contenttype', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contenttype.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.flags', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.flags.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.more', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.more.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.name', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.name.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.namelength', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.namelength.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.next', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.next.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.showfilename', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.showfilename.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.userp', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.userp.html', attributes: []},
{name: 'etc.c.curl.curl_infotype', kind: "aliasdeclaration", path: './etc/c/curl/curl_infotype.html', attributes: []},
{name: 'etc.c.curl.curl_ioctl_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_ioctl_callback.html', attributes: []},
{name: 'etc.c.curl.curl_khkey', kind: "structdeclaration", path: './etc/c/curl/curl_khkey.html', attributes: []},
{name: 'etc.c.curl.curl_khkey.key', kind: "variabledeclaration", path: './etc/c/curl/curl_khkey.key.html', attributes: []},
{name: 'etc.c.curl.curl_khkey.keytype', kind: "variabledeclaration", path: './etc/c/curl/curl_khkey.keytype.html', attributes: []},
{name: 'etc.c.curl.curl_khkey.len', kind: "variabledeclaration", path: './etc/c/curl/curl_khkey.len.html', attributes: []},
{name: 'etc.c.curl.curl_lock_access', kind: "aliasdeclaration", path: './etc/c/curl/curl_lock_access.html', attributes: []},
{name: 'etc.c.curl.curl_lock_data', kind: "aliasdeclaration", path: './etc/c/curl/curl_lock_data.html', attributes: []},
{name: 'etc.c.curl.curl_lock_function', kind: "aliasdeclaration", path: './etc/c/curl/curl_lock_function.html', attributes: []},
{name: 'etc.c.curl.curl_malloc_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_malloc_callback.html', attributes: []},
{name: 'etc.c.curl.CURL_MAX_HTTP_HEADER', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_ma_x_htt_p_header.html', attributes: []},
{name: 'etc.c.curl.CURL_MAX_WRITE_SIZE', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_ma_x_writ_e_size.html', attributes: []},
{name: 'etc.c.curl.curl_multi_add_handle', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_add_handle.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_assign', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_assign.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_fdset', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_fdset.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_info_read', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_info_read.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_init', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_perform', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_perform.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_remove_handle', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_remove_handle.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_setopt', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_setopt.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_socket', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_socket.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_socket_action', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_socket_action.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_socket_all', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_socket_all.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_strerror', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_strerror.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_timeout', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_timeout.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_timer_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_multi_timer_callback.html', attributes: []},
{name: 'etc.c.curl.curl_off_t', kind: "aliasdeclaration", path: './etc/c/curl/curl_off_t.html', attributes: []},
{name: 'etc.c.curl.curl_opensocket_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_opensocket_callback.html', attributes: []},
{name: 'etc.c.curl.curl_progress_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_progress_callback.html', attributes: []},
{name: 'etc.c.curl.curl_proxytype', kind: "aliasdeclaration", path: './etc/c/curl/curl_proxytype.html', attributes: []},
{name: 'etc.c.curl.curl_read_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_read_callback.html', attributes: []},
{name: 'etc.c.curl.curl_realloc_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_realloc_callback.html', attributes: []},
{name: 'etc.c.curl.curl_seek_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_seek_callback.html', attributes: []},
{name: 'etc.c.curl.curl_share_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_share_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_share_init', kind: "functiondeclaration", path: './etc/c/curl/curl_share_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_share_setopt', kind: "functiondeclaration", path: './etc/c/curl/curl_share_setopt.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_share_strerror', kind: "functiondeclaration", path: './etc/c/curl/curl_share_strerror.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_slist', kind: "structdeclaration", path: './etc/c/curl/curl_slist.html', attributes: []},
{name: 'etc.c.curl.curl_slist_append', kind: "functiondeclaration", path: './etc/c/curl/curl_slist_append.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_slist_free_all', kind: "functiondeclaration", path: './etc/c/curl/curl_slist_free_all.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_sockaddr', kind: "structdeclaration", path: './etc/c/curl/curl_sockaddr.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.addr', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.addr.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.addrlen', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.addrlen.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.family', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.family.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.protocol', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.protocol.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.socktype', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.socktype.html', attributes: []},
{name: 'etc.c.curl.curl_socket_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_socket_callback.html', attributes: []},
{name: 'etc.c.curl.curl_socket_t', kind: "aliasdeclaration", path: './etc/c/curl/curl_socket_t.html', attributes: []},
{name: 'etc.c.curl.CURL_SOCKET_TIMEOUT', kind: "aliasdeclaration", path: './etc/c/curl/cur_l_socke_t_timeout.html', attributes: []},
{name: 'etc.c.curl.curl_sockopt_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_sockopt_callback.html', attributes: []},
{name: 'etc.c.curl.curl_sshkeycallback', kind: "aliasdeclaration", path: './etc/c/curl/curl_sshkeycallback.html', attributes: []},
{name: 'etc.c.curl.curl_ssl_ctx_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_ssl_ctx_callback.html', attributes: []},
{name: 'etc.c.curl.curl_strdup_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_strdup_callback.html', attributes: []},
{name: 'etc.c.curl.curl_strequal', kind: "functiondeclaration", path: './etc/c/curl/curl_strequal.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_strnequal', kind: "functiondeclaration", path: './etc/c/curl/curl_strnequal.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_TimeCond', kind: "aliasdeclaration", path: './etc/c/curl/curl__time_cond.html', attributes: []},
{name: 'etc.c.curl.curl_unescape', kind: "functiondeclaration", path: './etc/c/curl/curl_unescape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_unlock_function', kind: "aliasdeclaration", path: './etc/c/curl/curl_unlock_function.html', attributes: []},
{name: 'etc.c.curl.curl_usessl', kind: "aliasdeclaration", path: './etc/c/curl/curl_usessl.html', attributes: []},
{name: 'etc.c.curl.curl_version', kind: "functiondeclaration", path: './etc/c/curl/curl_version.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_version_info', kind: "functiondeclaration", path: './etc/c/curl/curl_version_info.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_version_info_data', kind: "aliasdeclaration", path: './etc/c/curl/curl_version_info_data.html', attributes: []},
{name: 'etc.c.curl.CURL_WRITEFUNC_PAUSE', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_writefun_c_pause.html', attributes: []},
{name: 'etc.c.curl.curl_write_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_write_callback.html', attributes: []},
{name: 'etc.c.curl.fd_set', kind: "aliasdeclaration", path: './etc/c/curl/fd_set.html', attributes: []},
{name: 'etc.c.curl.FUNCTIONPOINT', kind: "aliasdeclaration", path: './etc/c/curl/functionpoint.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_BUFFER', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_buffer.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_CALLBACK', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_callback.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_FILENAME', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_filename.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_PTRBUFFER', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_ptrbuffer.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_PTRCONTENTS', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_ptrcontents.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_PTRNAME', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_ptrname.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_READFILE', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_readfile.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_COPYRIGHT', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_copyright.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_TIMESTAMP', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_timestamp.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_version.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_MAJOR', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_major.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_MINOR', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_minor.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_NUM', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_num.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_PATCH', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_patch.html', attributes: []},
{name: 'etc.c.curl.LONG', kind: "aliasdeclaration", path: './etc/c/curl/long.html', attributes: []},
{name: 'etc.c.curl.OBJECTPOINT', kind: "aliasdeclaration", path: './etc/c/curl/objectpoint.html', attributes: []},
{name: 'etc.c.curl.OFF_T', kind: "aliasdeclaration", path: './etc/c/curl/of_f_t.html', attributes: []},
{name: 'etc.c.curl._N2', kind: "structdeclaration", path: './etc/c/curl/__n2.html', attributes: []},
{name: 'etc.c.curl._N2.group', kind: "variabledeclaration", path: './etc/c/curl/__n2.group.html', attributes: []},
{name: 'etc.c.curl._N2.perm', kind: "variabledeclaration", path: './etc/c/curl/__n2.perm.html', attributes: []},
{name: 'etc.c.curl._N2.target', kind: "variabledeclaration", path: './etc/c/curl/__n2.target.html', attributes: []},
{name: 'etc.c.curl._N2.time', kind: "variabledeclaration", path: './etc/c/curl/__n2.time.html', attributes: []},
{name: 'etc.c.curl._N2.user', kind: "variabledeclaration", path: './etc/c/curl/__n2.user.html', attributes: []},
{name: 'etc.c.curl._N28', kind: "structdeclaration", path: './etc/c/curl/__n28.html', attributes: []},
{name: 'etc.c.curl._N28.age', kind: "variabledeclaration", path: './etc/c/curl/__n28.age.html', attributes: []},
{name: 'etc.c.curl._N28.ares', kind: "variabledeclaration", path: './etc/c/curl/__n28.ares.html', attributes: []},
{name: 'etc.c.curl._N28.features', kind: "variabledeclaration", path: './etc/c/curl/__n28.features.html', attributes: []},
{name: 'etc.c.curl._N28.host', kind: "variabledeclaration", path: './etc/c/curl/__n28.host.html', attributes: []},
{name: 'etc.c.curl._N28.iconv_ver_num', kind: "variabledeclaration", path: './etc/c/curl/__n28.iconv_ver_num.html', attributes: []},
{name: 'etc.c.curl._N28.libidn', kind: "variabledeclaration", path: './etc/c/curl/__n28.libidn.html', attributes: []},
{name: 'etc.c.curl._N28.libssh_version', kind: "variabledeclaration", path: './etc/c/curl/__n28.libssh_version.html', attributes: []},
{name: 'etc.c.curl._N28.libz_version', kind: "variabledeclaration", path: './etc/c/curl/__n28.libz_version.html', attributes: []},
{name: 'etc.c.curl._N28.protocols', kind: "variabledeclaration", path: './etc/c/curl/__n28.protocols.html', attributes: []},
{name: 'etc.c.curl._N28.ssl_version', kind: "variabledeclaration", path: './etc/c/curl/__n28.ssl_version.html', attributes: []},
{name: 'etc.c.curl._N28.ssl_version_num', kind: "variabledeclaration", path: './etc/c/curl/__n28.ssl_version_num.html', attributes: []},
{name: 'etc.c.curl._N28.version_', kind: "variabledeclaration", path: './etc/c/curl/__n28.version_.html', attributes: []},
{name: 'etc.c.curl._N28.version_num', kind: "variabledeclaration", path: './etc/c/curl/__n28.version_num.html', attributes: []},
{name: 'etc.c.curl._N31', kind: "uniondeclaration", path: './etc/c/curl/__n31.html', attributes: []},
{name: 'etc.c.curl._N31.result', kind: "variabledeclaration", path: './etc/c/curl/__n31.result.html', attributes: []},
{name: 'etc.c.curl._N31.whatever', kind: "variabledeclaration", path: './etc/c/curl/__n31.whatever.html', attributes: []},
{name: 'object', kind: "module", path: './object.html', attributes: []},
{name: 'object.assumeSafeAppend', kind: "functiondeclaration", path: './object/assume_safe_append.html', attributes: ["nothrow", "ref", "auto"]},
{name: 'object.capacity', kind: "functiondeclaration", path: './object/capacity.html', attributes: ["pure", "nothrow", "property"]},
{name: 'object.Classinfo', kind: "aliasdeclaration", path: './object/classinfo.html', attributes: []},
{name: 'object.destroy', kind: "functiondeclaration", path: './object/destroy.html', attributes: []},
{name: 'object.dup', kind: "functiondeclaration", path: './object/dup.html', attributes: ["property", "auto"]},
{name: 'object.Error', kind: "classdeclaration", path: './object/error.html', attributes: []},
{name: 'object.Error.this', kind: "functiondeclaration", path: './object/error.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'object.Exception', kind: "classdeclaration", path: './object/exception.html', attributes: []},
{name: 'object.Exception.this', kind: "functiondeclaration", path: './object/exception.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'object.idup', kind: "functiondeclaration", path: './object/idup.html', attributes: ["property"]},
{name: 'object.IMonitor', kind: "aliasdeclaration", path: './object/i_monitor.html', attributes: []},
{name: 'object.Interface', kind: "structdeclaration", path: './object/interface.html', attributes: []},
{name: 'object.Interface.classinfo', kind: "variabledeclaration", path: './object/interface.classinfo.html', attributes: []},
{name: 'object.Interface.offset', kind: "variabledeclaration", path: './object/interface.offset.html', attributes: []},
{name: 'object.Object', kind: "classdeclaration", path: './object/object.html', attributes: []},
{name: 'object.OffsetTypeInfo', kind: "structdeclaration", path: './object/offset_type_info.html', attributes: []},
{name: 'object.OffsetTypeInfo.offset', kind: "variabledeclaration", path: './object/offset_type_info.offset.html', attributes: []},
{name: 'object.OffsetTypeInfo.ti', kind: "variabledeclaration", path: './object/offset_type_info.ti.html', attributes: []},
{name: 'object.opEquals', kind: "functiondeclaration", path: './object/op_equals.html', attributes: []},
{name: 'object.reserve', kind: "functiondeclaration", path: './object/reserve.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'object.RTInfo', kind: "enummemberdeclaration", path: './object/rt_info.html', attributes: []},
{name: 'object.rt_getTraceHandler', kind: "functiondeclaration", path: './object/rt_get_trace_handler.html', attributes: ["extern(C)"]},
{name: 'object.rt_setTraceHandler', kind: "functiondeclaration", path: './object/rt_set_trace_handler.html', attributes: ["extern(C)"]},
{name: 'object.Throwable', kind: "classdeclaration", path: './object/throwable.html', attributes: []},
{name: 'object.TypeInfo', kind: "classdeclaration", path: './object/type_info.html', attributes: []},
{name: 'object.TypeInfo.argTypes', kind: "functiondeclaration", path: './object/type_info.arg_types.html', attributes: ["nothrow", "safe"]},
{name: 'object.TypeInfo.compare', kind: "functiondeclaration", path: './object/type_info.compare.html', attributes: ["const"]},
{name: 'object.TypeInfo.destroy', kind: "functiondeclaration", path: './object/type_info.destroy.html', attributes: ["const"]},
{name: 'object.TypeInfo.equals', kind: "functiondeclaration", path: './object/type_info.equals.html', attributes: ["const"]},
{name: 'object.TypeInfo.flags', kind: "functiondeclaration", path: './object/type_info.flags.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.getHash', kind: "functiondeclaration", path: './object/type_info.get_hash.html', attributes: ["nothrow", "trusted", "const"]},
{name: 'object.TypeInfo.init', kind: "functiondeclaration", path: './object/type_info.init.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.next', kind: "functiondeclaration", path: './object/type_info.next.html', attributes: ["pure", "nothrow", "property", "nogc", "inout"]},
{name: 'object.TypeInfo.offTi', kind: "functiondeclaration", path: './object/type_info.off_ti.html', attributes: ["const"]},
{name: 'object.TypeInfo.postblit', kind: "functiondeclaration", path: './object/type_info.postblit.html', attributes: ["const"]},
{name: 'object.TypeInfo.rtInfo', kind: "functiondeclaration", path: './object/type_info.rt_info.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.swap', kind: "functiondeclaration", path: './object/type_info.swap.html', attributes: ["const"]},
{name: 'object.TypeInfo.talign', kind: "functiondeclaration", path: './object/type_info.talign.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.tsize', kind: "functiondeclaration", path: './object/type_info.tsize.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo_Class', kind: "classdeclaration", path: './object/type_info__class.html', attributes: []},
{name: 'object.TypeInfo_Class.base', kind: "variabledeclaration", path: './object/type_info__class.base.html', attributes: []},
{name: 'object.TypeInfo_Class.create', kind: "functiondeclaration", path: './object/type_info__class.create.html', attributes: ["const"]},
{name: 'object.TypeInfo_Class.find', kind: "functiondeclaration", path: './object/type_info__class.find.html', attributes: ["static"]},
{name: 'object.TypeInfo_Class.interfaces', kind: "variabledeclaration", path: './object/type_info__class.interfaces.html', attributes: []},
{name: 'object.TypeInfo_Class.m_init', kind: "variabledeclaration", path: './object/type_info__class.m_init.html', attributes: []},
{name: 'object.TypeInfo_Class.name', kind: "variabledeclaration", path: './object/type_info__class.name.html', attributes: []},
{name: 'object.TypeInfo_Class.vtbl', kind: "variabledeclaration", path: './object/type_info__class.vtbl.html', attributes: []},
{name: 'object._ArrayEq', kind: "functiondeclaration", path: './object/__array_eq.html', attributes: []},
{name: 'object._d_traceContext', kind: "functiondeclaration", path: './object/_d_trace_context.html', attributes: ["extern(C)"]},
];
